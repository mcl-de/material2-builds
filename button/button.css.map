{"version":3,"sources":["button/button.scss","button/_button-base.scss","core/style/_vendor-prefixes.scss","core/style/_button-common.scss","core/typography/_typography.scss","core/style/_variables.scss","button/button.css","core/style/_elevation.scss","core/a11y/_a11y.scss"],"names":[],"mappings":"AAKA,YAmBA,SAnBa,iBAuBb,cARA,mBCSE,WAAY,WACZ,SAAU,SC5BV,oBAAqB,KACrB,iBAAkB,KAClB,gBAAiB,KACjB,YAAa,KCAb,OAAQ,QACR,QAAS,EACT,OAAQ,KF6BR,QAAS,aACT,YAAa,OACb,gBAAiB,KACjB,eAAgB,SAGhB,UGtCQ,KHuCR,YItCgB,MAAM,CAAE,gBAAgB,CAAE,WJuC1C,YAAa,IACb,WAAY,OAGZ,OAxCkB,EAyClB,UA1CqB,KA2CrB,YAzCuB,KA0CvB,QA7CmB,EAAE,KA8CrB,cA1CyB,IDkBd,sBARK,mBAfP,2BAmBH,wBMCN,6BL8BE,OAAQ,QAGV,2DAAA,wDAAA,gEAAA,6DAAA,kEAEI,QAAS,EDvDf,8BAmBA,2BAnBa,mCAuBb,gCARA,qCC6CI,OAAQ,EDzCZ,SAIA,cARA,mBO2HE,WAA4B,EAAA,IAAA,IAAA,KAAA,cAA0C,CAC3C,EAAA,IAAA,IAAA,EAAA,eAA6C,CAC7C,EAAA,IAAA,IAAA,EAAA,gBNrE3B,UAAW,mBAGX,WAAY,WI9BY,IACO,0BAAgC,CE6GvD,WAA2B,MAAa,wBPvIlD,gCAIA,qCARA,0CO2HE,WAA4B,EAAA,IAAA,IAAA,KAAA,cAA0C,CAC3C,EAAA,IAAA,KAAA,IAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,IAAA,gBP7HX,mBAIV,wBMcN,6BLiDE,WAAY,KDlFhB,sCAAa,2CAIT,WAAY,KACZ,QAAS,EAMb,4CACE,QAAS,EAOX,SOuHE,WAA4B,EAAA,IAAA,IAAA,KAAA,cAA0C,CAC3C,EAAA,IAAA,KAAA,EAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,EAAA,gBN/C3B,UAAW,EAEX,cAhFsB,IAiFtB,MAhFa,KAiFb,OAjFa,KAkFb,QAAS,EAET,YAAa,EDjFf,gCOuHE,WAA4B,EAAA,IAAA,IAAA,KAAA,cAA0C,CAC3C,EAAA,KAAA,KAAA,IAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,IAAA,gBPzH7B,mBAAA,WCwFI,QA1Fc,KA0FI,EAClB,YAhG0B,KDW9B,cOmHE,WAA4B,EAAA,IAAA,IAAA,KAAA,cAA0C,CAC3C,EAAA,IAAA,KAAA,EAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,EAAA,gBN/C3B,UAAW,EAEX,cAhFsB,IAiFtB,MA7EkB,KA8ElB,OA9EkB,KA+ElB,QAAS,EAET,YAAa,ED7Ef,qCOmHE,WAA4B,EAAA,IAAA,IAAA,KAAA,cAA0C,CAC3C,EAAA,KAAA,KAAA,IAAA,eAA6C,CAC7C,EAAA,IAAA,KAAA,IAAA,gBPrH7B,wBAAA,gBCoFI,QAvFmB,IAuFD,EAClB,YAhG0B,KDe9B,iBACE,QAAS,EAGT,UAAW,EAEX,MCvBqB,KDwBrB,OCxBqB,KD0BrB,YAAa,EAEb,YC5BqB,KD6BrB,cC5B8B,IDgBhC,2BAAA,mBAeI,YC9B0B,KDmC9B,YAAiC,iBAApB,mBACX,MAAO,aADT,kCAAiC,uCAApB,yCAGT,eAAgB,OAKA,0BAApB,mBACE,SAAU,SACV,IAAK,EACL,KAAM,EACN,OAAQ,EACR,MAAO,EAMT,0BAGE,iBAAuB,gBACvB,cAAe,QACf,eAAgB,KAChB,QAAS,EAET,WCpE4B,QAAQ,IIoCT,yBAA8B,CJnC7B,iBAAiB,IImClB,0BG3B3B,6CRmDF,0BAcI,iBAAuB,sBAK3B,yBACE,cAAe,IAGf,QAAS,EQ1ET,6CR+EA,YAAmD,SAAlB,iBAA4B,cAAhD,mBACX,QAAS,MAAA","file":"button.css","sourcesContent":["// TODO(jelbourn): Measure perf benefits for translate3d and will-change.\n// TODO(jelbourn): Figure out if anchor hover underline actually happens in any browser.\n@import 'button-base';\n@import '../core/a11y/a11y';\n\n.mat-button, .mat-icon-button {\n  @extend %mat-button-base;\n\n  .mat-button-focus-overlay {\n    transition: none;\n    opacity: 0;\n  }\n}\n\n// Only flat buttons (not raised, fabs or icon buttons) have a hover style.\n// Use the same visual treatment for hover as for focus.\n.mat-button:hover .mat-button-focus-overlay {\n  opacity: 1;\n}\n\n.mat-raised-button {\n  @extend %mat-raised-button;\n}\n\n.mat-fab {\n  @include mat-fab($mat-fab-size, $mat-fab-padding);\n}\n\n.mat-mini-fab {\n  @include mat-fab($mat-mini-fab-size, $mat-mini-fab-padding);\n}\n\n.mat-icon-button {\n  padding: 0;\n\n  // Reset the min-width from the button base.\n  min-width: 0;\n\n  width: $mat-icon-button-size;\n  height: $mat-icon-button-size;\n\n  flex-shrink: 0;\n\n  line-height: $mat-icon-button-size;\n  border-radius: $mat-icon-button-border-radius;\n\n  i, .mat-icon {\n    line-height: $mat-icon-button-line-height;\n  }\n}\n\n// The text and icon should be vertical aligned inside a button\n.mat-button, .mat-raised-button, .mat-icon-button {\n  color: currentColor;\n  .mat-button-wrapper > * {\n    vertical-align: middle;\n  }\n}\n\n// The ripple container should match the bounds of the entire button.\n.mat-button-ripple, .mat-button-focus-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n}\n\n// Overlay to be used as a tint. Note that the same effect can be achieved by using a pseudo\n// element, however we use a proper DOM element in order to be able to disable the default\n// touch action. This makes the buttons more responsive on touch devices.\n.mat-button-focus-overlay {\n  // The button spec calls for focus on raised buttons (and FABs) to be indicated with a\n  // black, 12% opacity shade over the normal color (for both light and dark themes).\n  background-color: rgba(black, 0.12);\n  border-radius: inherit;\n  pointer-events: none;\n  opacity: 0;\n\n  transition: $mat-button-focus-transition;\n\n  @include cdk-high-contrast {\n    // Note that IE will render this in the same way, no\n    // matter whether the theme is light or dark. This helps\n    // with the readability of focused buttons.\n    background-color: rgba(white, 0.5);\n  }\n}\n\n// For round buttons, the ripple container should clip child ripples to a circle.\n.mat-button-ripple-round {\n  border-radius: 50%;\n  // z-index needed to make clipping to border-radius work correctly.\n  // http://stackoverflow.com/questions/20001515/chrome-bug-border-radius-not-clipping-contents-when-combined-with-css-transiti\n  z-index: 1;\n}\n\n// Add an outline to make it more visible in high contrast mode.\n@include cdk-high-contrast {\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-fab, .mat-mini-fab {\n    outline: solid 1px;\n  }\n}\n","@import '../core/style/variables';\n@import '../core/style/elevation';\n@import '../core/style/button-common';\n\n\n// Flat and raised button standards\n$mat-button-padding: 0 16px !default;\n$mat-button-min-width: 88px !default;\n$mat-button-margin: 0 !default;\n$mat-button-line-height: 36px !default;\n$mat-button-border-radius: 2px !default;\n$mat-button-focus-transition: opacity 200ms $swift-ease-in-out-timing-function,\n                              background-color 200ms $swift-ease-in-out-timing-function !default;\n\n// Icon Button standards\n$mat-icon-button-size: 40px !default;\n$mat-icon-button-border-radius: 50% !default;\n$mat-icon-button-line-height: 24px !default;\n\n// Fab standards\n$mat-fab-border-radius: 50% !default;\n$mat-fab-size: 56px !default;\n$mat-fab-padding: 16px !default;\n\n$mat-mini-fab-size: 40px !default;\n$mat-mini-fab-padding: 8px !default;\n\n// Applies base styles to all button types.\n%mat-button-base {\n  box-sizing: border-box;\n  position: relative;\n\n  // Reset browser <button> styles.\n  @include mat-button-reset();\n\n  // Make anchors render like buttons.\n  display: inline-block;\n  white-space: nowrap;\n  text-decoration: none;\n  vertical-align: baseline;\n\n  // Typography.\n  font-size: $mat-body-font-size-base;\n  font-family: $mat-font-family;\n  font-weight: 500;\n  text-align: center;\n\n  // Sizing.\n  margin: $mat-button-margin;\n  min-width: $mat-button-min-width;\n  line-height: $mat-button-line-height;\n  padding: $mat-button-padding;\n  border-radius: $mat-button-border-radius;\n\n  &[disabled] {\n    cursor: default;\n  }\n\n  &.cdk-keyboard-focused {\n    .mat-button-focus-overlay {\n      opacity: 1;\n    }\n  }\n\n  &::-moz-focus-inner {\n    border: 0;\n  }\n}\n\n// Applies styles to buttons with backgrounds: raised, fab, and mini-fab\n%mat-raised-button {\n  @extend %mat-button-base;\n\n  @include mat-elevation(2);\n\n  // Force hardware acceleration.\n  transform: translate3d(0, 0, 0);\n\n  // Animation.\n  transition: background $swift-ease-out-duration $swift-ease-out-timing-function,\n              mat-elevation-transition-property-value();\n\n  &:not([disabled]):active {\n    @include mat-elevation(8);\n  }\n\n  &[disabled] {\n    box-shadow: none;\n  }\n}\n\n// Applies styles to fab and mini-fab button types only\n@mixin mat-fab($size, $padding) {\n  @extend %mat-raised-button;\n\n  @include mat-elevation(6);\n\n  // Reset the min-width from the button base.\n  min-width: 0;\n\n  border-radius: $mat-fab-border-radius;\n  width: $size;\n  height: $size;\n  padding: 0;\n\n  flex-shrink: 0;\n\n  &:not([disabled]):active {\n    @include mat-elevation(12);\n  }\n\n  i, .mat-icon {\n    padding: $padding 0;\n    line-height: $mat-icon-button-line-height;\n  }\n}\n","/* stylelint-disable material/no-prefixes */\n@mixin user-select($value) {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin cursor-grab {\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n/* stylelint-enable */\n","@import './vendor-prefixes';\n\n// Mixin overriding default button styles like the gray background, the border, and the outline.\n@mixin mat-button-reset {\n  @include user-select(none);\n  cursor: pointer;\n  outline: none;\n  border: none;\n}\n","// Implement the rem unit with SCSS so we don't have to actually set a font-size on\n// the user's body element.\n@function rem($multiplier) {\n  $font-size: 10px;\n  @return $multiplier * $font-size;\n}\n","@import '../typography/typography';\n\n\n// Typography\n$mat-body-font-size-base: rem(1.4) !default;\n$mat-font-family: Roboto, 'Helvetica Neue', sans-serif !default;\n\n// Media queries\n// TODO: Find a way to respect media query ranges.\n// TODO: For example the xs-breakpoint should not interfere with the sm-breakpoint.\n$mat-xsmall: 'max-width: 600px';\n$mat-small: 'max-width: 960px';\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Overlay z indices.\n\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000;\n$cdk-z-index-overlay: 1000;\n$cdk-z-index-overlay-backdrop: 1000;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.6);\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n",null,"@import 'variables';\n\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://www.google.com/design/spec/what-is-material/elevation-shadows.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\n// space completely obscured by an object relative to its light source), one for penumbra (the\n// space partially obscured by an object), and one for ambient (the space which contains the object\n// itself). For a further explanation of these terms and their meanings, see\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\n\n$_umbra-color: rgba(black, 0.2);\n$_penumbra-color: rgba(black, 0.14);\n$_ambient-color: rgba(black, 0.12);\n\n// Maps for the different shadow sets and their values within each z-space. These values were\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\n// all of the values between them.\n\n$_umbra-elevation-map: (\n  0: '0px 0px 0px 0px #{$_umbra-color}',\n  1: '0px 2px 1px -1px #{$_umbra-color}',\n  2: '0px 3px 1px -2px #{$_umbra-color}',\n  3: '0px 3px 3px -2px #{$_umbra-color}',\n  4: '0px 2px 4px -1px #{$_umbra-color}',\n  5: '0px 3px 5px -1px #{$_umbra-color}',\n  6: '0px 3px 5px -1px #{$_umbra-color}',\n  7: '0px 4px 5px -2px #{$_umbra-color}',\n  8: '0px 5px 5px -3px #{$_umbra-color}',\n  9: '0px 5px 6px -3px #{$_umbra-color}',\n  10: '0px 6px 6px -3px #{$_umbra-color}',\n  11: '0px 6px 7px -4px #{$_umbra-color}',\n  12: '0px 7px 8px -4px #{$_umbra-color}',\n  13: '0px 7px 8px -4px #{$_umbra-color}',\n  14: '0px 7px 9px -4px #{$_umbra-color}',\n  15: '0px 8px 9px -5px #{$_umbra-color}',\n  16: '0px 8px 10px -5px #{$_umbra-color}',\n  17: '0px 8px 11px -5px #{$_umbra-color}',\n  18: '0px 9px 11px -5px #{$_umbra-color}',\n  19: '0px 9px 12px -6px #{$_umbra-color}',\n  20: '0px 10px 13px -6px #{$_umbra-color}',\n  21: '0px 10px 13px -6px #{$_umbra-color}',\n  22: '0px 10px 14px -6px #{$_umbra-color}',\n  23: '0px 11px 14px -7px #{$_umbra-color}',\n  24: '0px 11px 15px -7px #{$_umbra-color}'\n);\n\n$_penumbra-elevation-map: (\n  0: '0px 0px 0px 0px #{$_penumbra-color}',\n  1: '0px 1px 1px 0px #{$_penumbra-color}',\n  2: '0px 2px 2px 0px #{$_penumbra-color}',\n  3: '0px 3px 4px 0px #{$_penumbra-color}',\n  4: '0px 4px 5px 0px #{$_penumbra-color}',\n  5: '0px 5px 8px 0px #{$_penumbra-color}',\n  6: '0px 6px 10px 0px #{$_penumbra-color}',\n  7: '0px 7px 10px 1px #{$_penumbra-color}',\n  8: '0px 8px 10px 1px #{$_penumbra-color}',\n  9: '0px 9px 12px 1px #{$_penumbra-color}',\n  10: '0px 10px 14px 1px #{$_penumbra-color}',\n  11: '0px 11px 15px 1px #{$_penumbra-color}',\n  12: '0px 12px 17px 2px #{$_penumbra-color}',\n  13: '0px 13px 19px 2px #{$_penumbra-color}',\n  14: '0px 14px 21px 2px #{$_penumbra-color}',\n  15: '0px 15px 22px 2px #{$_penumbra-color}',\n  16: '0px 16px 24px 2px #{$_penumbra-color}',\n  17: '0px 17px 26px 2px #{$_penumbra-color}',\n  18: '0px 18px 28px 2px #{$_penumbra-color}',\n  19: '0px 19px 29px 2px #{$_penumbra-color}',\n  20: '0px 20px 31px 3px #{$_penumbra-color}',\n  21: '0px 21px 33px 3px #{$_penumbra-color}',\n  22: '0px 22px 35px 3px #{$_penumbra-color}',\n  23: '0px 23px 36px 3px #{$_penumbra-color}',\n  24: '0px 24px 38px 3px #{$_penumbra-color}'\n);\n\n$_ambient-elevation-map: (\n  0: '0px 0px 0px 0px #{$_ambient-color}',\n  1: '0px 1px 3px 0px #{$_ambient-color}',\n  2: '0px 1px 5px 0px #{$_ambient-color}',\n  3: '0px 1px 8px 0px #{$_ambient-color}',\n  4: '0px 1px 10px 0px #{$_ambient-color}',\n  5: '0px 1px 14px 0px #{$_ambient-color}',\n  6: '0px 1px 18px 0px #{$_ambient-color}',\n  7: '0px 2px 16px 1px #{$_ambient-color}',\n  8: '0px 3px 14px 2px #{$_ambient-color}',\n  9: '0px 3px 16px 2px #{$_ambient-color}',\n  10: '0px 4px 18px 3px #{$_ambient-color}',\n  11: '0px 4px 20px 3px #{$_ambient-color}',\n  12: '0px 5px 22px 4px #{$_ambient-color}',\n  13: '0px 5px 24px 4px #{$_ambient-color}',\n  14: '0px 5px 26px 4px #{$_ambient-color}',\n  15: '0px 6px 28px 5px #{$_ambient-color}',\n  16: '0px 6px 30px 5px #{$_ambient-color}',\n  17: '0px 6px 32px 5px #{$_ambient-color}',\n  18: '0px 7px 34px 6px #{$_ambient-color}',\n  19: '0px 7px 36px 6px #{$_ambient-color}',\n  20: '0px 8px 38px 7px #{$_ambient-color}',\n  21: '0px 8px 40px 7px #{$_ambient-color}',\n  22: '0px 8px 42px 7px #{$_ambient-color}',\n  23: '0px 9px 44px 8px #{$_ambient-color}',\n  24: '0px 9px 46px 8px #{$_ambient-color}'\n);\n\n\n// The css property used for elevation. In most cases this should not be changed. It is exposed\n// as a variable for abstraction / easy use when needing to reference the property directly, for\n// example in a will-change rule.\n$mat-elevation-property: box-shadow !default;\n\n// The default duration value for elevation transitions.\n$mat-elevation-transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$mat-elevation-transition-timing-function: $mat-fast-out-slow-in-timing-function;\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin mat-elevation($zValue) {\n  @if type-of($zValue) != number or not unitless($zValue) {\n    @error '$zValue must be a unitless number';\n  }\n  @if $zValue < 0 or $zValue > 24 {\n    @error '$zValue must be between 0 and 24';\n  }\n\n  #{$mat-elevation-property}: #{map-get($_umbra-elevation-map, $zValue)},\n                             #{map-get($_penumbra-elevation-map, $zValue)},\n                             #{map-get($_ambient-elevation-map, $zValue)};\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n//   will-change: $mat-elevation-property, opacity;\n// }\n@function mat-elevation-transition-property-value(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  @return #{$mat-elevation-property} #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin mat-elevation-transition(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  transition: mat-elevation-transition-property-value($duration, $easing);\n  will-change: $mat-elevation-property;\n}\n","@mixin cdk-a11y {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    text-transform: none;\n    width: 1px;\n  }\n}\n\n/**\n * Applies styles for users in high contrast mode. Note that this only applies\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n * attribute, however Chrome handles high contrast differently.\n */\n@mixin cdk-high-contrast {\n  @media screen and (-ms-high-contrast: active) {\n    @content;\n  }\n}\n"]}