{"version":3,"sources":["../../../../src/lib/button/button.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,uBAAuB,EACvB,SAAS,EACT,SAAS,EACT,UAAU,EACV,WAAW,EACX,KAAK,EAEL,QAAQ,EACR,iBAAiB,EAClB,MAAM,eAAA,CAAgB;AACvB,OAAO,EAAA,qBAAE,EAAsB,kBAAA,EAAmB,MAAA,SAAA,CAAA;AAClD;;;GAGG;AACH,MAMC;;AAAyC,+BAAA,GAAoC;IAL9E,EAME,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBALvB,QAAQ,EAME,oEAAA;gBALV,IAAI,EAME;oBALJ,oBAAoB,EAME,MAAA;iBALvB;aACF,EAMC,EAAG;CALJ,CAMC;AALF;;GAEG;AAKF,mCAAA,GAAA,MAAA,EAHA,CAAC;AAGF;IACA,gBAAgB;IAChB,oBAAoB,CAAC,UAAU,CAAC;IAChC;;;OAGG;IACH,oBAAoB,CAAC,cAAc,CAAC;AACpC,CAAC;AAED;;;GAGG;AACH,MALC;;AAA+C,qCAAA,GAAoC;IAMpF,EALE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAMvB,QAAQ,EACJ,uDAAuD;oBACvD,2CAA2C;gBAC/C,IAAI,EALE;oBAMJ,2BAA2B,EALE,MAAA;iBAM9B;aACF,EALC,EAAG;CAMJ,CALC;AAMF;;GAEG;AANF,yCAAA,GAAA,MAAA,EAQA,CAAC;AAGF;IACA,gBAAgB;IAChB,0BAA0B,CAAC,UAAU,CAAC;IACtC;;;OAGG;IACH,0BAA0B,CAAC,cAAc,CAAC;AAC1C,CAAC;AAED;;;GAGG;AACH,MAhBC;;AAA6C,mCAAA,GAAoC;IAiBlF,EAhBE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAiBvB,QAAQ,EACJ,wFAAwF;gBAC5F,IAAI,EAhBE;oBAiBJ,yBAAyB,EAhBE,MAAA;iBAiB5B;aACF,EAhBC,EAAG;CAiBJ,CAhBC;AAiBF;;GAEG;AAjBF,uCAAA,GAAA,MAAA,EAmBA,CAAC;AAGF;IACA,gBAAgB;IAChB,wBAAwB,CAAC,UAAU,CAAC;IACpC;;;OAGG;IACH,wBAAwB,CAAC,cAAc,CAAC;AACxC,CAAC;AAED;;;GAGG;AACH,MA3BC;;AAAsC,4BAAA,GAAoC;IA4B3E,EA3BE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBA4BvB,QAAQ,EA3BE,wDAAA;gBA4BV,IAAI,EA3BE;oBA4BJ,iBAAiB,EA3BE,MAAA;iBA4BpB;aACF,EA3BC,EAAG;CA4BJ,CA3BC;AA4BF;;GAEG;AA5BF,gCAAA,GAAA,MAAA,EA8BA,CAAC;AAGF;IACA,gBAAgB;IAChB,iBAAiB,CAAC,UAAU,CAAC;IAC7B;;;OAGG;IACH,iBAAiB,CAAC,cAAc,CAAC;AACjC,CAAC;AAED;;;GAGG;AACH,MAtCC;;AAA0C,gCAAA,GAAoC;IAuC/E,EAtCE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAuCvB,QAAQ,EAtCE,4EAAA;gBAuCV,IAAI,EAtCE;oBAuCJ,sBAAsB,EAtCE,MAAA;iBAuCzB;aACF,EAtCC,EAAG;CAuCJ,CAtCC;AAuCF;;GAEG;AAvCF,oCAAA,GAAA,MAAA,EAyCA,CAAC;AAGF;IACA,gBAAgB;IAChB,qBAAqB,CAAC,UAAU,CAAC;IACjC;;;OAGG;IACH,qBAAqB,CAAC,cAAc,CAAC;AACrC,CAAC;AAED;;GAEG;AACH,MAhDC;IA8ED;;;;OAIG;IACH,YA5DsB,WAAa,EAAoB,SAAW,EAC5C,mBAAqB;QADrB,gBAAA,GAAA,WAAA,CAAa;QAAoB,cAAA,GAAA,SAAA,CAAW;QAC5C,wBAAA,GAAA,mBAAA,CAAqB;QA2BzC,mCAAmC;QACnC,mBAAc,GAhDY,IAAA,CAAK,uBAAC,CAAuB,KAAC,EAAM,UAAA,CAAW,CAAC;QAkD1E,yCAAyC;QACzC,kBAAa,GAhDY,IAAA,CAAK,uBAAC,CAAuB,aAAC,CAAa,CAAC;QAG7D,mBAAA,GAA0B,KAAA,CAAM;QAChC,cAAA,GAAqB,IAAA,CAAK;QA2EhC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACzF,CAAC;IA7BH;;;OAGG;IACH,IA/CG,aAAA,KAAqB,MAAA,CAAO,IAAA,CAAK,cAAC,CAAc,CAAC,CAAA;IAgDpD;;;OAGG;IACH,IAnDG,aAAA,CAAA,CAAA,IAAsB,IAAA,CAAK,cAAC,GAAgB,qBAAA,CAAsB,CAAC,CAAC,CAAC,CAAC,CAAA;IAoDzE;;;OAGG;IACH,IApDG,QAAA,KAAgB,MAAA,CAAO,IAAA,CAAK,SAAC,CAAS,CAAC,CAAA;IAqD1C;;;OAGG;IACH,IAxDG,QAAA,CAAA,KAAA,IAA8B,IAAA,CAAK,SAAC,GAAW,qBAAA,CAAsB,KAAC,CAAK,GAAG,IAAA,GAAO,IAAA,CAAK,CAAC,CAAA;IAmE9F;;OAEG;IACH,WA/DG;QAgEC,IAAI,CA/DC,mBAAC,CAAmB,cAAC,CAAc,IAAC,CAAI,WAAC,CAAW,aAAC,CAAa,CAAC;IAgE1E,CAAC;IACH;;;OAGG;IACH,IAhEG,KAAA,KAAqB,MAAA,CAAO,IAAA,CAAK,MAAC,CAAM,CAAC,CAAA;IAiE5C;;;OAGG;IACH,IApEG,KAAA,CAAA,KAAA,IAA0B,IAAA,CAAK,YAAC,CAAY,KAAC,CAAK,CAAC,CAAC,CAAA;IAqEvD;;;OAGG;IACH,YAvEG,CAAA,QAAA;QAwEC,IAAI,CAvEC,gBAAC,CAAgB,IAAC,CAAI,MAAC,EAAO,KAAA,CAAM,CAAC;QAwE1C,IAAI,CAvEC,gBAAC,CAAgB,QAAC,EAAS,IAAA,CAAK,CAAC;QAwEtC,IAAI,CAvEC,MAAC,GAAQ,QAAA,CAAS;IAwEzB,CAAC;IACH;;;;OAIG;IACH,gBA3EG,CAAA,KAAA,EAAA,KAAA;QA4EC,EAAE,CAAC,CAAC,KA3EC,IAAQ,IAAA,IAAQ,KAAA,IAAS,EAAA,CAAG,CAAC,CAAA;YA4EhC,IAAI,CA3EC,SAAC,CAAS,eAAC,CAAe,IAAC,CAAI,eAAC,EAAe,EAAG,OAAA,KAAQ,EAAK,EAAG,KAAA,CAAM,CAAC;QA4EhF,CAAC;IACH,CAAC;IACH;;;OAGG;IACH,KA7EG;QA8EC,IAAI,CA7EC,SAAC,CAAS,mBAAC,CAAmB,IAAC,CAAI,eAAC,EAAe,EAAG,OAAA,CAAQ,CAAC;IA8EtE,CAAC;IACH;;OAEG;IACH,eA/EG;QAgFC,MAAM,CA/EC,IAAA,CAAK,WAAC,CAAW,aAAC,CAAa;IAgFxC,CAAC;IACH;;OAEG;IACH,iBAjFG;QAkFC,MAAM,CAjFC,IAAA,CAAK,aAAC,IAAgB,IAAA,CAAK,QAAC,CAAQ;IAkF7C,CAAC;IACH;;;;;OAKG;IACH,uBAlFG,CAAA,GAAA,wBAAA;QAmFC,MAAM,CAlFC,wBAAA,CAAyB,IAAC,CAAI,MAAC;YAmFpC,MAAM,gBAAgB,CAlFhB,EAAA,GAAK,IAAA,CAAK,eAAC,EAAe,CAAE;YA4BtC,MAAA,CA1BW,EAAA,CAAG,YAAC,CAAY,KAAC,GAAO,MAAA,CAAO,IAAI,EAAA,CAAG,YAAC,CAAY,MAAC,GAAQ,MAAA,CAAO,CAAC;QAmF7E,CAAC,CAlFC,CAAC;IAmFL,CAAC;;AAjFI,mBAAA,GAAoC;IAmF3C,EAlFE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAmFvB,QAAQ,EAlFE,MAAA,CAAO,EAAC;gBAmFlB,QAAQ,EAlFE,sEAAA;oBAmFA,sCAAsC;oBACtC,yEAAyE;oBACzE,uCAAuC;gBACjD,IAAI,EAlFE;oBAmFJ,YAAY,EAlFE,UAAA;iBAmFf;gBACD,WAAW,EAlFE,aAAA;gBAmFb,SAAS,EAlFE,CAAA,YAAE,CAAY;gBAmFzB,aAAa,EAlFE,iBAAA,CAAkB,IAAC;gBAmFlC,eAAe,EAlFE,uBAAA,CAAwB,MAAC;aAmF3C,EAlFC,EAAG;CAmFJ,CAlFC;AAmFF;;GAEG;AAnFF,uBAAA,GAAA,MAAA;IAqFD,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,QAAQ,GAAG;IAClB,EAAC,IAAI,EAAE,kBAAkB,GAAG;CAC3B,CAAC;AAnFK,uBAAA,GAAyD;IAqFhE,eAAe,EApFE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAqFlC,UAAU,EApFE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAqF7B,OAAO,EApFE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAqFzB,CApFC;AAuFF;IACA,gBAAgB;IAChB,QAAQ,CAAC,UAAU,CAAC;IACpB;;;OAGG;IACH,QAAQ,CAAC,cAAc,CAAC;IACxB,gBAAgB;IAChB,QAAQ,CAAC,cAAc,CAAC;IACxB,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC;IAC1B;;;OAGG;IACH,QAAQ,CAAC,SAAS,CAAC,cAAc,CAAC;IAClC;;;OAGG;IACH,QAAQ,CAAC,SAAS,CAAC,aAAa,CAAC;IACjC;;;OAGG;IACH,QAAQ,CAAC,SAAS,CAAC,cAAc,CAAC;IAClC,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC;IAC7B,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC;IAC/B,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC;IAC7B,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,mBAAmB,CAAC;AACvC,CAAC;AAED;;GAEG;AACH,MAxHC,eAAA,SAAA,QAAA;IAyHD;;;;OAIG;IACH,YA7HG,UAAuB,EAAY,QAAU,EAAU,kBAAoB;QA8H1E,KAAK,CAAC,UAAU,EAAE,QAAQ,EAAE,kBAAkB,CAAC,CAAC;IAClD,CAAC;IACH;;;OAGG;IACH,IA9HG,QAAA;QA+HC,MAAM,CA9HC,IAAA,CAAK,QAAC,GAAU,CAAA,CAAE,GAAG,CAAA,CAAE;IA+HhC,CAAC;IACH;;OAEG;IACH,IAhIG,eAAA;QAiIC,MAAM,CAhIC,IAAA,CAAK,QAAC,GAAU,MAAA,GAAS,OAAA,CAAQ;IAiI1C,CAAC;IACH;;;OAGG;IACH,mBAnIG,CAAA,KAAA;QAoIC,gDAAgD;QAChD,EAAE,CAAC,CAAC,IAnIC,CAAI,QAAC,CAAQ,CAAC,CAAA;YAoIjB,KAAK,CAnIC,cAAC,EAAc,CAAE;YAoIvB,KAAK,CAnIC,wBAAC,EAAwB,CAAE;QAoInC,CAAC;IACH,CAAC;;AAlII,mBAAA,GAAoC;IAoI3C,EAnIE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAoIvB,QAAQ,EAnIE,MAAA,CAAO,EAAC;gBAoIlB,QAAQ,EAnIE;kGAoIsF;gBAChG,IAAI,EAnIE;oBAoIJ,iBAAiB,EAnIE,UAAA;oBAoInB,sBAAsB,EAnIE,iBAAA;oBAoIxB,SAAS,EAnIE,6BAAA;iBAoIZ;gBACD,WAAW,EAnIE,aAAA;gBAoIb,SAAS,EAnIE,CAAA,YAAE,CAAY;gBAoIzB,aAAa,EAnIE,iBAAA,CAAkB,IAAC;aAoInC,EAnIC,EAAG;CAoIJ,CAnIC;AAoIF;;GAEG;AApIF,uBAAA,GAAA,MAAA;IAsID,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,QAAQ,GAAG;IAClB,EAAC,IAAI,EAAE,kBAAkB,GAAG;CAC3B,CAAC;AApIK,uBAAA,GAAyD;IAsIhE,UAAU,EArIE,CAAA,EAAG,IAAA,EAAM,WAAA,EAAa,IAAA,EAAM,CAAA,UAAE,EAAU,EAAG,EAAE;CAsIxD,CArIC;AAwIF;IACA,gBAAgB;IAChB,QAAQ,CAAC,UAAU,CAAC;IACpB;;;OAGG;IACH,QAAQ,CAAC,cAAc,CAAC;IACxB,gBAAgB;IAChB,QAAQ,CAAC,cAAc,CAAC;AACxB,CAAC","file":"button.js","sourceRoot":"","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  Renderer,\n  ViewEncapsulation\n} from '@angular/core';\nimport {coerceBooleanProperty, FocusOriginMonitor} from '../core';\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdButtonCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'button[md-button], button[mat-button], a[md-button], a[mat-button]',\n  host: {\n    '[class.mat-button]': 'true'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdButtonCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdButtonCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdButtonCssMatStyler.ctorParameters;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdRaisedButtonCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'button[md-raised-button], button[mat-raised-button], ' +\n      'a[md-raised-button], a[mat-raised-button]',\n  host: {\n    '[class.mat-raised-button]': 'true'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdRaisedButtonCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdRaisedButtonCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdRaisedButtonCssMatStyler.ctorParameters;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdIconButtonCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'button[md-icon-button], button[mat-icon-button], a[md-icon-button], a[mat-icon-button]',\n  host: {\n    '[class.mat-icon-button]': 'true',\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdIconButtonCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdIconButtonCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdIconButtonCssMatStyler.ctorParameters;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdFabCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'button[md-fab], button[mat-fab], a[md-fab], a[mat-fab]',\n  host: {\n    '[class.mat-fab]': 'true'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdFabCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdFabCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdFabCssMatStyler.ctorParameters;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdMiniFabCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'button[md-mini-fab], button[mat-mini-fab], a[md-mini-fab], a[mat-mini-fab]',\n  host: {\n    '[class.mat-mini-fab]': 'true'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdMiniFabCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMiniFabCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMiniFabCssMatStyler.ctorParameters;\n}\n\n/**\n * Material design button.\n */\nexport class MdButton implements OnDestroy {\nprivate _color: string;\n\n  /** Whether the button is round. */\n  _isRoundButton: boolean = this._hasAttributeWithPrefix('fab', 'mini-fab');\n\n  /** Whether the button is icon button. */\n  _isIconButton: boolean = this._hasAttributeWithPrefix('icon-button');\nprivate _disableRipple: boolean = false;\nprivate _disabled: boolean = null;\n/**\n * Whether the ripple effect for this button is disabled.\n * @return {?}\n */\nget disableRipple() { return this._disableRipple; }\n/**\n * @param {?} v\n * @return {?}\n */\nset disableRipple(v) { this._disableRipple = coerceBooleanProperty(v); }\n/**\n * Whether the button is disabled.\n * @return {?}\n */\nget disabled() { return this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: boolean) { this._disabled = coerceBooleanProperty(value) ? true : null; }\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n * @param {?} _focusOriginMonitor\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer,\nprivate _focusOriginMonitor: FocusOriginMonitor) {\n    this._focusOriginMonitor.monitor(this._elementRef.nativeElement, this._renderer, true);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._focusOriginMonitor.stopMonitoring(this._elementRef.nativeElement);\n  }\n/**\n * The color of the button. Can be `primary`, `accent`, or `warn`.\n * @return {?}\n */\nget color(): string { return this._color; }\n/**\n * @param {?} value\n * @return {?}\n */\nset color(value: string) { this._updateColor(value); }\n/**\n * @param {?} newColor\n * @return {?}\n */\n_updateColor(newColor: string) {\n    this._setElementColor(this._color, false);\n    this._setElementColor(newColor, true);\n    this._color = newColor;\n  }\n/**\n * @param {?} color\n * @param {?} isAdd\n * @return {?}\n */\n_setElementColor(color: string, isAdd: boolean) {\n    if (color != null && color != '') {\n      this._renderer.setElementClass(this._getHostElement(), `mat-${color}`, isAdd);\n    }\n  }\n/**\n * Focuses the button.\n * @return {?}\n */\nfocus(): void {\n    this._renderer.invokeElementMethod(this._getHostElement(), 'focus');\n  }\n/**\n * @return {?}\n */\n_getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n/**\n * @return {?}\n */\n_isRippleDisabled() {\n    return this.disableRipple || this.disabled;\n  }\n/**\n * Gets whether the button has one of the given attributes\n * with either an 'md-' or 'mat-' prefix.\n * @param {...?} unprefixedAttributeNames\n * @return {?}\n */\n_hasAttributeWithPrefix(...unprefixedAttributeNames: string[]) {\n    return unprefixedAttributeNames.some(suffix => {\n      const /** @type {?} */ el = this._getHostElement();\n\n      return el.hasAttribute('md-' + suffix) || el.hasAttribute('mat-' + suffix);\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'button[md-button], button[md-raised-button], button[md-icon-button],' +\n            'button[md-fab], button[md-mini-fab],' +\n            'button[mat-button], button[mat-raised-button], button[mat-icon-button],' +\n            'button[mat-fab], button[mat-mini-fab]',\n  host: {\n    '[disabled]': 'disabled',\n  },\n  templateUrl: 'button.html',\n  styleUrls: ['button.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n{type: FocusOriginMonitor, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'disableRipple': [{ type: Input },],\n'disabled': [{ type: Input },],\n'color': [{ type: Input },],\n};\n}\n\nfunction MdButton_tsickle_Closure_declarations() {\n/** @type {?} */\nMdButton.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdButton.ctorParameters;\n/** @type {?} */\nMdButton.propDecorators;\n/** @type {?} */\nMdButton.prototype._color;\n/**\n * Whether the button is round.\n * @type {?}\n */\nMdButton.prototype._isRoundButton;\n/**\n * Whether the button is icon button.\n * @type {?}\n */\nMdButton.prototype._isIconButton;\n/**\n * Whether the ripple effect on click should be disabled.\n * @type {?}\n */\nMdButton.prototype._disableRipple;\n/** @type {?} */\nMdButton.prototype._disabled;\n/** @type {?} */\nMdButton.prototype._elementRef;\n/** @type {?} */\nMdButton.prototype._renderer;\n/** @type {?} */\nMdButton.prototype._focusOriginMonitor;\n}\n\n/**\n * Raised Material design button.\n */\nexport class MdAnchor extends MdButton {\n/**\n * @param {?} elementRef\n * @param {?} renderer\n * @param {?} focusOriginMonitor\n */\nconstructor(elementRef: ElementRef, renderer: Renderer, focusOriginMonitor: FocusOriginMonitor) {\n    super(elementRef, renderer, focusOriginMonitor);\n  }\n/**\n * \\@docs-private\n * @return {?}\n */\nget tabIndex(): number {\n    return this.disabled ? -1 : 0;\n  }\n/**\n * @return {?}\n */\nget _isAriaDisabled(): string {\n    return this.disabled ? 'true' : 'false';\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_haltDisabledEvents(event: Event) {\n    // A disabled button shouldn't apply any actions\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: `a[md-button], a[md-raised-button], a[md-icon-button], a[md-fab], a[md-mini-fab],\n             a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab], a[mat-mini-fab]`,\n  host: {\n    '[attr.disabled]': 'disabled',\n    '[attr.aria-disabled]': '_isAriaDisabled',\n    '(click)': '_haltDisabledEvents($event)',\n  },\n  templateUrl: 'button.html',\n  styleUrls: ['button.css'],\n  encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n{type: FocusOriginMonitor, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabIndex': [{ type: HostBinding, args: ['tabIndex', ] },],\n};\n}\n\nfunction MdAnchor_tsickle_Closure_declarations() {\n/** @type {?} */\nMdAnchor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdAnchor.ctorParameters;\n/** @type {?} */\nMdAnchor.propDecorators;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}