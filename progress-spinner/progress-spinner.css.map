{"version":3,"sources":["progress-spinner/progress-spinner.scss","core/style/_variables.scss"],"names":[],"mappings":"AAcA,MACE,QAAS,MAGT,OAPmC,MAQnC,MARmC,MASnC,SAAU,OANZ,UAYI,OAAQ,KACR,MAAO,KACP,iBAAkB,OAdtB,WAmBI,KAAM,YAGN,aA3BgC,KA4BhC,WAAY,OCgBS,IANI,0BDjC7B,8BA4BI,mBAtC4B,KAAM,CACU,OAuC5C,eAAgB,oCAAA,CAAA,mCAEhB,0BCCyB,yBAA8B,CDA5B,OAC3B,0BAA2B,SAC3B,WAAY,KAMhB,8CACE,GAAW,UAAW,UACtB,KAAW,UAAW,gBAExB,gDACE,MAAW,UAAW,eACtB,IAAW,UAAW,eACtB,MAAW,UAAW,eACtB,IAAW,UAAW,eACtB,MAAW,UAAW,eACtB,IAAW,UAAW,eACtB,MAAW,UAAW,eACtB,KAAW,UAAW","file":"progress-spinner.css","sourcesContent":["@import '../core/style/variables';\n\n\n// Animation Durations\n$mat-progress-spinner-duration: 5250ms !default;\n$mat-progress-spinner-constant-rotate-duration: $mat-progress-spinner-duration * 0.55 !default;\n$mat-progress-spinner-sporadic-rotate-duration: $mat-progress-spinner-duration !default;\n\n// Component sizing\n$mat-progress-spinner-stroke-width: 10px !default;\n// Height and weight of the viewport for mat-progress-spinner.\n$mat-progress-spinner-viewport-size: 100px !default;\n\n\n:host {\n  display: block;\n  // Height and width are provided for mat-progress-spinner to act as a default.\n  // The height and width are expected to be overwritten by application css.\n  height: $mat-progress-spinner-viewport-size;\n  width: $mat-progress-spinner-viewport-size;\n  overflow: hidden;\n\n  // SVG's viewBox is defined as 0 0 100 100, this means that all SVG children will placed\n  // based on a 100px by 100px box.  Additionally all SVG sizes and locations are in reference to\n  // this viewBox.\n  svg {\n    height: 100%;\n    width: 100%;\n    transform-origin: center;\n  }\n\n\n  path {\n    fill: transparent;\n\n    // Stroke width of 10px defines stroke as 10% of the viewBox.\n    stroke-width: $mat-progress-spinner-stroke-width;\n    transition: stroke $swift-ease-in-duration $ease-in-out-curve-function;\n  }\n\n\n  &[mode='indeterminate'] svg {\n    animation-duration: $mat-progress-spinner-sporadic-rotate-duration,\n    $mat-progress-spinner-constant-rotate-duration;\n    animation-name: mat-progress-spinner-sporadic-rotate,\n                    mat-progress-spinner-linear-rotate;\n    animation-timing-function: $ease-in-out-curve-function,\n                               linear;\n    animation-iteration-count: infinite;\n    transition: none;\n  }\n}\n\n\n// Animations for indeterminate mode\n@keyframes mat-progress-spinner-linear-rotate {\n  0%       { transform: rotate(0deg); }\n  100%     { transform: rotate(360deg); }\n}\n@keyframes mat-progress-spinner-sporadic-rotate {\n  12.5%    { transform: rotate( 135deg); }\n  25%      { transform: rotate( 270deg); }\n  37.5%    { transform: rotate( 405deg); }\n  50%      { transform: rotate( 540deg); }\n  62.5%    { transform: rotate( 675deg); }\n  75%      { transform: rotate( 810deg); }\n  87.5%    { transform: rotate( 945deg); }\n  100%     { transform: rotate(1080deg); }\n}\n","@import '../typography/typography';\n\n\n// Typography\n$mat-body-font-size-base: rem(1.4) !default;\n$mat-font-family: Roboto, 'Helvetica Neue', sans-serif !default;\n\n// Media queries\n// TODO: Find a way to respect media query ranges.\n// TODO: For example the xs-breakpoint should not interfere with the sm-breakpoint.\n$mat-xsmall: 'max-width: 600px';\n$mat-small: 'max-width: 960px';\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Overlay z indices.\n\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000;\n$cdk-z-index-overlay: 1000;\n$cdk-z-index-overlay-backdrop: 1000;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.6);\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n"]}