{"version":3,"sources":["progress-bar/progress-bar.scss","core/style/_variables.scss"],"names":[],"mappings":"AAOA,MACE,QAAS,MAET,OARwB,IASxB,SAAU,OACV,SAAU,SAEV,UAAW,cACX,WAAY,QAX8B,MAWqB,OAC/D,MAAO,KATT,gCAAA,oCAaI,OAAQ,KACR,SAAU,SACV,MAAO,KAfX,mCAqBI,kBAAmB,SACnB,gBAAiB,KAAA,IACjB,QAAS,KAvBb,+BA6BI,iBAAkB,IAAA,KAClB,WAAY,UAjC4B,MAiCyB,IAAI,CACzD,OCeS,IANI,0BDxC7B,kCAqCI,QAAS,KArCb,6BA0CI,UAAW,KACX,iBAAkB,IAAA,KAClB,WAAY,UA/C4B,MA+CyB,IAAI,CACzD,OCCS,IANI,0BDxC7B,oCAkDI,UAAW,KACX,QAAS,GACT,QAAS,aACT,KAAM,EArDV,kBAyDI,UAAW,gBAzDf,iDAAA,yCA+DM,WAAY,KA/DlB,oDAAA,4CAkEM,UAAW,iDAtE0B,GAsEiE,SAAS,OAC/G,KAAM,aAnEZ,iFAAA,yEAsEM,UAAW,6CA1E0B,GA0E6D,SAAS,OAtEjH,sDAAA,8CAyEM,UAAW,mDA7E0B,GA6EmE,SAAS,OACjH,KAAM,YACN,QAAS,MA3Ef,mFAAA,2EA8EM,UAAW,+CAlF0B,GAkF+D,SAAS,OA9EnH,gDAoFM,UAAW,mCAvF2B,MAuFmD,SAAS,OAClG,QAAS,MAOf,yBACE,UAAW,gBAgDb,4DACE,GACE,UAAW,cAEb,IACE,0BA5BsD,iCA6BtD,UAAW,cAEb,OACE,0BA/BsD,uCAgCtD,UAAW,sBAEb,KACE,UAAW,wBAIf,wDACE,GACE,UAAW,YAEb,OACE,0BAxCkD,qCAyClD,UAAW,YAEb,OACE,0BA3CkD,2BA4ClD,UAAW,eAEb,KACE,UAAW,aAKf,8DACE,GACE,0BAnDwD,kCAoDxD,UAAW,cAEb,IACE,0BAtDwD,sCAwDxD,UAAW,sBAEb,OACE,0BA1DwD,kCA2DxD,UAAW,sBAEb,KACE,UAAW,wBAIf,0DACE,GACE,0BAjEoD,kCAkEpD,UAAW,YAEb,OACE,0BApEoD,sCAqEpD,UAAW,cAEb,OACE,0BAvEoD,kCAwEpD,UAAW,eAEb,KACE,UAAW,aAKf,8CACE,GACE,UAAW","file":"progress-bar.css","sourcesContent":["@import '../core/style/variables';\n\n$mat-progress-bar-height: 5px !default;\n$mat-progress-bar-full-animation-duration: 2000ms !default;\n$mat-progress-bar-piece-animation-duration: 250ms !default;\n\n\n:host {\n  display: block;\n  // Height is provided for md-progress-bar to act as a default.\n  height: $mat-progress-bar-height;\n  overflow: hidden;\n  position: relative;\n  // translateZ is added to force the md-progress-bar into its own GPU layer.\n  transform: translateZ(0);\n  transition: opacity $mat-progress-bar-piece-animation-duration linear;\n  width: 100%;\n\n  // Base styles that are re-used across all of the progress bar children.\n  .mat-progress-bar-element, .mat-progress-bar-fill::after {\n    height: 100%;\n    position: absolute;\n    width: 100%;\n  }\n\n  // The progress bar background is used to show the bubble animation scrolling behind a\n  // buffering progress bar.\n  .mat-progress-bar-background {\n    background-repeat: repeat-x;\n    background-size: 10px 4px;\n    display: none;\n  }\n\n  // The progress bar buffer is the bar indicator showing the buffer value and is only visible\n  // beyond the current value of the primary progress bar.\n  .mat-progress-bar-buffer {\n    transform-origin: top left;\n    transition: transform $mat-progress-bar-piece-animation-duration ease,\n                stroke $swift-ease-in-duration $ease-in-out-curve-function;\n  }\n\n  // The secondary progress bar is only used in the indeterminate animation, because of this it\n  // is hidden in other uses.\n  .mat-progress-bar-secondary {\n    display: none;\n  }\n\n  // The progress bar fill fills the progress bar with the indicator color.\n  .mat-progress-bar-fill {\n    animation: none;\n    transform-origin: top left;\n    transition: transform $mat-progress-bar-piece-animation-duration ease,\n                stroke $swift-ease-in-duration $ease-in-out-curve-function;\n  }\n\n  // A pseudo element is created for each progress bar bar that fills with the indicator color.\n  .mat-progress-bar-fill::after {\n    animation: none;\n    content: '';\n    display: inline-block;\n    left: 0;\n  }\n\n  &[mode='query'] {\n    transform: rotateZ(180deg);\n  }\n\n  &[mode='indeterminate'],\n  &[mode='query'] {\n    .mat-progress-bar-fill {\n      transition: none;\n    }\n    .mat-progress-bar-primary {\n      animation: mat-progress-bar-primary-indeterminate-translate $mat-progress-bar-full-animation-duration infinite linear;\n      left: -145.166611%;\n    }\n    .mat-progress-bar-primary.mat-progress-bar-fill::after {\n      animation: mat-progress-bar-primary-indeterminate-scale $mat-progress-bar-full-animation-duration infinite linear;\n    }\n    .mat-progress-bar-secondary {\n      animation: mat-progress-bar-secondary-indeterminate-translate $mat-progress-bar-full-animation-duration infinite linear;\n      left: -54.888891%;\n      display: block;\n    }\n    .mat-progress-bar-secondary.mat-progress-bar-fill::after {\n      animation: mat-progress-bar-secondary-indeterminate-scale $mat-progress-bar-full-animation-duration infinite linear;\n    }\n  }\n\n  &[mode='buffer'] {\n    .mat-progress-bar-background {\n      animation: mat-progress-bar-background-scroll $mat-progress-bar-piece-animation-duration infinite linear;\n      display: block;\n    }\n  }\n}\n\n\n// Reverse the apparent directionality of progress vars for rtl.\n:host-context([dir='rtl']) {\n  transform: rotateY(180deg);\n}\n\n// The values used for animations in md-progress-bar, both timing and transformation, can be\n// considered magic values. They are sourced from the Material Design example spec and duplicate\n// the values of the original designers definitions.\n//\n// The indeterminate state is essentially made up of two progress bars, one primary (the one that\n// is shown in both the determinate and indeterminate states) and one secondary, which essentially\n// mirrors the primary progress bar in appearance but is only shown to assist with the\n// indeterminate animations.\n\n// KEYFRAME BLOCK                      DESCRIPTION\n// primary-indeterminate-translate     Translation of the primary progressbar across the screen\n// primary-indeterminate-scale         Scaling of the primary bar as it's being translated across the screen\n// secondary-indeterminate-translate   Translation of the secondary bar across the screen\n// secondary-indeterminate-scale       Scaling of the secondary bar as it's being translated across the screen\n//\n// Because two different transform animations need to be applied at once, the translation is\n// applied to the outer element and the scaling is applied to the inner element, which provides the\n// illusion necessary to make the animation work.\n\n\n// Progress Bar Timing functions:\n// $mat-progress-bar-primary-indeterminate-translate-step-1 has no timing function.\n$mat-progress-bar-primary-indeterminate-translate-step-2: cubic-bezier(0.5, 0, 0.701732, 0.495819) !default;\n$mat-progress-bar-primary-indeterminate-translate-step-3: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352) !default;\n// $mat-progress-bar-primary-indeterminate-translate-step-4 has no timing function.\n\n// $mat-progress-bar-primary-indeterminate-scale-step-1 has no timing function\n$mat-progress-bar-primary-indeterminate-scale-step-2: cubic-bezier(0.334731, 0.12482, 0.785844, 1) !default;\n$mat-progress-bar-primary-indeterminate-scale-step-3: cubic-bezier(0.06, 0.11, 0.6, 1) !default;\n// $mat-progress-bar-primary-indeterminate-scale-step-4 has no timing function\n\n$mat-progress-bar-secondary-indeterminate-translate-step-1: cubic-bezier(0.15, 0, 0.515058, 0.409685) !default;\n$mat-progress-bar-secondary-indeterminate-translate-step-2: cubic-bezier(0.31033, 0.284058, 0.8, 0.733712) !default;\n$mat-progress-bar-secondary-indeterminate-translate-step-3: cubic-bezier(0.4, 0.627035, 0.6, 0.902026) !default;\n// $mat-progress-bar-secondary-indeterminate-translate-step-4 has no timing function\n\n$mat-progress-bar-secondary-indeterminate-scale-step-1: cubic-bezier(0.15, 0, 0.515058, 0.409685) !default;\n$mat-progress-bar-secondary-indeterminate-scale-step-2: cubic-bezier(0.31033, 0.284058, 0.8, 0.733712) !default;\n$mat-progress-bar-secondary-indeterminate-scale-step-3: cubic-bezier(0.4, 0.627035, 0.6, 0.902026) !default;\n// $mat-progress-bar-secondary-indeterminate-scale-step-4 has no timing function\n\n\n// Animations for indeterminate and query mode.\n\n// Primary indicator.\n@keyframes mat-progress-bar-primary-indeterminate-translate {\n  0% {\n    transform: translateX(0);\n  }\n  20% {\n    animation-timing-function: $mat-progress-bar-primary-indeterminate-translate-step-2;\n    transform: translateX(0);\n  }\n  59.15% {\n    animation-timing-function: $mat-progress-bar-primary-indeterminate-translate-step-3;\n    transform: translateX(83.67142%);\n  }\n  100% {\n    transform: translateX(200.611057%);\n  }\n}\n\n@keyframes mat-progress-bar-primary-indeterminate-scale {\n  0% {\n    transform: scaleX(0.08);\n  }\n  36.65% {\n    animation-timing-function: $mat-progress-bar-primary-indeterminate-scale-step-2;\n    transform: scaleX(0.08);\n  }\n  69.15% {\n    animation-timing-function: $mat-progress-bar-primary-indeterminate-scale-step-3;\n    transform: scaleX(0.661479);\n  }\n  100% {\n    transform: scaleX(0.08);\n  }\n}\n\n// Secondary indicator.\n@keyframes mat-progress-bar-secondary-indeterminate-translate {\n  0% {\n    animation-timing-function: $mat-progress-bar-secondary-indeterminate-translate-step-1;\n    transform: translateX(0);\n  }\n  25% {\n    animation-timing-function: $mat-progress-bar-secondary-indeterminate-translate-step-2;\n\n    transform: translateX(37.651913%);\n  }\n  48.35% {\n    animation-timing-function: $mat-progress-bar-secondary-indeterminate-translate-step-3;\n    transform: translateX(84.386165%);\n  }\n  100% {\n    transform: translateX(160.277782%);\n  }\n}\n\n@keyframes mat-progress-bar-secondary-indeterminate-scale {\n  0% {\n    animation-timing-function: $mat-progress-bar-secondary-indeterminate-scale-step-1;\n    transform: scaleX(0.08);\n  }\n  19.15% {\n    animation-timing-function: $mat-progress-bar-secondary-indeterminate-scale-step-2;\n    transform: scaleX(0.457104);\n  }\n  44.15% {\n    animation-timing-function: $mat-progress-bar-secondary-indeterminate-scale-step-3;\n    transform: scaleX(0.72796);\n  }\n  100% {\n    transform: scaleX(0.08);\n  }\n}\n\n// Animation for buffer mode.\n@keyframes mat-progress-bar-background-scroll {\n  to {\n    transform: translateX(-10px);\n  }\n}\n","@import '../typography/typography';\n\n\n// Typography\n$mat-body-font-size-base: rem(1.4) !default;\n$mat-font-family: Roboto, 'Helvetica Neue', sans-serif !default;\n\n// Media queries\n// TODO: Find a way to respect media query ranges.\n// TODO: For example the xs-breakpoint should not interfere with the sm-breakpoint.\n$mat-xsmall: 'max-width: 600px';\n$mat-small: 'max-width: 960px';\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Overlay z indices.\n\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000;\n$cdk-z-index-overlay: 1000;\n$cdk-z-index-overlay-backdrop: 1000;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.6);\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n"]}