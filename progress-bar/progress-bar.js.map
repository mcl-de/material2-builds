{"version":3,"sources":["../../../../src/lib/progress-bar/progress-bar.ts"],"names":[],"mappings":"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","file":"progress-bar.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  ChangeDetectionStrategy,\n  HostBinding,\n  Input,\n} from '@angular/core';\n/**\n * <md-progress-bar> component.\n */\nexport class MdProgressBar {\n  /** Color of the progress bar. */\n   color: 'primary' | 'accent' | 'warn' = 'primary';\nprivate _value: number = 0;\n/**\n * Value of the progressbar. Defaults to zero. Mirrored to aria-valuenow.\n * @return {?}\n */\nget value() { return this._value; }\n/**\n * @param {?} v\n * @return {?}\n */\nset value(v: number) { this._value = clamp(v || 0); }\nprivate _bufferValue: number = 0;\n/**\n * Buffer value of the progress bar. Defaults to zero.\n * @return {?}\n */\nget bufferValue() { return this._bufferValue; }\n/**\n * @param {?} v\n * @return {?}\n */\nset bufferValue(v: number) { this._bufferValue = clamp(v || 0); }\n\n  /**\n   * Mode of the progress bar.\n   *\n   * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n   * 'determinate'.\n   * Mirrored to mode attribute.\n   */\n  \n  \n  mode: 'determinate' | 'indeterminate' | 'buffer' | 'query' = 'determinate';\n/**\n * Gets the current transform value for the progress bar's primary indicator.\n * @return {?}\n */\n_primaryTransform() {\n    let /** @type {?} */ scale = this.value / 100;\n    return {transform: `scaleX(${scale})`};\n  }\n/**\n * Gets the current transform value for the progress bar's buffer indicator.  Only used if the\n * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n * @return {?}\n */\n_bufferTransform() {\n    if (this.mode == 'buffer') {\n      let /** @type {?} */ scale = this.bufferValue / 100;\n      return {transform: `scaleX(${scale})`};\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-progress-bar, mat-progress-bar',\n  host: {\n    'role': 'progressbar',\n    'aria-valuemin': '0',\n    'aria-valuemax': '100',\n    '[class.mat-primary]': 'color == \"primary\"',\n    '[class.mat-accent]': 'color == \"accent\"',\n    '[class.mat-warn]': 'color == \"warn\"',\n    '[class.mat-progress-bar]': 'true',\n  },\n  templateUrl: 'progress-bar.html',\n  styleUrls: ['progress-bar.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'color': [{ type: Input },],\n'value': [{ type: Input },{ type: HostBinding, args: ['attr.aria-valuenow', ] },],\n'bufferValue': [{ type: Input },],\n'mode': [{ type: Input },{ type: HostBinding, args: ['attr.mode', ] },],\n};\n}\n\nfunction MdProgressBar_tsickle_Closure_declarations() {\n/** @type {?} */\nMdProgressBar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdProgressBar.ctorParameters;\n/** @type {?} */\nMdProgressBar.propDecorators;\n/**\n * Color of the progress bar.\n * @type {?}\n */\nMdProgressBar.prototype.color;\n/** @type {?} */\nMdProgressBar.prototype._value;\n/** @type {?} */\nMdProgressBar.prototype._bufferValue;\n/**\n * Mode of the progress bar.\n * \n * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n * 'determinate'.\n * Mirrored to mode attribute.\n * @type {?}\n */\nMdProgressBar.prototype.mode;\n}\n\n/**\n * Clamps a value to be between two numbers, by default 0 and 100.\n * @param {?} v\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nfunction clamp(v: number, min = 0, max = 100) {\n  return Math.max(min, Math.min(max, v));\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}