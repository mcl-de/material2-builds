{"version":3,"sources":["list/list.scss","core/style/_variables.scss","core/style/_list-common.scss"],"names":[],"mappings":"AA+GA,UAAW,cACT,YAvGqB,IAwGrB,QAAS,MAFX,yBAAW,6BAfT,QAAS,MACT,WAAY,WACZ,OArFqB,KAsFrB,QA/FsB,KAgGtB,OAAQ,EAER,YCjGgB,MAAM,CAAE,gBAAgB,CAAE,WDkG1C,UA5FwB,KA6FxB,YAAa,IAOf,qCAAW,yCAJP,WAlGmB,KAsGvB,yBAAW,6BA5ET,QAAS,MAET,gDAAA,oDACE,QAAS,KACT,eAAgB,IAChB,YAAa,OACb,YCpCc,MAAM,CAAE,gBAAgB,CAAE,WDqCxC,WAAY,WACZ,UAjCiB,KAkCjB,OA/BmB,KAgCnB,QAAS,EAzCW,KA0CpB,SAAU,SAGW,qEAAA,yEACrB,OAnCqB,KAsCV,2DAAA,+DACX,OArCuB,KAyCZ,2DAAA,+DACX,OAzCyB,KA8CV,+DAAA,mEACf,OAAQ,KACR,QAAS,IA9DW,KAiEtB,wCAAA,4CEhCA,QAAS,KACT,eAAgB,OAChB,MAAO,KACP,WAAY,WACZ,SAAU,OF8BR,QAAS,EAnEW,KA2GxB,0CAAW,8CErFP,OAAQ,EACR,QAAS,EACT,YAAa,IACb,UAAW,QFwCb,8CAAA,kDEvBE,QAAS,KFuBX,oDAAA,wDAKI,QAAS,EAIb,0CAAA,8CACE,YAAa,EACb,MA3EmB,KA4EnB,OA5EmB,KA6EnB,cAAe,IAGjB,wCAAA,4CACE,MAhFiB,KAiFjB,OAjFiB,KAkFjB,cAAe,IACf,QAAS,IAsBb,mCAAW,uCE5GT,YAAa,OACb,SAAU,OACV,cAAe,SAQb,QAAS,MACT,WAAY,WFiGhB,kDAAW,sDE7FL,UFPoB,KA+H1B,iBAAkB,qBAChB,YAtHsB,IAuHtB,QAAS,MAFX,gCAAkB,oCA1ChB,QAAS,MACT,WAAY,WACZ,OA3EsB,KA4EtB,QA/FsB,KAgGtB,OAAQ,EAER,YCjGgB,MAAM,CAAE,gBAAgB,CAAE,WDkG1C,UAjFoB,KAkFpB,YAAa,IAkCf,4CAAkB,gDA/Bd,WAtFoB,KAqHxB,gCAAkB,oCAvGhB,QAAS,MAET,uDAAA,2DACE,QAAS,KACT,eAAgB,IAChB,YAAa,OACb,YCpCc,MAAM,CAAE,gBAAgB,CAAE,WDqCxC,WAAY,WACZ,UArBkB,KAsBlB,OArBoB,KAsBpB,QAAS,EAzCW,KA0CpB,SAAU,SAGW,4EAAA,gFACrB,OA1BsB,KA6BX,kEAAA,sEACX,OA7BwB,KAiCb,kEAAA,sEACX,OAjC0B,KAsCX,sEAAA,0EACf,OAAQ,KACR,QAAS,IA9DW,KAiEtB,+CAAA,mDEhCA,QAAS,KACT,eAAgB,OAChB,MAAO,KACP,WAAY,WACZ,SAAU,OF8BR,QAAS,EAnEW,KAsIxB,iDAAkB,qDEhHd,OAAQ,EACR,QAAS,EACT,YAAa,IACb,UAAW,QFwCb,qDAAA,yDEvBE,QAAS,KFuBX,2DAAA,+DAKI,QAAS,EAIb,iDAAA,qDACE,YAAa,EACb,MA3EmB,KA4EnB,OA5EmB,KA6EnB,cAAe,IAGjB,+CAAA,mDACE,MAhFiB,KAiFjB,OAjFiB,KAkFjB,cAAe,IACf,QAAS,IAiDb,0CAAkB,8CEvIhB,YAAa,OACb,SAAU,OACV,cAAe,SAQb,QAAS,MACT,WAAY,WF4HhB,yDAAkB,6DExHZ,UFIgB,KA6ItB,aACE,QAAS,MACT,iBAAkB,MAClB,iBAAkB,IAClB,OAAQ,EAGV,gBAEI,gBAAiB,KACjB,MAAO,QAHX,qCAOI,OAAQ,QAPZ,yDAAA,2CAUM,QAAS","file":"list.css","sourcesContent":["@import '../core/style/variables';\n@import '../core/style/list-common';\n\n\n$mat-list-side-padding: 16px;\n$mat-list-avatar-size: 40px;\n$mat-list-icon-size: 24px;\n\n// Normal list variables\n$mat-list-top-padding: 8px;\n$mat-list-font-size: 16px;\n$mat-list-secondary-font: 14px;\n// height for single-line lists\n$mat-list-base-height: 48px;\n// height for single-line lists with avatars\n$mat-list-avatar-height: 56px;\n// spec requires two- and three-line lists be taller\n$mat-list-two-line-height: 72px;\n$mat-list-three-line-height: 88px;\n\n// Dense list variables\n$mat-dense-top-padding: 4px;\n$mat-dense-font-size: 13px;\n$mat-dense-base-height: 40px;\n$mat-dense-avatar-height: 48px;\n$mat-dense-two-line-height: 60px;\n$mat-dense-three-line-height: 76px;\n\n// This mixin provides all list-item styles, changing font size and height\n// based on whether the list is in dense mode.\n@mixin mat-list-item-base($font-size, $base-height, $avatar-height,\n  $two-line-height, $three-line-height) {\n\n  // Prevents the wrapper `mat-list-item-content` from collapsing due to it\n  // being `inline` by default.\n  display: block;\n\n  .mat-list-item-content {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    font-family: $mat-font-family;\n    box-sizing: border-box;\n    font-size: $font-size;\n    height: $base-height;\n    padding: 0 $mat-list-side-padding;\n    position: relative;\n  }\n\n  &.mat-list-item-avatar .mat-list-item-content {\n    height: $avatar-height;\n  }\n\n  &.mat-2-line .mat-list-item-content {\n    height: $two-line-height;\n  }\n\n\n  &.mat-3-line .mat-list-item-content {\n    height: $three-line-height;\n  }\n\n  // list items with more than 3 lines should expand to match\n  // the height of its contained text\n  &.mat-multi-line .mat-list-item-content {\n    height: 100%;\n    padding: 8px $mat-list-side-padding;\n  }\n\n  .mat-list-text {\n    @include mat-line-wrapper-base();\n    padding: 0 $mat-list-side-padding;\n\n    &:first-child {\n      padding: 0;\n    }\n  }\n\n  .mat-list-avatar {\n    flex-shrink: 0;\n    width: $mat-list-avatar-size;\n    height: $mat-list-avatar-size;\n    border-radius: 50%;\n  }\n\n  .mat-list-icon {\n    width: $mat-list-icon-size;\n    height: $mat-list-icon-size;\n    border-radius: 50%;\n    padding: 4px;\n  }\n}\n\n// This mixin provides all subheader styles, adjusting heights and padding\n// based on whether the list is in dense mode.\n@mixin mat-subheader-base($top-padding, $secondary-size, $base-height) {\n  display: block;\n  box-sizing: border-box;\n  height: $base-height;\n  padding: $mat-list-side-padding;\n  margin: 0;\n\n  font-family: $mat-font-family;\n  font-size: $secondary-size;\n  font-weight: 500;\n\n  &:first-child {\n    margin-top: -$top-padding;\n  }\n}\n\n.mat-list, .mat-nav-list {\n  padding-top: $mat-list-top-padding;\n  display: block;\n\n  .mat-subheader {\n    @include mat-subheader-base(\n      $mat-list-top-padding,\n      $mat-list-secondary-font,\n      $mat-list-base-height\n    );\n  }\n\n\n  .mat-list-item {\n    @include mat-list-item-base(\n      $mat-list-font-size,\n      $mat-list-base-height,\n      $mat-list-avatar-height,\n      $mat-list-two-line-height,\n      $mat-list-three-line-height\n    );\n\n    @include mat-line-base($mat-list-secondary-font);\n  }\n}\n\n\n.mat-list[dense], .mat-nav-list[dense] {\n  padding-top: $mat-dense-top-padding;\n  display: block;\n\n  .mat-subheader {\n    @include mat-subheader-base(\n      $mat-dense-top-padding,\n      $mat-dense-font-size,\n      $mat-dense-base-height\n    );\n  }\n\n  .mat-list-item {\n    @include mat-list-item-base(\n      $mat-dense-font-size,\n      $mat-dense-base-height,\n      $mat-dense-avatar-height,\n      $mat-dense-two-line-height,\n      $mat-dense-three-line-height\n    );\n\n    @include mat-line-base($mat-dense-font-size);\n  }\n}\n\n.mat-divider {\n  display: block;\n  border-top-style: solid;\n  border-top-width: 1px;\n  margin: 0;\n}\n\n.mat-nav-list {\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n\n  .mat-list-item-content {\n    cursor: pointer;\n\n    &:hover, &.mat-list-item-focus {\n      outline: none;\n    }\n  }\n}\n","@import '../typography/typography';\n\n\n// Typography\n$mat-body-font-size-base: rem(1.4) !default;\n$mat-font-family: Roboto, 'Helvetica Neue', sans-serif !default;\n\n// Media queries\n// TODO: Find a way to respect media query ranges.\n// TODO: For example the xs-breakpoint should not interfere with the sm-breakpoint.\n$mat-xsmall: 'max-width: 600px';\n$mat-small: 'max-width: 960px';\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Overlay z indices.\n\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000;\n$cdk-z-index-overlay: 1000;\n$cdk-z-index-overlay-backdrop: 1000;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.6);\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n","// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin mat-truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin mat-line-base($secondary-font-size) {\n  .mat-line {\n    @include mat-truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin mat-normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin mat-line-wrapper-base() {\n  @include mat-normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n"]}