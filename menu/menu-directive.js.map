{"version":3,"sources":["../../../../src/lib/menu/menu-directive.ts"],"names":[],"mappings":"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","file":"menu-directive.js","sourceRoot":"","sourcesContent":["// TODO(kara): prevent-close functionality\n\n\nimport {\n  AfterContentInit,\n  Attribute,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\nimport {MdMenuInvalidPositionX, MdMenuInvalidPositionY} from './menu-errors';\nimport {MdMenuItem} from './menu-item';\nimport {FocusKeyManager} from '../core/a11y/focus-key-manager';\nimport {MdMenuPanel} from './menu-panel';\nimport {Subscription} from 'rxjs/Subscription';\nimport {transformMenu, fadeInItems} from './menu-animations';\nexport class MdMenu implements AfterContentInit, MdMenuPanel, OnDestroy {\nprivate _keyManager: FocusKeyManager;\n/**\n * Subscription to tab events on the menu panel\n */\nprivate _tabSubscription: Subscription;\n/**\n * Config object to be passed into the menu's ngClass\n */\n_classList: any = {};\n/**\n * Position of the menu in the X axis.\n */\npositionX: MenuPositionX = 'after';\n/**\n * Position of the menu in the Y axis.\n */\npositionY: MenuPositionY = 'below';\n\n   templateRef: TemplateRef<any>;\n   items: QueryList<MdMenuItem>;\n   overlapTrigger = true;\n/**\n * @param {?} posX\n * @param {?} posY\n * @param {?} deprecatedPosX\n * @param {?} deprecatedPosY\n */\nconstructor( posX: MenuPositionX,\n               posY: MenuPositionY,\n               deprecatedPosX: MenuPositionX,\n               deprecatedPosY: MenuPositionY) {\n\n    // TODO(kara): Remove kebab-case attributes after next release\n    if (deprecatedPosX) { this._setPositionX(deprecatedPosX); }\n    if (deprecatedPosY) { this._setPositionY(deprecatedPosY); }\n\n    if (posX) { this._setPositionX(posX); }\n    if (posY) { this._setPositionY(posY); }\n    this.setPositionClasses(this.positionX, this.positionY);\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._keyManager = new FocusKeyManager(this.items).withWrap();\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => {\n      this._emitCloseEvent();\n    });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._tabSubscription) {\n      this._tabSubscription.unsubscribe();\n    }\n  }\n/**\n * This method takes classes set on the host md-menu element and applies them on the\n * menu template that displays in the overlay container.  Otherwise, it's difficult\n * to style the containing menu from outside the component.\n * @param {?} classes list of class names\n * @return {?}\n */\nset classList(classes: string) {\n    this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n      obj[className] = true;\n      return obj;\n    }, {});\n    this.setPositionClasses(this.positionX, this.positionY);\n  }\n/**\n * Event emitted when the menu is closed.\n */\nclose = new EventEmitter<void>();\n/**\n * Focus the first item in the menu. This method is used by the menu trigger\n * to focus the first item when the menu is opened by the ENTER key.\n * @return {?}\n */\nfocusFirstItem() {\n    this._keyManager.setFirstItemActive();\n  }\n/**\n * This emits a close event to which the trigger is subscribed. When emitted, the\n * trigger will close the menu.\n * @return {?}\n */\n_emitCloseEvent(): void {\n    this.close.emit();\n  }\n/**\n * @param {?} pos\n * @return {?}\n */\nprivate _setPositionX(pos: MenuPositionX): void {\n    if (pos !== 'before' && pos !== 'after') {\n      throw new MdMenuInvalidPositionX();\n    }\n    this.positionX = pos;\n  }\n/**\n * @param {?} pos\n * @return {?}\n */\nprivate _setPositionY(pos: MenuPositionY): void {\n    if (pos !== 'above' && pos !== 'below') {\n      throw new MdMenuInvalidPositionY();\n    }\n    this.positionY = pos;\n  }\n/**\n * It's necessary to set position-based classes to ensure the menu panel animation\n * folds out from the correct direction.\n * @param {?} posX\n * @param {?} posY\n * @return {?}\n */\nsetPositionClasses(posX: MenuPositionX, posY: MenuPositionY): void {\n    this._classList['mat-menu-before'] = posX == 'before';\n    this._classList['mat-menu-after'] = posX == 'after';\n    this._classList['mat-menu-above'] = posY == 'above';\n    this._classList['mat-menu-below'] = posY == 'below';\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-menu, mat-menu',\n  host: {'role': 'menu'},\n  templateUrl: 'menu.html',\n  styleUrls: ['menu.css'],\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    transformMenu,\n    fadeInItems\n  ],\n  exportAs: 'mdMenu'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Attribute, args: ['xPosition', ] }, ]},\n{type: undefined, decorators: [{ type: Attribute, args: ['yPosition', ] }, ]},\n{type: undefined, decorators: [{ type: Attribute, args: ['x-position', ] }, ]},\n{type: undefined, decorators: [{ type: Attribute, args: ['y-position', ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'templateRef': [{ type: ViewChild, args: [TemplateRef, ] },],\n'items': [{ type: ContentChildren, args: [MdMenuItem, ] },],\n'overlapTrigger': [{ type: Input },],\n'classList': [{ type: Input, args: ['class', ] },],\n'close': [{ type: Output },],\n};\n}\n\nfunction MdMenu_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMenu.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMenu.ctorParameters;\n/** @type {?} */\nMdMenu.propDecorators;\n/** @type {?} */\nMdMenu.prototype._keyManager;\n/**\n * Subscription to tab events on the menu panel\n * @type {?}\n */\nMdMenu.prototype._tabSubscription;\n/**\n * Config object to be passed into the menu's ngClass\n * @type {?}\n */\nMdMenu.prototype._classList;\n/**\n * Position of the menu in the X axis.\n * @type {?}\n */\nMdMenu.prototype.positionX;\n/**\n * Position of the menu in the Y axis.\n * @type {?}\n */\nMdMenu.prototype.positionY;\n/** @type {?} */\nMdMenu.prototype.templateRef;\n/** @type {?} */\nMdMenu.prototype.items;\n/** @type {?} */\nMdMenu.prototype.overlapTrigger;\n/**\n * Event emitted when the menu is closed.\n * @type {?}\n */\nMdMenu.prototype.close;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}