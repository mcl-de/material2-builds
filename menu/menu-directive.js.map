{"version":3,"sources":["../../../../src/lib/menu/menu-directive.ts"],"names":[],"mappings":"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","file":"menu-directive.js","sourceRoot":"","sourcesContent":["// TODO(kara): prevent-close functionality\n\n\nimport {\n  AfterContentInit,\n  Attribute,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\nimport {MdMenuInvalidPositionX, MdMenuInvalidPositionY} from './menu-errors';\nimport {MdMenuItem} from './menu-item';\nimport {FocusKeyManager} from '../core/a11y/focus-key-manager';\nimport {MdMenuPanel} from './menu-panel';\nimport {Subscription} from 'rxjs/Subscription';\nimport {transformMenu, fadeInItems} from './menu-animations';\nexport class MdMenu implements AfterContentInit, MdMenuPanel, OnDestroy {\nprivate _keyManager: FocusKeyManager;\nprivate _tabSubscription: Subscription;\n\n  /** Config object to be passed into the menu's ngClass */\n  _classList: any = {};\n\n  /** Position of the menu in the X axis. */\n  positionX: MenuPositionX = 'after';\n\n  /** Position of the menu in the Y axis. */\n  positionY: MenuPositionY = 'below';\n\n   templateRef: TemplateRef<any>;\n   items: QueryList<MdMenuItem>;\n   overlapTrigger = true;\n/**\n * @param {?} posX\n * @param {?} posY\n * @param {?} deprecatedPosX\n * @param {?} deprecatedPosY\n */\nconstructor( posX: MenuPositionX,\n               posY: MenuPositionY,\n               deprecatedPosX: MenuPositionX,\n               deprecatedPosY: MenuPositionY) {\n\n    // TODO(kara): Remove kebab-case attributes after next release\n    if (deprecatedPosX) { this._setPositionX(deprecatedPosX); }\n    if (deprecatedPosY) { this._setPositionY(deprecatedPosY); }\n\n    if (posX) { this._setPositionX(posX); }\n    if (posY) { this._setPositionY(posY); }\n    this.setPositionClasses(this.positionX, this.positionY);\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._keyManager = new FocusKeyManager(this.items).withWrap();\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => {\n      this._emitCloseEvent();\n    });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._tabSubscription) {\n      this._tabSubscription.unsubscribe();\n    }\n  }\n/**\n * This method takes classes set on the host md-menu element and applies them on the\n * menu template that displays in the overlay container.  Otherwise, it's difficult\n * to style the containing menu from outside the component.\n * @param {?} classes list of class names\n * @return {?}\n */\nset classList(classes: string) {\n    this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n      obj[className] = true;\n      return obj;\n    }, {});\n    this.setPositionClasses(this.positionX, this.positionY);\n  }\n\n  /** Event emitted when the menu is closed. */\n   close = new EventEmitter<void>();\n/**\n * Focus the first item in the menu. This method is used by the menu trigger\n * to focus the first item when the menu is opened by the ENTER key.\n * @return {?}\n */\nfocusFirstItem() {\n    this._keyManager.setFirstItemActive();\n  }\n/**\n * This emits a close event to which the trigger is subscribed. When emitted, the\n * trigger will close the menu.\n * @return {?}\n */\n_emitCloseEvent(): void {\n    this.close.emit();\n  }\n/**\n * @param {?} pos\n * @return {?}\n */\nprivate _setPositionX(pos: MenuPositionX): void {\n    if (pos !== 'before' && pos !== 'after') {\n      throw new MdMenuInvalidPositionX();\n    }\n    this.positionX = pos;\n  }\n/**\n * @param {?} pos\n * @return {?}\n */\nprivate _setPositionY(pos: MenuPositionY): void {\n    if (pos !== 'above' && pos !== 'below') {\n      throw new MdMenuInvalidPositionY();\n    }\n    this.positionY = pos;\n  }\n/**\n * It's necessary to set position-based classes to ensure the menu panel animation\n * folds out from the correct direction.\n * @param {?} posX\n * @param {?} posY\n * @return {?}\n */\nsetPositionClasses(posX: MenuPositionX, posY: MenuPositionY): void {\n    this._classList['mat-menu-before'] = posX == 'before';\n    this._classList['mat-menu-after'] = posX == 'after';\n    this._classList['mat-menu-above'] = posY == 'above';\n    this._classList['mat-menu-below'] = posY == 'below';\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-menu, mat-menu',\n  host: {'role': 'menu'},\n  templateUrl: 'menu.html',\n  styleUrls: ['menu.css'],\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    transformMenu,\n    fadeInItems\n  ],\n  exportAs: 'mdMenu'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Attribute, args: ['xPosition', ] }, ]},\n{type: undefined, decorators: [{ type: Attribute, args: ['yPosition', ] }, ]},\n{type: undefined, decorators: [{ type: Attribute, args: ['x-position', ] }, ]},\n{type: undefined, decorators: [{ type: Attribute, args: ['y-position', ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'templateRef': [{ type: ViewChild, args: [TemplateRef, ] },],\n'items': [{ type: ContentChildren, args: [MdMenuItem, ] },],\n'overlapTrigger': [{ type: Input },],\n'classList': [{ type: Input, args: ['class', ] },],\n'close': [{ type: Output },],\n};\n}\n\nfunction MdMenu_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMenu.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMenu.ctorParameters;\n/** @type {?} */\nMdMenu.propDecorators;\n/** @type {?} */\nMdMenu.prototype._keyManager;\n/**\n * Subscription to tab events on the menu panel\n * @type {?}\n */\nMdMenu.prototype._tabSubscription;\n/**\n * Config object to be passed into the menu's ngClass\n * @type {?}\n */\nMdMenu.prototype._classList;\n/**\n * Position of the menu in the X axis.\n * @type {?}\n */\nMdMenu.prototype.positionX;\n/**\n * Position of the menu in the Y axis.\n * @type {?}\n */\nMdMenu.prototype.positionY;\n/** @type {?} */\nMdMenu.prototype.templateRef;\n/** @type {?} */\nMdMenu.prototype.items;\n/** @type {?} */\nMdMenu.prototype.overlapTrigger;\n/**\n * Event emitted when the menu is closed.\n * @type {?}\n */\nMdMenu.prototype.close;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}