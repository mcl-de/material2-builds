{"version":3,"sources":["../../../../src/lib/menu/menu-trigger.ts"],"names":[],"mappings":"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","file":"menu-trigger.js","sourceRoot":"","sourcesContent":["import {\n    AfterViewInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    Renderer,\n    ViewContainerRef,\n} from '@angular/core';\nimport {MdMenuPanel} from './menu-panel';\nimport {MdMenuMissingError} from './menu-errors';\nimport {\n    isFakeMousedownFromScreenReader,\n    Dir,\n    LayoutDirection,\n    Overlay,\n    OverlayState,\n    OverlayRef,\n    TemplatePortal,\n    ConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    VerticalConnectionPos,\n} from '../core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\n/**\n * This directive is intended to be used in conjunction with an md-menu tag.  It is\n * responsible for toggling the display of the provided menu instance.\n */\nexport class MdMenuTrigger implements AfterViewInit, OnDestroy {\nprivate _portal: TemplatePortal;\nprivate _overlayRef: OverlayRef;\nprivate _menuOpen: boolean = false;\nprivate _backdropSubscription: Subscription;\nprivate _positionSubscription: Subscription;\nprivate _openedByMouse: boolean = false;\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedMdMenuTriggerFor(): MdMenuPanel { return this.menu; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _deprecatedMdMenuTriggerFor(v: MdMenuPanel) { this.menu = v; }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedMatMenuTriggerFor(): MdMenuPanel { return this.menu; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _deprecatedMatMenuTriggerFor(v: MdMenuPanel) { this.menu = v; }\n/**\n * @return {?}\n */\nget _matMenuTriggerFor(): MdMenuPanel { return this.menu; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matMenuTriggerFor(v: MdMenuPanel) { this.menu = v; }\n\n  /** References the menu instance that the trigger is associated with. */\n   menu: MdMenuPanel;\n\n  /** Event emitted when the associated menu is opened. */\n   onMenuOpen = new EventEmitter<void>();\n\n  /** Event emitted when the associated menu is closed. */\n   onMenuClose = new EventEmitter<void>();\n/**\n * @param {?} _overlay\n * @param {?} _element\n * @param {?} _viewContainerRef\n * @param {?} _renderer\n * @param {?} _dir\n */\nconstructor(private _overlay: Overlay,\nprivate _element: ElementRef,\nprivate _viewContainerRef: ViewContainerRef,\nprivate _renderer: Renderer,\nprivate _dir: Dir) {}\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    this._checkMenu();\n    this.menu.close.subscribe(() => this.closeMenu());\n  }\n/**\n * @return {?}\n */\nngOnDestroy() { this.destroyMenu(); }\n/**\n * Whether the menu is open.\n * @return {?}\n */\nget menuOpen(): boolean { return this._menuOpen; }\n/**\n * Toggles the menu between the open and closed states.\n * @return {?}\n */\ntoggleMenu(): void {\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\n  }\n/**\n * Opens the menu.\n * @return {?}\n */\nopenMenu(): void {\n    if (!this._menuOpen) {\n      this._createOverlay();\n      this._overlayRef.attach(this._portal);\n      this._subscribeToBackdrop();\n      this._initMenu();\n    }\n  }\n/**\n * Closes the menu.\n * @return {?}\n */\ncloseMenu(): void {\n    if (this._overlayRef) {\n      this._overlayRef.detach();\n      this._backdropSubscription.unsubscribe();\n      this._resetMenu();\n    }\n  }\n/**\n * Removes the menu from the DOM.\n * @return {?}\n */\ndestroyMenu(): void {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n\n      this._cleanUpSubscriptions();\n    }\n  }\n/**\n * Focuses the menu trigger.\n * @return {?}\n */\nfocus() {\n    this._renderer.invokeElementMethod(this._element.nativeElement, 'focus');\n  }\n/**\n * The text direction of the containing app.\n * @return {?}\n */\nget dir(): LayoutDirection {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n/**\n * This method ensures that the menu closes when the overlay backdrop is clicked.\n * We do not use first() here because doing so would not catch clicks from within\n * the menu, and it would fail to unsubscribe properly. Instead, we unsubscribe\n * explicitly when the menu is closed or destroyed.\n * @return {?}\n */\nprivate _subscribeToBackdrop(): void {\n    this._backdropSubscription = this._overlayRef.backdropClick().subscribe(() => {\n      this.menu._emitCloseEvent();\n    });\n  }\n/**\n * This method sets the menu state to open and focuses the first item if\n * the menu was opened via the keyboard.\n * @return {?}\n */\nprivate _initMenu(): void {\n    this._setIsMenuOpen(true);\n\n    // Should only set focus if opened via the keyboard, so keyboard users can\n    // can easily navigate menu items. According to spec, mouse users should not\n    // see the focus style.\n    if (!this._openedByMouse) {\n      this.menu.focusFirstItem();\n    }\n  };\n/**\n * This method resets the menu when it's closed, most importantly restoring\n * focus to the menu trigger if the menu was opened via the keyboard.\n * @return {?}\n */\nprivate _resetMenu(): void {\n    this._setIsMenuOpen(false);\n\n    // Focus only needs to be reset to the host element if the menu was opened\n    // by the keyboard and manually shifted to the first menu item.\n    if (!this._openedByMouse) {\n      this.focus();\n    }\n    this._openedByMouse = false;\n  }\n/**\n * @param {?} isOpen\n * @return {?}\n */\nprivate _setIsMenuOpen(isOpen: boolean): void {\n    this._menuOpen = isOpen;\n    this._menuOpen ? this.onMenuOpen.emit() : this.onMenuClose.emit();\n  }\n/**\n *  This method checks that a valid instance of MdMenu has been passed into\n *  mdMenuTriggerFor. If not, an exception is thrown.\n * @return {?}\n */\nprivate _checkMenu() {\n    if (!this.menu) {\n      throw new MdMenuMissingError();\n    }\n  }\n/**\n *  This method creates the overlay from the provided menu's template and saves its\n *  OverlayRef so that it can be attached to the DOM when openMenu is called.\n * @return {?}\n */\nprivate _createOverlay(): void {\n    if (!this._overlayRef) {\n      this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n      const /** @type {?} */ config = this._getOverlayConfig();\n      this._subscribeToPositions( /** @type {?} */((config.positionStrategy as ConnectedPositionStrategy)));\n      this._overlayRef = this._overlay.create(config);\n    }\n  }\n/**\n * This method builds the configuration object needed to create the overlay, the OverlayState.\n * @return {?} OverlayState\n */\nprivate _getOverlayConfig(): OverlayState {\n    const /** @type {?} */ overlayState = new OverlayState();\n    overlayState.positionStrategy = this._getPosition()\n                                        .withDirection(this.dir);\n    overlayState.hasBackdrop = true;\n    overlayState.backdropClass = 'cdk-overlay-transparent-backdrop';\n    overlayState.direction = this.dir;\n    return overlayState;\n  }\n/**\n * Listens to changes in the position of the overlay and sets the correct classes\n * on the menu based on the new position. This ensures the animation origin is always\n * correct, even if a fallback position is used for the overlay.\n * @param {?} position\n * @return {?}\n */\nprivate _subscribeToPositions(position: ConnectedPositionStrategy): void {\n    this._positionSubscription = position.onPositionChange.subscribe((change) => {\n      const /** @type {?} */ posX: MenuPositionX = change.connectionPair.originX === 'start' ? 'after' : 'before';\n      let /** @type {?} */ posY: MenuPositionY = change.connectionPair.originY === 'top' ? 'below' : 'above';\n\n      if (!this.menu.overlapTrigger) {\n        posY = posY === 'below' ? 'above' : 'below';\n      }\n\n      this.menu.setPositionClasses(posX, posY);\n    });\n  }\n/**\n * This method builds the position strategy for the overlay, so the menu is properly connected\n * to the trigger.\n * @return {?} ConnectedPositionStrategy\n */\nprivate _getPosition(): ConnectedPositionStrategy  {\n    const [posX, fallbackX]: HorizontalConnectionPos[] =\n      this.menu.positionX === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n    const [overlayY, fallbackOverlayY]: VerticalConnectionPos[] =\n      this.menu.positionY === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n    let /** @type {?} */ originY = overlayY;\n    let /** @type {?} */ fallbackOriginY = fallbackOverlayY;\n\n    if (!this.menu.overlapTrigger) {\n      originY = overlayY === 'top' ? 'bottom' : 'top';\n      fallbackOriginY = fallbackOverlayY === 'top' ? 'bottom' : 'top';\n    }\n\n    return this._overlay.position()\n      .connectedTo(this._element,\n          {originX: posX, originY: originY}, {overlayX: posX, overlayY: overlayY})\n      .withFallbackPosition(\n          {originX: fallbackX, originY: originY},\n          {overlayX: fallbackX, overlayY: overlayY})\n      .withFallbackPosition(\n          {originX: posX, originY: fallbackOriginY},\n          {overlayX: posX, overlayY: fallbackOverlayY})\n      .withFallbackPosition(\n          {originX: fallbackX, originY: fallbackOriginY},\n          {overlayX: fallbackX, overlayY: fallbackOverlayY});\n  }\n/**\n * @return {?}\n */\nprivate _cleanUpSubscriptions(): void {\n    if (this._backdropSubscription) {\n      this._backdropSubscription.unsubscribe();\n    }\n    if (this._positionSubscription) {\n      this._positionSubscription.unsubscribe();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_handleMousedown(event: MouseEvent): void {\n    if (!isFakeMousedownFromScreenReader(event)) {\n      this._openedByMouse = true;\n    }\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `[md-menu-trigger-for], [mat-menu-trigger-for],\n             [mdMenuTriggerFor], [matMenuTriggerFor]`,\n  host: {\n    'aria-haspopup': 'true',\n    '(mousedown)': '_handleMousedown($event)',\n    '(click)': 'toggleMenu()',\n  },\n  exportAs: 'mdMenuTrigger'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Overlay, },\n{type: ElementRef, },\n{type: ViewContainerRef, },\n{type: Renderer, },\n{type: Dir, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_deprecatedMdMenuTriggerFor': [{ type: Input, args: ['md-menu-trigger-for', ] },],\n'_deprecatedMatMenuTriggerFor': [{ type: Input, args: ['mat-menu-trigger-for', ] },],\n'_matMenuTriggerFor': [{ type: Input, args: ['matMenuTriggerFor', ] },],\n'menu': [{ type: Input, args: ['mdMenuTriggerFor', ] },],\n'onMenuOpen': [{ type: Output },],\n'onMenuClose': [{ type: Output },],\n};\n}\n\nfunction MdMenuTrigger_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMenuTrigger.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMenuTrigger.ctorParameters;\n/** @type {?} */\nMdMenuTrigger.propDecorators;\n/** @type {?} */\nMdMenuTrigger.prototype._portal;\n/** @type {?} */\nMdMenuTrigger.prototype._overlayRef;\n/** @type {?} */\nMdMenuTrigger.prototype._menuOpen;\n/** @type {?} */\nMdMenuTrigger.prototype._backdropSubscription;\n/** @type {?} */\nMdMenuTrigger.prototype._positionSubscription;\n/** @type {?} */\nMdMenuTrigger.prototype._openedByMouse;\n/**\n * References the menu instance that the trigger is associated with.\n * @type {?}\n */\nMdMenuTrigger.prototype.menu;\n/**\n * Event emitted when the associated menu is opened.\n * @type {?}\n */\nMdMenuTrigger.prototype.onMenuOpen;\n/**\n * Event emitted when the associated menu is closed.\n * @type {?}\n */\nMdMenuTrigger.prototype.onMenuClose;\n/** @type {?} */\nMdMenuTrigger.prototype._overlay;\n/** @type {?} */\nMdMenuTrigger.prototype._element;\n/** @type {?} */\nMdMenuTrigger.prototype._viewContainerRef;\n/** @type {?} */\nMdMenuTrigger.prototype._renderer;\n/** @type {?} */\nMdMenuTrigger.prototype._dir;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}