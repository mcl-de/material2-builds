{"version":3,"sources":["../../../../src/lib/menu/menu-item.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,UAAA,EAAY,KAAA,EAAO,QAAA,EAAS,MAAA,eAAA,CAAA;AAE/C,OAAO,EAAA,qBAAE,EAAqB,MAAA,mCAAA,CAAA;AAC9B;;;GAGG;AACH,MAEC;IAAD;;;OAGG;IACH,YAAsB,SAAW,EAAkB,WAAa;QAA1C,cAAA,GAAA,SAAA,CAAW;QAAkB,gBAAA,GAAA,WAAA,CAAa;QAFtD,cAAA,GAAqB,KAAA,CAAM;IAEsC,CAAA;IAE3E;;;OAGG;IACH,KAHG;QAIC,IAAI,CAHC,SAAC,CAAS,mBAAC,CAAmB,IAAC,CAAI,eAAC,EAAe,EAAG,OAAA,CAAQ,CAAC;IAItE,CAAC;IACH;;;OAGG;IACH,IAJG,QAAA,KAAgB,MAAA,CAAO,IAAA,CAAK,SAAC,CAAS,CAAC,CAAA;IAK1C;;;OAGG;IACH,IARG,QAAA,CAAA,KAAA;QASC,IAAI,CARC,SAAC,GAAW,qBAAA,CAAsB,KAAC,CAAK,CAAC;IAShD,CAAC;IACH;;;OAGG;IACH,YAVG;QAWC,MAAM,CAVC,IAAA,CAAK,SAAC,GAAW,IAAA,GAAO,GAAA,CAAI;IAWrC,CAAC;IACH;;;OAGG;IACH,gBAZG;QAaC,MAAM,CAZC,IAAA,CAAK,SAAC,GAAW,IAAA,GAAO,IAAA,CAAK;IAatC,CAAC;IACH;;;OAGG;IACH,eAdG;QAeC,MAAM,CAdC,IAAA,CAAK,WAAC,CAAW,aAAC,CAAa;IAexC,CAAC;IACH;;;;OAIG;IACH,cAjBG,CAAA,KAAA;QAkBC,EAAE,CAAC,CAAC,IAjBC,CAAI,QAAC,CAAQ,CAAC,CAAA;YAkBjB,KAAK,CAjBC,cAAC,EAAc,CAAE;YAkBvB,KAAK,CAjBC,eAAC,EAAe,CAAE;QAkB1B,CAAC;IACH,CAAC;;AAhBI,qBAAA,GAAoC;IAkB3C,EAjBE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAkBvB,QAAQ,EAjBE,MAAA,CAAO,EAAC;gBAkBlB,QAAQ,EAjBE,iCAAA;gBAkBV,IAAI,EAjBE;oBAkBJ,MAAM,EAjBE,UAAA;oBAkBR,uBAAuB,EAjBE,MAAA;oBAO3B,iBAAA,EANqB,gBAAA;oBAkBnB,sBAAsB,EAjBE,qBAAA;oBAkBxB,iBAAiB,EAjBE,oBAAA;oBAkBnB,SAAS,EAjBE,wBAAA;iBAkBZ;gBACD,WAAW,EAjBE,gBAAA;gBAkBb,QAAQ,EAjBE,YAAA;aAkBX,EAjBC,EAAG;CAkBJ,CAjBC;AAkBF;;GAEG;AAlBF,yBAAA,GAAA,MAAA;IAoBD,EAAC,IAAI,EAAE,QAAQ,GAAG;IAClB,EAAC,IAAI,EAAE,UAAU,GAAG;CACnB,CAAC;AAlBK,yBAAA,GAAyD;IAoBhE,UAAU,EAnBE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAoB5B,CAnBC;AAsBF;IACA,gBAAgB;IAChB,UAAU,CAAC,UAAU,CAAC;IACtB;;;OAGG;IACH,UAAU,CAAC,cAAc,CAAC;IAC1B,gBAAgB;IAChB,UAAU,CAAC,cAAc,CAAC;IAC1B;;;OAGG;IACH,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC;IAC/B,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC;IAC/B,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC;AACjC,CAAC","file":"menu-item.js","sourceRoot":"","sourcesContent":["import {Component, ElementRef, Input, Renderer} from '@angular/core';\nimport {Focusable} from '../core/a11y/focus-key-manager';\nimport {coerceBooleanProperty} from '../core/coercion/boolean-property';\n/**\n * This directive is intended to be used inside an md-menu tag.\n * It exists mostly to set the role attribute.\n */\nexport class MdMenuItem implements Focusable {\nprivate _disabled: boolean = false;\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(private _renderer: Renderer,\nprivate _elementRef: ElementRef) {}\n/**\n * Focuses the menu item.\n * @return {?}\n */\nfocus(): void {\n    this._renderer.invokeElementMethod(this._getHostElement(), 'focus');\n  }\n/**\n * Whether the menu item is disabled.\n * @return {?}\n */\nget disabled() { return this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: any) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n/**\n * Used to set the `tabindex`.\n * @return {?}\n */\n_getTabIndex(): string {\n    return this._disabled ? '-1' : '0';\n  }\n/**\n * Used to set the HTML `disabled` attribute. Necessary for links to be disabled properly.\n * @return {?}\n */\n_getDisabledAttr(): boolean {\n    return this._disabled ? true : null;\n  }\n/**\n * Returns the host DOM element.\n * @return {?}\n */\n_getHostElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n/**\n * Prevents the default element actions if it is disabled.\n * @param {?} event\n * @return {?}\n */\n_checkDisabled(event: Event): void {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: '[md-menu-item], [mat-menu-item]',\n  host: {\n    'role': 'menuitem',\n    '[class.mat-menu-item]': 'true',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.disabled]': '_getDisabledAttr()',\n    '(click)': '_checkDisabled($event)',\n  },\n  templateUrl: 'menu-item.html',\n  exportAs: 'mdMenuItem'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'disabled': [{ type: Input },],\n};\n}\n\nfunction MdMenuItem_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMenuItem.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMenuItem.ctorParameters;\n/** @type {?} */\nMdMenuItem.propDecorators;\n/**\n * Whether the menu item is disabled\n * @type {?}\n */\nMdMenuItem.prototype._disabled;\n/** @type {?} */\nMdMenuItem.prototype._renderer;\n/** @type {?} */\nMdMenuItem.prototype._elementRef;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}