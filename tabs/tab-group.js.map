{"version":3,"sources":["../../../../src/lib/tabs/tab-group.ts"],"names":[],"mappings":"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","file":"tab-group.js","sourceRoot":"","sourcesContent":["import {\n  ViewChild,\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  QueryList,\n  ContentChildren,\n  ElementRef,\n  Renderer\n} from '@angular/core';\nimport {coerceBooleanProperty} from '../core';\nimport {Observable} from 'rxjs/Observable';\nimport {MdTab} from './tab';\nimport'rxjs/add/operator/map';\n\n\n/** Used to generate unique ID's for each tab component */\nlet /** @type {?} */ nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nexport class MdTabChangeEvent {\n  index: number;\n  tab: MdTab;\n}\n\nfunction MdTabChangeEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabChangeEvent.prototype.index;\n/** @type {?} */\nMdTabChangeEvent.prototype.tab;\n}\n\n\n/** Possible positions for the tab header. */\nexport type MdTabHeaderPosition = 'above' | 'below';\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://www.google.com/design/spec/components/tabs.html\n */\nexport class MdTabGroup {\n   _tabs: QueryList<MdTab>;\n\n   _tabBodyWrapper: ElementRef;\nprivate _isInitialized: boolean = false;\nprivate _indexToSelect = 0;\nprivate _tabBodyWrapperHeight: number = null;\nprivate _dynamicHeight: boolean = false;\n/**\n * @return {?}\n */\nget dynamicHeight(): boolean { return this._dynamicHeight; }\n/**\n * @param {?} value\n * @return {?}\n */\nset dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n/**\n * @deprecated\n * @return {?}\n */\nget _dynamicHeightDeprecated(): boolean { return this._dynamicHeight; }\n/**\n * @param {?} value\n * @return {?}\n */\nset _dynamicHeightDeprecated(value: boolean) { this._dynamicHeight = value; }\nprivate _selectedIndex: number = null;\n/**\n * The index of the active tab.\n * @param {?} value\n * @return {?}\n */\nset selectedIndex(value: number) { this._indexToSelect = value; }\n/**\n * @return {?}\n */\nget selectedIndex(): number { return this._selectedIndex; }\n\n  /** Position of the tab header. */\n  \n  headerPosition: MdTabHeaderPosition = 'above';\n/**\n * Output to enable support for two-way binding on ([selectedIndex])\n * @return {?}\n */\nget selectedIndexChange(): Observable<number> {\n    return this.selectChange.map(event => event.index);\n  }\nprivate _onFocusChange: EventEmitter<MdTabChangeEvent> = new EventEmitter<MdTabChangeEvent>();\n/**\n * Event emitted when focus has changed within a tab group.\n * @return {?}\n */\nget focusChange(): Observable<MdTabChangeEvent> {\n    return this._onFocusChange.asObservable();\n  }\nprivate _onSelectChange: EventEmitter<MdTabChangeEvent> =\n      new EventEmitter<MdTabChangeEvent>(true);\n/**\n * Event emitted when the tab selection has changed.\n * @return {?}\n */\nget selectChange(): Observable<MdTabChangeEvent> {\n    return this._onSelectChange.asObservable();\n  }\nprivate _groupId: number;\n/**\n * @param {?} _renderer\n */\nconstructor(private _renderer: Renderer) {\n    this._groupId = nextId++;\n  }\n/**\n * After the content is checked, this component knows what tabs have been defined\n * and what the selected index should be. This is where we can know exactly what position\n * each tab should be in according to the new selected index, and additionally we know how\n * a new selected tab should transition in (from the left or right).\n * @return {?}\n */\nngAfterContentChecked(): void {\n    // Clamp the next selected index to the bounds of 0 and the tabs length. Note the `|| 0`, which\n    // ensures that values like NaN can't get through and which would otherwise throw the\n    // component into an infinite loop (since Math.max(NaN, 0) === NaN).\n    this._indexToSelect =\n        Math.min(this._tabs.length - 1, Math.max(this._indexToSelect || 0, 0));\n\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex != this._indexToSelect && this._selectedIndex != null) {\n      this._onSelectChange.emit(this._createChangeEvent(this._indexToSelect));\n    }\n\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\n    this._tabs.forEach((tab: MdTab, index: number) => {\n      tab.position = index - this._indexToSelect;\n\n      // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = this._indexToSelect - this._selectedIndex;\n      }\n    });\n\n    this._selectedIndex = this._indexToSelect;\n  }\n/**\n * Waits one frame for the view to update, then updates the ink bar\n * Note: This must be run outside of the zone or it will create an infinite change detection loop.\n * @return {?}\n */\nngAfterViewChecked(): void {\n    this._isInitialized = true;\n  }\n/**\n * @param {?} index\n * @return {?}\n */\n_focusChanged(index: number) {\n    this._onFocusChange.emit(this._createChangeEvent(index));\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nprivate _createChangeEvent(index: number): MdTabChangeEvent {\n    const /** @type {?} */ event = new MdTabChangeEvent;\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n/**\n * Returns a unique id for each tab label element\n * @param {?} i\n * @return {?}\n */\n_getTabLabelId(i: number): string {\n    return `md-tab-label-${this._groupId}-${i}`;\n  }\n/**\n * Returns a unique id for each tab content element\n * @param {?} i\n * @return {?}\n */\n_getTabContentId(i: number): string {\n    return `md-tab-content-${this._groupId}-${i}`;\n  }\n/**\n * Sets the height of the body wrapper to the height of the activating tab if dynamic\n * height property is true.\n * @param {?} tabHeight\n * @return {?}\n */\n_setTabBodyWrapperHeight(tabHeight: number): void {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) { return; }\n\n    this._renderer.setElementStyle(this._tabBodyWrapper.nativeElement, 'height',\n        this._tabBodyWrapperHeight + 'px');\n\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      this._renderer.setElementStyle(this._tabBodyWrapper.nativeElement, 'height',\n          tabHeight + 'px');\n    }\n  }\n/**\n * Removes the height of the tab body wrapper.\n * @return {?}\n */\n_removeTabBodyWrapperHeight(): void {\n    this._tabBodyWrapperHeight = this._tabBodyWrapper.nativeElement.clientHeight;\n    this._renderer.setElementStyle(this._tabBodyWrapper.nativeElement, 'height', '');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-tab-group, mat-tab-group',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['tab-group.css'],\n  host: {\n    '[class.mat-tab-group]': 'true',\n    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_tabs': [{ type: ContentChildren, args: [MdTab, ] },],\n'_tabBodyWrapper': [{ type: ViewChild, args: ['tabBodyWrapper', ] },],\n'dynamicHeight': [{ type: Input },],\n'_dynamicHeightDeprecated': [{ type: Input, args: ['md-dynamic-height', ] },],\n'selectedIndex': [{ type: Input },],\n'headerPosition': [{ type: Input },],\n'selectedIndexChange': [{ type: Output },],\n'focusChange': [{ type: Output },],\n'selectChange': [{ type: Output },],\n};\n}\n\nfunction MdTabGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabGroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabGroup.ctorParameters;\n/** @type {?} */\nMdTabGroup.propDecorators;\n/** @type {?} */\nMdTabGroup.prototype._tabs;\n/** @type {?} */\nMdTabGroup.prototype._tabBodyWrapper;\n/**\n * Whether this component has been initialized.\n * @type {?}\n */\nMdTabGroup.prototype._isInitialized;\n/**\n * The tab index that should be selected after the content has been checked.\n * @type {?}\n */\nMdTabGroup.prototype._indexToSelect;\n/**\n * Snapshot of the height of the tab body wrapper before another tab is activated.\n * @type {?}\n */\nMdTabGroup.prototype._tabBodyWrapperHeight;\n/**\n * Whether the tab group should grow to the size of the active tab\n * @type {?}\n */\nMdTabGroup.prototype._dynamicHeight;\n/** @type {?} */\nMdTabGroup.prototype._selectedIndex;\n/**\n * Position of the tab header.\n * @type {?}\n */\nMdTabGroup.prototype.headerPosition;\n/** @type {?} */\nMdTabGroup.prototype._onFocusChange;\n/** @type {?} */\nMdTabGroup.prototype._onSelectChange;\n/** @type {?} */\nMdTabGroup.prototype._groupId;\n/** @type {?} */\nMdTabGroup.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}