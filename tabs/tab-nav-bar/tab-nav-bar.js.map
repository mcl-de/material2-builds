{"version":3,"sources":["../../../../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts"],"names":[],"mappings":"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","file":"tab-nav-bar.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  ViewEncapsulation,\n  Directive,\n  NgZone,\n  Inject,\n  Optional,\n  OnDestroy,\n} from '@angular/core';\nimport {MdInkBar} from '../ink-bar';\nimport {MdRipple} from '../../core/ripple/index';\nimport {ViewportRuler} from '../../core/overlay/position/viewport-ruler';\nimport {MD_RIPPLE_GLOBAL_OPTIONS, RippleGlobalOptions, Dir} from '../../core';\nimport {Subscription} from 'rxjs/Subscription';\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nexport class MdTabNavBar implements OnDestroy {\nprivate _directionChange: Subscription;\n  _activeLinkChanged: boolean;\n  _activeLinkElement: ElementRef;\n\n   _inkBar: MdInkBar;\n/**\n * @param {?} _dir\n */\nconstructor(\nprivate _dir: Dir) {\n    if (_dir) {\n      this._directionChange = _dir.dirChange.subscribe(() => this._alignInkBar());\n    }\n  }\n/**\n * Notifies the component that the active link has been changed.\n * @param {?} element\n * @return {?}\n */\nupdateActiveLink(element: ElementRef) {\n    this._activeLinkChanged = this._activeLinkElement != element;\n    this._activeLinkElement = element;\n  }\n/**\n * Checks if the active link has been changed and, if so, will update the ink bar.\n * @return {?}\n */\nngAfterContentChecked(): void {\n    if (this._activeLinkChanged) {\n      this._alignInkBar();\n      this._activeLinkChanged = false;\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._directionChange) {\n      this._directionChange.unsubscribe();\n      this._directionChange = null;\n    }\n  }\n/**\n * Aligns the ink bar to the active link.\n * @return {?}\n */\nprivate _alignInkBar(): void {\n    this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: '[md-tab-nav-bar], [mat-tab-nav-bar]',\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['tab-nav-bar.css'],\n  host: {\n    '[class.mat-tab-nav-bar]': 'true',\n  },\n  encapsulation: ViewEncapsulation.None,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Dir, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_inkBar': [{ type: ViewChild, args: [MdInkBar, ] },],\n};\n}\n\nfunction MdTabNavBar_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabNavBar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabNavBar.ctorParameters;\n/** @type {?} */\nMdTabNavBar.propDecorators;\n/** @type {?} */\nMdTabNavBar.prototype._directionChange;\n/** @type {?} */\nMdTabNavBar.prototype._activeLinkChanged;\n/** @type {?} */\nMdTabNavBar.prototype._activeLinkElement;\n/** @type {?} */\nMdTabNavBar.prototype._inkBar;\n/** @type {?} */\nMdTabNavBar.prototype._dir;\n}\n\n/**\n * Link inside of a `md-tab-nav-bar`.\n */\nexport class MdTabLink {\nprivate _isActive: boolean = false;\n/**\n * Whether the link is active.\n * @return {?}\n */\nget active(): boolean { return this._isActive; }\n/**\n * @param {?} value\n * @return {?}\n */\nset active(value: boolean) {\n    this._isActive = value;\n    if (value) {\n      this._mdTabNavBar.updateActiveLink(this._elementRef);\n    }\n  }\n/**\n * @param {?} _mdTabNavBar\n * @param {?} _elementRef\n */\nconstructor(private _mdTabNavBar: MdTabNavBar,\nprivate _elementRef: ElementRef) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-tab-link], [mat-tab-link]',\n  host: {\n    '[class.mat-tab-link]': 'true',\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdTabNavBar, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'active': [{ type: Input },],\n};\n}\n\nfunction MdTabLink_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabLink.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabLink.ctorParameters;\n/** @type {?} */\nMdTabLink.propDecorators;\n/** @type {?} */\nMdTabLink.prototype._isActive;\n/** @type {?} */\nMdTabLink.prototype._mdTabNavBar;\n/** @type {?} */\nMdTabLink.prototype._elementRef;\n}\n\n/**\n * Simple directive that extends the ripple and matches the selector of the MdTabLink. This\n * adds the ripple behavior to nav bar labels.\n */\nexport class MdTabLinkRipple extends MdRipple {\n/**\n * @param {?} elementRef\n * @param {?} ngZone\n * @param {?} ruler\n * @param {?} globalOptions\n */\nconstructor(elementRef: ElementRef, ngZone: NgZone, ruler: ViewportRuler,\n                globalOptions: RippleGlobalOptions) {\n    super(elementRef, ngZone, ruler, globalOptions);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-tab-link], [mat-tab-link]',\n  host: {\n    '[class.mat-tab-link]': 'true',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n{type: ViewportRuler, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_RIPPLE_GLOBAL_OPTIONS, ] }, ]},\n];\n}\n\nfunction MdTabLinkRipple_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabLinkRipple.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabLinkRipple.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}