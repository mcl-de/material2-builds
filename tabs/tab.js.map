{"version":3,"sources":["../../../../src/lib/tabs/tab.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,cAAE,EAAc,MAAA,uBAAA,CAAA;AACvB,OAAO,EACL,gBAAgB,EAAE,KAAA,EAAO,WAAA,EAAa,SAAA,EAAmB,YAAA,EACzD,SAAS,EACV,MAAM,eAAA,CAAgB;AACvB,OAAO,EAAA,qBAAE,EAAqB,MAAA,mCAAA,CAAA;AAE9B,OAAO,EAAA,UAAE,EAAU,MAAA,aAAA,CAAA;AACnB,MAEC;IAmCD;;OAEG;IACH,YALsB,iBAAmB;QAAnB,sBAAA,GAAA,iBAAA,CAAmB;QA5BvC,8EAA8E;QAC7E,cAAS,GAEW,EAAA,CAAG;QAGhB,mBAAA,GAAiC,IAAA,CAAK;QAE9C;;;WAGG;QACH,aAAQ,GACW,IAAA,CAAK;QACxB;;;WAGG;QACH,WAAM,GACW,IAAA,CAAK;QAEd,cAAA,GAAY,KAAA,CAAM;IAO8B,CAAA;IAzB1D;;OAEG;IACH,IACG,OAAA,KAA+B,MAAA,CAAO,IAAA,CAAK,cAAC,CAAc,CAAC,CAAA;IAa9D;;;;OAIG;IACH,IAAG,QAAA,CAAA,KAAA,IAA8B,IAAA,CAAK,SAAC,GAAW,qBAAA,CAAsB,KAAC,CAAK,CAAC,CAAC,CAAA;IAChF;;OAEG;IACH,IAHG,QAAA,KAAyB,MAAA,CAAO,IAAA,CAAK,SAAC,CAAS,CAAC,CAAA;IAQnD;;OAEG;IACH,QAPG;QAQC,IAAI,CAPC,cAAC,GAAgB,IAAI,cAAA,CAAe,IAAC,CAAI,QAAC,EAAS,IAAA,CAAK,iBAAC,CAAiB,CAAC;IAQlF,CAAC;;AANI,gBAAA,GAAoC;IAQ3C,EAPE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAQvB,QAAQ,EAPE,MAAA,CAAO,EAAC;gBAQlB,QAAQ,EAPE,iBAAA;gBAQV,WAAW,EAPE,UAAA;aAQd,EAPC,EAAG;CAQJ,CAPC;AAQF;;GAEG;AARF,oBAAA,GAAA,MAAA;IAUD,EAAC,IAAI,EAAE,gBAAgB,GAAG;CACzB,CAAC;AARK,oBAAA,GAAyD;IAUhE,eAAe,EATE,CAAA,EAAG,IAAA,EAAM,YAAA,EAAc,IAAA,EAAM,CAAA,UAAE,EAAU,EAAG,EAAE;IAU/D,UAAU,EATE,CAAA,EAAG,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,WAAE,EAAW,EAAG,EAAE;IAUxD,WAAW,EATE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,OAAE,EAAO,EAAG,EAAE;IAUjD,UAAU,EATE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAU5B,CATC;AAYF;IACA,gBAAgB;IAChB,KAAK,CAAC,UAAU,CAAC;IACjB;;;OAGG;IACH,KAAK,CAAC,cAAc,CAAC;IACrB,gBAAgB;IAChB,KAAK,CAAC,cAAc,CAAC;IACrB;;;OAGG;IACH,KAAK,CAAC,SAAS,CAAC,aAAa,CAAC;IAC9B;;;OAGG;IACH,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC;IACzB;;;OAGG;IACH,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC;IAC1B;;;OAGG;IACH,KAAK,CAAC,SAAS,CAAC,cAAc,CAAC;IAC/B;;;;OAIG;IACH,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC;IACzB;;;;OAIG;IACH,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;IACvB,gBAAgB;IAChB,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC;IAC1B,gBAAgB;IAChB,KAAK,CAAC,SAAS,CAAC,iBAAiB,CAAC;AAClC,CAAC","file":"tab.js","sourceRoot":"","sourcesContent":["import {TemplatePortal} from '../core/portal/portal';\nimport {\n  ViewContainerRef, Input, TemplateRef, ViewChild, OnInit, ContentChild,\n  Component\n} from '@angular/core';\nimport {coerceBooleanProperty} from '../core/coercion/boolean-property';\n\nimport {MdTabLabel} from './tab-label';\nexport class MdTab implements OnInit {\n  /** Content for the tab label given by <ng-template md-tab-label>. */\n   templateLabel: MdTabLabel;\n\n  /** Template inside the MdTab view that contains an <ng-content>. */\n   _content: TemplateRef<any>;\n\n  /** The plain text label for the tab, used when there is no template label. */\n   textLabel: string = '';\nprivate _contentPortal: TemplatePortal = null;\n/**\n * @return {?}\n */\nget content(): TemplatePortal { return this._contentPortal; }\n\n  /**\n   * The relatively indexed position where 0 represents the center, negative is left, and positive\n   * represents the right.\n   */\n  position: number = null;\n\n  /**\n   * The initial relatively index origin of the tab if it was created and selected after there\n   * was already a selected tab. Provides context of what position the tab should originate from.\n   */\n  origin: number = null;\nprivate _disabled = false;\n/**\n * Whether the tab is disabled\n * @param {?} value\n * @return {?}\n */\nset disabled(value: boolean) { this._disabled = coerceBooleanProperty(value); }\n/**\n * @return {?}\n */\nget disabled(): boolean { return this._disabled; }\n/**\n * @param {?} _viewContainerRef\n */\nconstructor(private _viewContainerRef: ViewContainerRef) { }\n/**\n * @return {?}\n */\nngOnInit() {\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-tab, mat-tab',\n  templateUrl: 'tab.html',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'templateLabel': [{ type: ContentChild, args: [MdTabLabel, ] },],\n'_content': [{ type: ViewChild, args: [TemplateRef, ] },],\n'textLabel': [{ type: Input, args: ['label', ] },],\n'disabled': [{ type: Input },],\n};\n}\n\nfunction MdTab_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTab.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTab.ctorParameters;\n/** @type {?} */\nMdTab.propDecorators;\n/**\n * Content for the tab label given by <ng-template md-tab-label>.\n * @type {?}\n */\nMdTab.prototype.templateLabel;\n/**\n * Template inside the MdTab view that contains an <ng-content>.\n * @type {?}\n */\nMdTab.prototype._content;\n/**\n * The plain text label for the tab, used when there is no template label.\n * @type {?}\n */\nMdTab.prototype.textLabel;\n/**\n * The portal that will be the hosted content of the tab\n * @type {?}\n */\nMdTab.prototype._contentPortal;\n/**\n * The relatively indexed position where 0 represents the center, negative is left, and positive\n * represents the right.\n * @type {?}\n */\nMdTab.prototype.position;\n/**\n * The initial relatively index origin of the tab if it was created and selected after there\n * was already a selected tab. Provides context of what position the tab should originate from.\n * @type {?}\n */\nMdTab.prototype.origin;\n/** @type {?} */\nMdTab.prototype._disabled;\n/** @type {?} */\nMdTab.prototype._viewContainerRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}