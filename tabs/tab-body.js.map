{"version":3,"sources":["../../../../src/lib/tabs/tab-body.ts"],"names":[],"mappings":"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","file":"tab-body.js","sourceRoot":"","sourcesContent":["import {\n  ViewChild,\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  ElementRef,\n  Optional,\n  ChangeDetectorRef,\n  AfterViewChecked,\n  AfterContentChecked,\n} from '@angular/core';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  AnimationEvent,\n} from '@angular/animations';\nimport {TemplatePortal, PortalHostDirective, Dir, LayoutDirection} from '../core';\nimport'rxjs/add/operator/map';\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type MdTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type MdTabBodyOriginState = 'left' | 'right';\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nexport class MdTabBody implements OnInit, AfterViewChecked, AfterContentChecked {\n  /** The portal host inside of this container into which the tab body content will be loaded. */\n   _portalHost: PortalHostDirective;\n\n  /** Event emitted when the tab begins to animate towards the center as the active tab. */\n  \n  onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when the tab completes its animation towards the center. */\n  \n  onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n  /** The tab body content to display. */\n   _content: TemplatePortal;\n\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\n  _position: MdTabBodyPositionState;\n/**\n * @param {?} position\n * @return {?}\n */\nset position(position: number) {\n    if (position < 0) {\n      this._position = this._getLayoutDirection() == 'ltr' ? 'left' : 'right';\n    } else if (position > 0) {\n      this._position = this._getLayoutDirection() == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n\n  /** Whether the element is allowed to be animated. */\n  _canBeAnimated: boolean = false;\n\n  /** The origin position from which this tab should appear when it is centered into view. */\n  _origin: MdTabBodyOriginState;\n/**\n * The origin position from which this tab should appear when it is centered into view.\n * @param {?} origin\n * @return {?}\n */\nset origin(origin: number) {\n    if (origin == null) { return; }\n\n    const /** @type {?} */ dir = this._getLayoutDirection();\n    if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n      this._origin = 'left';\n    } else {\n      this._origin = 'right';\n    }\n  }\n/**\n * @param {?} _dir\n * @param {?} _elementRef\n * @param {?} _changeDetectorRef\n */\nconstructor(\nprivate _dir: Dir,\nprivate _elementRef: ElementRef,\nprivate _changeDetectorRef: ChangeDetectorRef) { }\n/**\n * After initialized, check if the content is centered and has an origin. If so, set the\n * special position states that transition the tab from the left or right before centering.\n * @return {?}\n */\nngOnInit() {\n    if (this._position == 'center' && this._origin) {\n      this._position = this._origin == 'left' ? 'left-origin-center' : 'right-origin-center';\n    }\n  }\n/**\n * After the view has been set, check if the tab content is set to the center and attach the\n * content if it is not already attached.\n * @return {?}\n */\nngAfterViewChecked() {\n    if (this._isCenterPosition(this._position) && !this._portalHost.hasAttached()) {\n      this._portalHost.attach(this._content);\n    }\n  }\n/**\n * After the content has been checked, determines whether the element should be allowed to\n * animate. This has to be limited, because under a specific set of circumstances (see #2151),\n * the animations can be triggered too early, which either crashes Chrome by putting it into an\n * infinite loop (with Angular < 2.3.0) or throws an error because the element doesn't have a\n * computed style (with Angular > 2.3.0). This can alternatively be determined by checking the\n * transform: canBeAnimated = getComputedStyle(element) !== '', however document.contains should\n * be faster since it doesn't cause a reflow.\n * \n * TODO: This can safely be removed after we stop supporting Angular < 2.4.2. The fix landed via\n * https://github.com/angular/angular/commit/21030e9a1cf30e8101399d8535ed72d847a23ba6\n * @return {?}\n */\nngAfterContentChecked() {\n    if (!this._canBeAnimated) {\n      this._canBeAnimated = document.body.contains(this._elementRef.nativeElement);\n\n      if (this._canBeAnimated) {\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n/**\n * @param {?} e\n * @return {?}\n */\n_onTranslateTabStarted(e: AnimationEvent) {\n    if (this._isCenterPosition(e.toState)) {\n      this.onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n/**\n * @param {?} e\n * @return {?}\n */\n_onTranslateTabComplete(e: AnimationEvent) {\n    // If the end state is that the tab is not centered, then detach the content.\n    if (!this._isCenterPosition(e.toState) && !this._isCenterPosition(this._position)) {\n      this._portalHost.detach();\n    }\n\n    // If the transition to the center is complete, emit an event.\n    if (this._isCenterPosition(e.toState) && this._isCenterPosition(this._position)) {\n      this.onCentered.emit();\n    }\n  }\n/**\n * The text direction of the containing app.\n * @return {?}\n */\n_getLayoutDirection(): LayoutDirection {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n/**\n * Whether the provided position state is considered center, regardless of origin.\n * @param {?} position\n * @return {?}\n */\nprivate _isCenterPosition(position: MdTabBodyPositionState|string): boolean {\n    return position == 'center' ||\n        position == 'left-origin-center' ||\n        position == 'right-origin-center';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-tab-body, mat-tab-body',\n  templateUrl: 'tab-body.html',\n  styleUrls: ['tab-body.css'],\n  host: {\n    '[class.mat-tab-body]': 'true',\n  },\n  animations: [\n    trigger('translateTab', [\n      state('left', style({transform: 'translate3d(-100%, 0, 0)'})),\n      state('left-origin-center', style({transform: 'translate3d(0, 0, 0)'})),\n      state('right-origin-center', style({transform: 'translate3d(0, 0, 0)'})),\n      state('center', style({transform: 'translate3d(0, 0, 0)'})),\n      state('right', style({transform: 'translate3d(100%, 0, 0)'})),\n      transition('* => left, * => right, left => center, right => center',\n          animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\n      transition('void => left-origin-center', [\n        style({transform: 'translate3d(-100%, 0, 0)'}),\n        animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n      ]),\n      transition('void => right-origin-center', [\n        style({transform: 'translate3d(100%, 0, 0)'}),\n        animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n      ])\n    ])\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Dir, decorators: [{ type: Optional }, ]},\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_portalHost': [{ type: ViewChild, args: [PortalHostDirective, ] },],\n'onCentering': [{ type: Output },],\n'onCentered': [{ type: Output },],\n'_content': [{ type: Input, args: ['content', ] },],\n'position': [{ type: Input, args: ['position', ] },],\n'origin': [{ type: Input, args: ['origin', ] },],\n};\n}\n\nfunction MdTabBody_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabBody.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabBody.ctorParameters;\n/** @type {?} */\nMdTabBody.propDecorators;\n/**\n * The portal host inside of this container into which the tab body content will be loaded.\n * @type {?}\n */\nMdTabBody.prototype._portalHost;\n/**\n * Event emitted when the tab begins to animate towards the center as the active tab.\n * @type {?}\n */\nMdTabBody.prototype.onCentering;\n/**\n * Event emitted when the tab completes its animation towards the center.\n * @type {?}\n */\nMdTabBody.prototype.onCentered;\n/**\n * The tab body content to display.\n * @type {?}\n */\nMdTabBody.prototype._content;\n/**\n * The shifted index position of the tab body, where zero represents the active center tab.\n * @type {?}\n */\nMdTabBody.prototype._position;\n/**\n * Whether the element is allowed to be animated.\n * @type {?}\n */\nMdTabBody.prototype._canBeAnimated;\n/**\n * The origin position from which this tab should appear when it is centered into view.\n * @type {?}\n */\nMdTabBody.prototype._origin;\n/** @type {?} */\nMdTabBody.prototype._dir;\n/** @type {?} */\nMdTabBody.prototype._elementRef;\n/** @type {?} */\nMdTabBody.prototype._changeDetectorRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}