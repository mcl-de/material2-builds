{"version":3,"sources":["../../../../src/lib/tabs/tab-body.ts"],"names":[],"mappings":"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","file":"tab-body.js","sourceRoot":"","sourcesContent":["import {\n  ViewChild,\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  ElementRef,\n  Optional,\n  AfterViewChecked,\n} from '@angular/core';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  AnimationEvent,\n} from '@angular/animations';\nimport {TemplatePortal, PortalHostDirective, Dir, LayoutDirection} from '../core';\nimport'rxjs/add/operator/map';\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type MdTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type MdTabBodyOriginState = 'left' | 'right';\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nexport class MdTabBody implements OnInit, AfterViewChecked {\n/**\n * The portal host inside of this container into which the tab body content will be loaded.\n */\n_portalHost: PortalHostDirective;\n/**\n * Event emitted when the tab begins to animate towards the center as the active tab.\n */\nonCentering: EventEmitter<number> = new EventEmitter<number>();\n/**\n * Event emitted when the tab completes its animation towards the center.\n */\nonCentered: EventEmitter<void> = new EventEmitter<void>(true);\n/**\n * The tab body content to display.\n */\n_content: TemplatePortal;\n/**\n * The shifted index position of the tab body, where zero represents the active center tab.\n */\n_position: MdTabBodyPositionState;\n/**\n * @param {?} position\n * @return {?}\n */\nset position(position: number) {\n    if (position < 0) {\n      this._position = this._getLayoutDirection() == 'ltr' ? 'left' : 'right';\n    } else if (position > 0) {\n      this._position = this._getLayoutDirection() == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n/**\n * The origin position from which this tab should appear when it is centered into view.\n */\n_origin: MdTabBodyOriginState;\n/**\n * The origin position from which this tab should appear when it is centered into view.\n * @param {?} origin\n * @return {?}\n */\nset origin(origin: number) {\n    if (origin == null) { return; }\n\n    const /** @type {?} */ dir = this._getLayoutDirection();\n    if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n      this._origin = 'left';\n    } else {\n      this._origin = 'right';\n    }\n  }\n/**\n * @param {?} _dir\n * @param {?} _elementRef\n */\nconstructor(\nprivate _dir: Dir,\nprivate _elementRef: ElementRef) { }\n/**\n * After initialized, check if the content is centered and has an origin. If so, set the\n * special position states that transition the tab from the left or right before centering.\n * @return {?}\n */\nngOnInit() {\n    if (this._position == 'center' && this._origin) {\n      this._position = this._origin == 'left' ? 'left-origin-center' : 'right-origin-center';\n    }\n  }\n/**\n * After the view has been set, check if the tab content is set to the center and attach the\n * content if it is not already attached.\n * @return {?}\n */\nngAfterViewChecked() {\n    if (this._isCenterPosition(this._position) && !this._portalHost.hasAttached()) {\n      this._portalHost.attach(this._content);\n    }\n  }\n/**\n * @param {?} e\n * @return {?}\n */\n_onTranslateTabStarted(e: AnimationEvent) {\n    if (this._isCenterPosition(e.toState)) {\n      this.onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n/**\n * @param {?} e\n * @return {?}\n */\n_onTranslateTabComplete(e: AnimationEvent) {\n    // If the end state is that the tab is not centered, then detach the content.\n    if (!this._isCenterPosition(e.toState) && !this._isCenterPosition(this._position)) {\n      this._portalHost.detach();\n    }\n\n    // If the transition to the center is complete, emit an event.\n    if (this._isCenterPosition(e.toState) && this._isCenterPosition(this._position)) {\n      this.onCentered.emit();\n    }\n  }\n/**\n * The text direction of the containing app.\n * @return {?}\n */\n_getLayoutDirection(): LayoutDirection {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n/**\n * Whether the provided position state is considered center, regardless of origin.\n * @param {?} position\n * @return {?}\n */\nprivate _isCenterPosition(position: MdTabBodyPositionState|string): boolean {\n    return position == 'center' ||\n        position == 'left-origin-center' ||\n        position == 'right-origin-center';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-tab-body, mat-tab-body',\n  templateUrl: 'tab-body.html',\n  styleUrls: ['tab-body.css'],\n  host: {\n    '[class.mat-tab-body]': 'true',\n  },\n  animations: [\n    trigger('translateTab', [\n      state('left', style({transform: 'translate3d(-100%, 0, 0)'})),\n      state('left-origin-center', style({transform: 'translate3d(0, 0, 0)'})),\n      state('right-origin-center', style({transform: 'translate3d(0, 0, 0)'})),\n      state('center', style({transform: 'translate3d(0, 0, 0)'})),\n      state('right', style({transform: 'translate3d(100%, 0, 0)'})),\n      transition('* => left, * => right, left => center, right => center',\n          animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\n      transition('void => left-origin-center', [\n        style({transform: 'translate3d(-100%, 0, 0)'}),\n        animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n      ]),\n      transition('void => right-origin-center', [\n        style({transform: 'translate3d(100%, 0, 0)'}),\n        animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n      ])\n    ])\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Dir, decorators: [{ type: Optional }, ]},\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_portalHost': [{ type: ViewChild, args: [PortalHostDirective, ] },],\n'onCentering': [{ type: Output },],\n'onCentered': [{ type: Output },],\n'_content': [{ type: Input, args: ['content', ] },],\n'position': [{ type: Input, args: ['position', ] },],\n'origin': [{ type: Input, args: ['origin', ] },],\n};\n}\n\nfunction MdTabBody_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabBody.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabBody.ctorParameters;\n/** @type {?} */\nMdTabBody.propDecorators;\n/**\n * The portal host inside of this container into which the tab body content will be loaded.\n * @type {?}\n */\nMdTabBody.prototype._portalHost;\n/**\n * Event emitted when the tab begins to animate towards the center as the active tab.\n * @type {?}\n */\nMdTabBody.prototype.onCentering;\n/**\n * Event emitted when the tab completes its animation towards the center.\n * @type {?}\n */\nMdTabBody.prototype.onCentered;\n/**\n * The tab body content to display.\n * @type {?}\n */\nMdTabBody.prototype._content;\n/**\n * The shifted index position of the tab body, where zero represents the active center tab.\n * @type {?}\n */\nMdTabBody.prototype._position;\n/**\n * The origin position from which this tab should appear when it is centered into view.\n * @type {?}\n */\nMdTabBody.prototype._origin;\n/** @type {?} */\nMdTabBody.prototype._dir;\n/** @type {?} */\nMdTabBody.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}