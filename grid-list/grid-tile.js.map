{"version":3,"sources":["../../../../src/lib/grid-list/grid-tile.ts"],"names":[],"mappings":"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","file":"grid-tile.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  ViewEncapsulation,\n  Renderer,\n  ElementRef,\n  Input,\n  ContentChildren,\n  QueryList,\n  AfterContentInit, Directive\n} from '@angular/core';\nimport {MdLine, MdLineSetter} from '../core';\nimport {coerceToNumber} from './grid-list-measure';\nexport class MdGridTile {\n  _rowspan: number = 1;\n  _colspan: number = 1;\n/**\n * @param {?} _renderer\n * @param {?} _element\n */\nconstructor(private _renderer: Renderer,\nprivate _element: ElementRef) {}\n/**\n * Amount of rows that the grid tile takes up.\n * @return {?}\n */\nget rowspan() { return this._rowspan; }\n/**\n * @param {?} value\n * @return {?}\n */\nset rowspan(value) { this._rowspan = coerceToNumber(value); }\n/**\n * Amount of columns that the grid tile takes up.\n * @return {?}\n */\nget colspan() { return this._colspan; }\n/**\n * @param {?} value\n * @return {?}\n */\nset colspan(value) { this._colspan = coerceToNumber(value); }\n/**\n * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n * \"Changed after checked\" errors that would occur with HostBinding.\n * @param {?} property\n * @param {?} value\n * @return {?}\n */\n_setStyle(property: string, value: string): void {\n    this._renderer.setElementStyle(this._element.nativeElement, property, value);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-grid-tile, mat-grid-tile',\n  host: {\n    'role': 'listitem',\n    '[class.mat-grid-tile]': 'true',\n  },\n  templateUrl: 'grid-tile.html',\n  styleUrls: ['grid-list.css'],\n  encapsulation: ViewEncapsulation.None,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'rowspan': [{ type: Input },],\n'colspan': [{ type: Input },],\n};\n}\n\nfunction MdGridTile_tsickle_Closure_declarations() {\n/** @type {?} */\nMdGridTile.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdGridTile.ctorParameters;\n/** @type {?} */\nMdGridTile.propDecorators;\n/** @type {?} */\nMdGridTile.prototype._rowspan;\n/** @type {?} */\nMdGridTile.prototype._colspan;\n/** @type {?} */\nMdGridTile.prototype._renderer;\n/** @type {?} */\nMdGridTile.prototype._element;\n}\n\nexport class MdGridTileText implements AfterContentInit {\n  /**\n   *  Helper that watches the number of lines in a text area and sets\n   * a class on the host element that matches the line count.\n   */\n  _lineSetter: MdLineSetter;\n   _lines: QueryList<MdLine>;\n/**\n * @param {?} _renderer\n * @param {?} _element\n */\nconstructor(private _renderer: Renderer,\nprivate _element: ElementRef) {}\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._lineSetter = new MdLineSetter(this._lines, this._renderer, this._element);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-grid-tile-header, mat-grid-tile-header, md-grid-tile-footer, mat-grid-tile-footer',\n  templateUrl: 'grid-tile-text.html'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_lines': [{ type: ContentChildren, args: [MdLine, ] },],\n};\n}\n\nfunction MdGridTileText_tsickle_Closure_declarations() {\n/** @type {?} */\nMdGridTileText.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdGridTileText.ctorParameters;\n/** @type {?} */\nMdGridTileText.propDecorators;\n/**\n *  Helper that watches the number of lines in a text area and sets\n * a class on the host element that matches the line count.\n * @type {?}\n */\nMdGridTileText.prototype._lineSetter;\n/** @type {?} */\nMdGridTileText.prototype._lines;\n/** @type {?} */\nMdGridTileText.prototype._renderer;\n/** @type {?} */\nMdGridTileText.prototype._element;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdGridAvatarCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-grid-avatar], [mat-grid-avatar]',\n  host: {\n    '[class.mat-grid-avatar]': 'true'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdGridAvatarCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdGridAvatarCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdGridAvatarCssMatStyler.ctorParameters;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdGridTileHeaderCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-grid-tile-header, mat-grid-tile-header',\n  host: {\n    '[class.mat-grid-tile-header]': 'true'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdGridTileHeaderCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdGridTileHeaderCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdGridTileHeaderCssMatStyler.ctorParameters;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdGridTileFooterCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-grid-tile-footer, mat-grid-tile-footer',\n  host: {\n    '[class.mat-grid-tile-footer]': 'true'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdGridTileFooterCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdGridTileFooterCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdGridTileFooterCssMatStyler.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}