{"version":3,"sources":["../../../../src/lib/select/select-animations.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,OAAO,EAEP,KAAK,EACL,KAAK,EACL,UAAU,EACV,OAAO,GACR,MAAM,qBAAqB,CAAC;AAE7B;;;;;GAKG;AAEH;;;;GAIG;AACH,MAAM,CAAC,MAAA,gBAAA,CAAM,oBAAA,GAAiD,OAAA,CAAQ,sBAAC,EAAuB;IAC5F,KAAK,CAAC,cAAC,EAAe,KAAA,CAAM;QAC1B,GAAG,EAAE,OAAA;QACL,IAAI,EAAE,MAAA;QACN,SAAS,EAAE,aAAA;KACZ,CAAC,CAAC;IACH,KAAK,CAAC,cAAC,EAAe,KAAA,CAAM;QAC1B,GAAG,EAAE,OAAA;QACL,IAAI,EAAE,KAAA;QACN,SAAS,EAAE,aAAA;KACZ,CAAC,CAAC;IACH,UAAU,CAAC,QAAC,EAAS,OAAA,CAAQ,wCAAC,CAAwC,CAAC;CACxE,CAAC,CAAC;AAEH;;;;;;;;GAQG;AACH,MAAM,CAAC,MAAA,gBAAA,CAAM,cAAA,GAA2C,OAAA,CAAQ,gBAAC,EAAiB;IAChF,KAAK,CAAC,SAAC,EAAU,KAAA,CAAM;QACrB,OAAO,EAAE,CAAA;QACT,QAAQ,EAAE,mBAAA;QACV,SAAS,EAAE,WAAA;KACZ,CAAC,CAAC;IACH,UAAU,CAAC,WAAC,EAAY;QACtB,KAAK,CAAC;YACJ,OAAO,EAAE,CAAA;YACT,QAAQ,EAAE,MAAA;YACV,SAAS,EAAE,WAAA;SACZ,CAAC;QACF,OAAO,CAAC,wCAAC,CAAwC;KAClD,CAAC;IACF,UAAU,CAAC,WAAC,EAAY;QACtB,OAAO,CAAC,oBAAC,EAAqB,KAAA,CAAM,EAAC,OAAC,EAAQ,CAAA,EAAE,CAAC,CAAC;KACnD,CAAC;CACH,CAAC,CAAC;AAEH;;;;GAIG;AACH,MAAM,CAAC,MAAA,gBAAA,CAAM,aAAA,GAA2C,OAAA,CAAS,eAAC,EAAgB;IAChF,KAAK,CAAC,SAAC,EAAU,KAAA,CAAM,EAAC,OAAC,EAAQ,CAAA,EAAE,CAAC,CAAC;IACrC,UAAU,CAAC,iBAAC,EAAkB;QAC5B,KAAK,CAAC,EAAC,OAAC,EAAQ,CAAA,EAAE,CAAC;QACnB,OAAO,CAAC,8CAAC,CAA8C;KACxD,CAAC;CACH,CAAC,CAAC","file":"select-animations.js","sourceRoot":"","sourcesContent":["import {\n  animate,\n  AnimationTriggerMetadata,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\n/**\n * The following are all the animations for the md-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material md-select animation.\n */\n\n/**\n * This animation shrinks the placeholder text to 75% of its normal size and translates\n * it to either the top left corner (ltr) or top right corner (rtl) of the trigger,\n * depending on the text direction of the application.\n */\nexport const /** @type {?} */ transformPlaceholder: AnimationTriggerMetadata = trigger('transformPlaceholder', [\n  state('floating-ltr', style({\n    top: '-22px',\n    left: '-2px',\n    transform: `scale(0.75)`\n  })),\n  state('floating-rtl', style({\n    top: '-22px',\n    left: '2px',\n    transform: `scale(0.75)`\n  })),\n  transition('* => *', animate(`400ms cubic-bezier(0.25, 0.8, 0.25, 1)`))\n]);\n\n/**\n * This animation transforms the select's overlay panel on and off the page.\n *\n * When the panel is attached to the DOM, it expands its width 32px, scales it up to\n * 100% on the Y axis, fades in its border, and translates slightly up and to the\n * side to ensure the option text correctly overlaps the trigger text.\n *\n * When the panel is removed from the DOM, it simply fades out linearly.\n */\nexport const /** @type {?} */ transformPanel: AnimationTriggerMetadata = trigger('transformPanel', [\n  state('showing', style({\n    opacity: 1,\n    minWidth: 'calc(100% + 32px)',\n    transform: `scaleY(1)`\n  })),\n  transition('void => *', [\n    style({\n      opacity: 0,\n      minWidth: '100%',\n      transform: `scaleY(0)`\n    }),\n    animate(`150ms cubic-bezier(0.25, 0.8, 0.25, 1)`)\n  ]),\n  transition('* => void', [\n    animate('250ms 100ms linear', style({opacity: 0}))\n  ])\n]);\n\n/**\n * This animation fades in the background color and text content of the\n * select's options. It is time delayed to occur 100ms after the overlay\n * panel has transformed in.\n */\nexport const /** @type {?} */ fadeInContent: AnimationTriggerMetadata  =  trigger('fadeInContent', [\n  state('showing', style({opacity: 1})),\n  transition('void => showing', [\n    style({opacity: 0}),\n    animate(`150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)`)\n  ])\n]);\n"]}