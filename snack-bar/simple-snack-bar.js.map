{"version":3,"sources":["../../../../src/lib/snack-bar/simple-snack-bar.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAS,MAAA,eAAA,CAAA;AAElB;;;GAGG;AACH,MAGC;IAUD;;;OAGG;IACH,OAHG;QAIC,IAAI,CAHC,WAAC,CAAW,OAAC,EAAO,CAAE;IAI7B,CAAC;IACH;;;OAGG;IACH,IALG,SAAA,KAA0B,MAAA,CAAO,CAAA,CAAE,IAAC,CAAI,MAAC,CAAM,CAAC,CAAA;;AAC5C,yBAAA,GAAoC;IAM3C,EALE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAMvB,QAAQ,EALE,MAAA,CAAO,EAAC;gBAMlB,QAAQ,EALE,kBAAA;gBAMV,WAAW,EALE,uBAAA;gBAMb,SAAS,EALE,CAAA,sBAAE,CAAsB;gBAMnC,IAAI,EALE;oBAMJ,6BAA6B,EALE,MAAA;iBAMhC;aACF,EALC,EAAG;CAMJ,CALC;AAMF;;GAEG;AANF,6BAAA,GAAA,MAAA,EAQA,CAAC;AAGF;IACA,gBAAgB;IAChB,cAAc,CAAC,UAAU,CAAC;IAC1B;;;OAGG;IACH,cAAc,CAAC,cAAc,CAAC;IAC9B;;;OAGG;IACH,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC;IACjC;;;OAGG;IACH,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC;IAChC;;;OAGG;IACH,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC;AACrC,CAAC","file":"simple-snack-bar.js","sourceRoot":"","sourcesContent":["import {Component} from '@angular/core';\nimport {MdSnackBarRef} from './snack-bar-ref';\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n */\nexport class SimpleSnackBar {\n/**\n * The message to be shown in the snack bar.\n */\nmessage: string;\n/**\n * The label for the button in the snack bar.\n */\naction: string;\n/**\n * The instance of the component making up the content of the snack bar.\n */\nsnackBarRef: MdSnackBarRef<SimpleSnackBar>;\n/**\n * Dismisses the snack bar.\n * @return {?}\n */\ndismiss(): void {\n    this.snackBarRef._action();\n  }\n/**\n * If the action button should be shown.\n * @return {?}\n */\nget hasAction(): boolean { return !!this.action; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'simple-snack-bar',\n  templateUrl: 'simple-snack-bar.html',\n  styleUrls: ['simple-snack-bar.css'],\n  host: {\n    '[class.mat-simple-snackbar]': 'true',\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SimpleSnackBar_tsickle_Closure_declarations() {\n/** @type {?} */\nSimpleSnackBar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSimpleSnackBar.ctorParameters;\n/**\n * The message to be shown in the snack bar.\n * @type {?}\n */\nSimpleSnackBar.prototype.message;\n/**\n * The label for the button in the snack bar.\n * @type {?}\n */\nSimpleSnackBar.prototype.action;\n/**\n * The instance of the component making up the content of the snack bar.\n * @type {?}\n */\nSimpleSnackBar.prototype.snackBarRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}