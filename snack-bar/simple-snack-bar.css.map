{"version":3,"sources":["snack-bar/simple-snack-bar.scss","core/typography/_typography.scss","core/style/_variables.scss","core/style/_vendor-prefixes.scss","core/style/_button-common.scss"],"names":[],"mappings":"AAMA,MACE,QAAS,KACT,gBAAiB,cACjB,MAAO,KACP,YAAa,KAEX,UCRM,KDSN,YERc,MAAM,CAAE,gBAAgB,CAAE,WFY5C,4BGfE,oBAAqB,KACrB,iBAAkB,KAClB,gBAAiB,KACjB,YAAa,KCAb,OAAQ,QACR,QAAS,EACT,OAAQ,KJaR,WAAY,IACZ,eAAgB,UAChB,MAAO,QACP,YAAa,EACb,YAAa,EACb,YArB4B,KAuB1B,YAAQ,QACR,UAAM,QACN,YAAQ","file":"simple-snack-bar.css","sourcesContent":["@import '../core/style/variables';\n@import '../core/style/button-common';\n@import '../core/style/list-common';\n\n$mat-snack-bar-button-margin: 48px !default;\n\n:host {\n  display: flex;\n  justify-content: space-between;\n  color: white;\n  line-height: 20px;\n  font: {\n    size: $mat-body-font-size-base;\n    family: $mat-font-family;\n  }\n}\n\n.mat-simple-snackbar-action {\n  @include mat-button-reset;\n\n  background: none;\n  text-transform: uppercase;\n  color: inherit;\n  line-height: 1;\n  flex-shrink: 0;\n  margin-left: $mat-snack-bar-button-margin;\n  font: {\n    family: inherit;\n    size: inherit;\n    weight: 600;\n  }\n}\n","// Implement the rem unit with SCSS so we don't have to actually set a font-size on\n// the user's body element.\n@function rem($multiplier) {\n  $font-size: 10px;\n  @return $multiplier * $font-size;\n}\n","@import '../typography/typography';\n\n\n// Typography\n$mat-body-font-size-base: rem(1.4) !default;\n$mat-font-family: Roboto, 'Helvetica Neue', sans-serif !default;\n\n// Media queries\n// TODO: Find a way to respect media query ranges.\n// TODO: For example the xs-breakpoint should not interfere with the sm-breakpoint.\n$mat-xsmall: 'max-width: 600px';\n$mat-small: 'max-width: 960px';\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Overlay z indices.\n\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000;\n$cdk-z-index-overlay: 1000;\n$cdk-z-index-overlay-backdrop: 1000;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.6);\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n","/* stylelint-disable material/no-prefixes */\n@mixin user-select($value) {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin cursor-grab {\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n\n@mixin cursor-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n/* stylelint-enable */\n","@import './vendor-prefixes';\n\n// Mixin overriding default button styles like the gray background, the border, and the outline.\n@mixin mat-button-reset {\n  @include user-select(none);\n  cursor: pointer;\n  outline: none;\n  border: none;\n}\n"]}