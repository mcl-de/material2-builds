{"version":3,"sources":["../../../../../src/lib/core/platform/platform.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,UAAE,EAAU,MAAA,eAAA,CAAA;AAInB,4EAA4E;AAC5E,mDAAmD;AACnD,MAAM,gBAAA,CAAA,kBAAA,GAAqB,OAAA,CAAO,MAAC,CAAM,KAAK,WAAA;IAC1C,CAAC,MAAC,CAAM,IAAC,IAAO,CAAA,CAAA,MAAE,CAAM,IAAQ,CAAA,CAAI,CAAC,eAAC,CAAe;IACrD,CAAC,OAAC,CAAM,IAAC,CAAI,KAAK,WAAA,IAAe,CAAA,CAAA,IAAS,CAAA,CAAI,CAAC,eAAC,CAAe,CAAC;AACpE;;;;GAIG;AACH,MAEC;IAFD;QACE,qBAAqB;QACrB,SAAI,GAEG,SAAA,CAAU,IAAC,CAAI,SAAC,CAAS,SAAC,CAAS,CAAC;QAD3C,YAAO,GAEG,iBAAA,CAAkB,IAAC,CAAI,SAAC,CAAS,SAAC,CAAS,CAAC;QAAtD,wFAAwF;QACxF,UAAK,GAEG,CAAA,CAAE,CAAC,MAAC,CAAM,MAAC,IAAS,kBAAA,CAAmB,IAAI,CAAA,CAAE,GAAC,IAAM,CAAA,IAAE,CAAI,IAAC,IAAO,CAAA,IAAE,CAAI,OAAC,CAAO;QAAxF,+EAA+E;QAC/E,6EAA6E;QAC7E,WAAM,GAEG,cAAA,CAAe,IAAC,CAAI,SAAC,CAAS,SAAC,CAAS,IAAI,CAAA,IAAE,CAAI,KAAC,IAAQ,CAAA,IAAE,CAAI,IAAC,IAAO,CAAA,IAAE,CAAI,OAAC,CAAO;QAAhG,kCAAkC;QAClC,QAAG,GAEG,kBAAA,CAAmB,IAAC,CAAI,SAAC,CAAS,SAAC,CAAS,IAAI,CAAA,MAAE,CAAM,QAAC,CAAQ;QAAvE,yFAAyF;QACzF,iFAAiF;QACjF,iFAAiF;QACjF,iDAAiD;QACjD,YAAO,GAEG,sBAAA,CAAuB,IAAC,CAAI,SAAC,CAAS,SAAC,CAAS,CAAC;QAA3D,oFAAoF;QACpF,YAAO,GAEG,UAAA,CAAW,IAAC,CAAI,SAAC,CAAS,SAAC,CAAS,IAAI,CAAA,IAAE,CAAI,OAAC,CAAO;IAOlE,CAAC;;AANM,mBAAA,GAAoC;IAD3C,EAEE,IAAA,EAAM,UAAA,EAAW;CADlB,CAEC;AADF;;GAEG;AACF,uBAAA,GAAA,MAAA,EACA,CAAC;AAGF;IACA,gBAAgB;IAChB,QAAQ,CAAC,UAAU,CAAC;IACpB;;;OAGG;IACH,QAAQ,CAAC,cAAc,CAAC;IACxB;;;OAGG;IACH,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC;IACxB,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC;IAC3B,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC;IACzB,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC;IAC1B;;;OAGG;IACH,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC;IACvB,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC;IAC3B,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC;AAC3B,CAAC","file":"platform.js","sourceRoot":"","sourcesContent":["import {Injectable} from '@angular/core';\n\ndeclare const window: any;\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nconst /** @type {?} */ hasV8BreakIterator = typeof(window) !== 'undefined' ?\n    (window.Intl && ( /** @type {?} */((window.Intl as any))).v8BreakIterator) :\n    (typeof(Intl) !== 'undefined' && ( /** @type {?} */((Intl as any))).v8BreakIterator);\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n * \\@docs-private\n */\nexport class Platform {\n  /** Layout Engines */\n  EDGE = /(edge)/i.test(navigator.userAgent);\n  TRIDENT = /(msie|trident)/i.test(navigator.userAgent);\n\n  // EdgeHTML and Trident mock Blink specific things and need to excluded from this check.\n  BLINK = !!(window.chrome || hasV8BreakIterator) && !!CSS && !this.EDGE && !this.TRIDENT;\n\n  // Webkit is part of the userAgent in EdgeHTML Blink and Trident, so we need to\n  // ensure that Webkit runs standalone and is not use as another engines base.\n  WEBKIT = /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n\n  /** Browsers and Platform Types */\n  IOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n\n  // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n  // them self as Gecko-like browsers and modify the userAgent's according to that.\n  // Since we only cover one explicit Firefox case, we can simply check for Firefox\n  // instead of having an unstable check for Gecko.\n  FIREFOX = /(firefox|minefield)/i.test(navigator.userAgent);\n\n  // Trident on mobile adds the android platform to the userAgent to trick detections.\n  ANDROID = /android/i.test(navigator.userAgent) && !this.TRIDENT;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Platform_tsickle_Closure_declarations() {\n/** @type {?} */\nPlatform.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPlatform.ctorParameters;\n/**\n * Layout Engines\n * @type {?}\n */\nPlatform.prototype.EDGE;\n/** @type {?} */\nPlatform.prototype.TRIDENT;\n/** @type {?} */\nPlatform.prototype.BLINK;\n/** @type {?} */\nPlatform.prototype.WEBKIT;\n/**\n * Browsers and Platform Types\n * @type {?}\n */\nPlatform.prototype.IOS;\n/** @type {?} */\nPlatform.prototype.FIREFOX;\n/** @type {?} */\nPlatform.prototype.ANDROID;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}