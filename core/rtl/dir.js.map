{"version":3,"sources":["../../../../../src/lib/core/rtl/dir.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,QAAQ,EAER,SAAS,EACT,WAAW,EACX,MAAM,EACN,KAAK,EACL,YAAY,EACb,MAAM,eAAA,CAAgB;AAGvB;;;;;GAKG;AACH,MAEC;IAFD;QACE,uCAAuC;QACtC,SAAI,GAEoB,KAAA,CAAM;QAA/B,gDAAgD;QAC/C,cAAS,GAEG,IAAI,YAAA,EAAkB,CAAG;IA4CxC,CAAC;IA7CD;;;OAGG;IACH,IACG,GAAA;QAAC,MAAM,CACC,IAAA,CAAK,IAAC,CAAI;IAAnB,CAAC;IACH;;;OAGG;IACH,IAHG,GAAA,CAAA,CAAA;QAIC,IAAI,gBAAgB,CAHhB,GAAA,GAAM,IAAA,CAAK,IAAC,CAAI;QAIpB,IAAI,CAHC,IAAC,GAAM,CAAA,CAAE;QAId,EAAE,CAAC,CAAC,GAHC,IAAM,IAAA,CAAK,IAAC,CAAI,CAAC,CAAA;YAIpB,IAAI,CAHC,SAAC,CAAS,IAAC,EAAI,CAAE;QAIxB,CAAC;IACH,CAAC;IACH;;;OAGG;IACH,IALG,KAAA,KAA8B,MAAA,CAAO,IAAA,CAAK,GAAC,CAAG,CAAC,CAAA;IAMlD;;;OAGG;IACH,IATG,KAAA,CAAA,CAAA,IAA+B,IAAA,CAAK,GAAC,GAAK,CAAA,CAAE,CAAC,CAAA;;AACzC,cAAA,GAAoC;IAU3C,EATE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAUvB,QAAQ,EATE,OAAA;gBAUV,iGAAiG;gBACjG,QAAQ,EATE,WAAA;aAUX,EATC,EAAG;CAUJ,CATC;AAUF;;GAEG;AAVF,kBAAA,GAAA,MAAA,EAYA,CAAC;AAVK,kBAAA,GAAyD;IAYhE,MAAM,EAXE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,KAAE,EAAK,EAAG,EAAE;IAY1C,WAAW,EAXE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;IAY/B,KAAK,EAXE,CAAA,EAAG,IAAA,EAAM,WAAA,EAAa,IAAA,EAAM,CAAA,UAAE,EAAU,EAAG,EAAE;CAYnD,CAXC;AAcF;IACA,gBAAgB;IAChB,GAAG,CAAC,UAAU,CAAC;IACf;;;OAGG;IACH,GAAG,CAAC,cAAc,CAAC;IACnB,gBAjBE;IAkBF,GAAG,CAAC,cAAc,CAAC;IACnB;;;OAGG;IACH,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC;IACnB;;;OAGG;IACH,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC;AACxB,CAAC;AAED,MA/BC;IAgCD;;;OAGG;IACH,MAlCG,CAAA,OAAA;QAmCC,MAAM,CAlCC;YAmCL,QAAQ,EAlCE,SAAA;YAmCV,SAAS,EAlCE,EAAA;SAmCZ,CAlCC;IAmCJ,CAAC;;AAjCI,oBAAA,GAAoC;IAmC3C,EAlCE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBAmCtB,OAAO,EAlCE,CAAA,GAAE,CAAG;gBAmCd,YAAY,EAlCE,CAAA,GAAE,CAAG;aAmCpB,EAlCC,EAAG;CAmCJ,CAlCC;AAmCF;;GAEG;AAnCF,wBAAA,GAAA,MAAA,EAqCA,CAAC;AAGF;IACA,gBAAgB;IAChB,SAAS,CAAC,UAAU,CAAC;IACrB;;;OAGG;IACH,SAAS,CAAC,cAAc,CAAC;AACzB,CAAC","file":"dir.js","sourceRoot":"","sourcesContent":["import {\n  NgModule,\n  ModuleWithProviders,\n  Directive,\n  HostBinding,\n  Output,\n  Input,\n  EventEmitter\n} from '@angular/core';\n\nexport type LayoutDirection = 'ltr' | 'rtl';\n/**\n * Directive to listen for changes of direction of part of the DOM.\n * \n * Applications should use this directive instead of the native attribute so that Material\n * components can listen on changes of direction.\n */\nexport class Dir {\n  /** Layout direction of the element. */\n   _dir: LayoutDirection = 'ltr';\n\n  /** Event emitted when the direction changes. */\n   dirChange = new EventEmitter<void>();\n/**\n * \\@docs-private\n * @return {?}\n */\nget dir(): LayoutDirection {\n    return this._dir;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset dir(v: LayoutDirection) {\n    let /** @type {?} */ old = this._dir;\n    this._dir = v;\n    if (old != this._dir) {\n      this.dirChange.emit();\n    }\n  }\n/**\n * Current layout direction of the element.\n * @return {?}\n */\nget value(): LayoutDirection { return this.dir; }\n/**\n * @param {?} v\n * @return {?}\n */\nset value(v: LayoutDirection) { this.dir = v; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[dir]',\n  // TODO(hansl): maybe `$implicit` isn't the best option here, but for now that's the best we got.\n  exportAs: '$implicit'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_dir': [{ type: Input, args: ['dir', ] },],\n'dirChange': [{ type: Output },],\n'dir': [{ type: HostBinding, args: ['attr.dir', ] },],\n};\n}\n\nfunction Dir_tsickle_Closure_declarations() {\n/** @type {?} */\nDir.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDir.ctorParameters;\n/** @type {?} */\nDir.propDecorators;\n/**\n * Layout direction of the element.\n * @type {?}\n */\nDir.prototype._dir;\n/**\n * Event emitted when the direction changes.\n * @type {?}\n */\nDir.prototype.dirChange;\n}\n\nexport class RtlModule {\n/**\n * @deprecated\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders {\n    return {\n      ngModule: RtlModule,\n      providers: []\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [Dir],\n  declarations: [Dir]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RtlModule_tsickle_Closure_declarations() {\n/** @type {?} */\nRtlModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRtlModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}