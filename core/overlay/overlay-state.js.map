{"version":3,"sources":["../../../../../src/lib/core/overlay/overlay-state.ts"],"names":[],"mappings":"AAEA;;;GAGG;AACH,MAEC;IAFD;QAIE,0CAA0C;QAC1C,gBAAW,GAEY,KAAA,CAAM;QAA7B,2CAA2C;QAC3C,kBAAa,GAEW,2BAAA,CAA4B;QAYpD,sDAAsD;QACtD,cAAS,GAEoB,KAAA,CAAM;QAAnC,6CAA6C;QAC7C,eAAe;QACf,2BAA2B;QAC3B,YAAY;IACd,CAAC;CAAA;AAED;IACA;;;OAGG;IACH,YAAY,CAAC,SAAS,CAAC,gBAAgB,CAAC;IACxC;;;OAGG;IACH,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC;IACnC;;;OAGG;IACH,YAAY,CAAC,SAAS,CAAC,aAAa,CAAC;IACrC;;;OAGG;IACH,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC;IAC7B;;;OAGG;IACH,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC;IAC9B;;;OAGG;IACH,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC;IAChC;;;OAGG;IACH,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC;IACjC;;;OAGG;IACH,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC;AACjC,CAAC","file":"overlay-state.js","sourceRoot":"","sourcesContent":["import {PositionStrategy} from './position/position-strategy';\nimport {LayoutDirection} from '../rtl/dir';\n/**\n * OverlayState is a bag of values for either the initial configuration or current state of an\n * overlay.\n */\nexport class OverlayState {\n  /** Strategy with which to position the overlay. */\n  positionStrategy: PositionStrategy;\n\n  /** Whether the overlay has a backdrop. */\n  hasBackdrop: boolean = false;\n\n  /** Custom class to add to the backdrop **/\n  backdropClass: string = 'cdk-overlay-dark-backdrop';\n\n  /** The width of the overlay panel. If a number is provided, pixel units are assumed. **/\n  width: number | string;\n\n  /** The height of the overlay panel. If a number is provided, pixel units are assumed. **/\n  height: number | string;\n\n  /** The min-width of the overlay panel. If a number is provided, pixel units are assumed. **/\n  minWidth: number | string;\n\n  /** The min-height of the overlay panel. If a number is provided, pixel units are assumed. **/\n  minHeight: number | string;\n\n  /** The direction of the text in the overlay panel. */\n  direction: LayoutDirection = 'ltr';\n\n  // TODO(jelbourn): configuration still to add\n  // - focus trap\n  // - disable pointer events\n  // - z-index\n}\n\nfunction OverlayState_tsickle_Closure_declarations() {\n/**\n * Strategy with which to position the overlay.\n * @type {?}\n */\nOverlayState.prototype.positionStrategy;\n/**\n * Whether the overlay has a backdrop.\n * @type {?}\n */\nOverlayState.prototype.hasBackdrop;\n/**\n * Custom class to add to the backdrop *\n * @type {?}\n */\nOverlayState.prototype.backdropClass;\n/**\n * The width of the overlay panel. If a number is provided, pixel units are assumed. *\n * @type {?}\n */\nOverlayState.prototype.width;\n/**\n * The height of the overlay panel. If a number is provided, pixel units are assumed. *\n * @type {?}\n */\nOverlayState.prototype.height;\n/**\n * The min-width of the overlay panel. If a number is provided, pixel units are assumed. *\n * @type {?}\n */\nOverlayState.prototype.minWidth;\n/**\n * The min-height of the overlay panel. If a number is provided, pixel units are assumed. *\n * @type {?}\n */\nOverlayState.prototype.minHeight;\n/**\n * The direction of the text in the overlay panel.\n * @type {?}\n */\nOverlayState.prototype.direction;\n}\n\n"]}