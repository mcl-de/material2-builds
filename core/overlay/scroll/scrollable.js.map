{"version":3,"sources":["../../../../../../src/lib/core/overlay/scroll/scrollable.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,SAAE,EAAU,UAAA,EAA+B,MAAA,EAAQ,QAAA,EAAS,MAAA,eAAA,CAAA;AAEnE,OAAO,EAAA,OAAE,EAAO,MAAA,cAAA,CAAA;AAChB,OAAO,EAAA,gBAAE,EAAgB,MAAA,qBAAA,CAAA;AACzB,OAAM,+BAAC,CAAA;AACP;;;;GAIG;AACH,MAGC;IAAD;;;;;OAKG;IACH,YAFsB,WAAa,EACb,OAAS,EACT,OAAS,EACT,SAAW;QAHX,gBAAA,GAAA,WAAA,CAAa;QACb,YAAA,GAAA,OAAA,CAAS;QACT,YAAA,GAAA,OAAA,CAAS;QACT,cAAA,GAAA,SAAA,CAAW;QANvB,qBAAA,GAAmC,IAAI,OAAA,EAAQ,CAAE;IAMjB,CAAA;IAG1C;;OAEG;IACH,QAJG;QAKC,IAAI,CAJC,eAAC,GAAiB,IAAA,CAAK,OAAC,CAAO,iBAAC,CAAiB;YAKpD,MAAM,CAJC,IAAA,CAAK,SAAC,CAAS,MAAC,CAAM,IAAC,CAAI,aAAC,EAAa,CAAE,aAAC,EAAc,QAAA,EAAU,CAAA,KAAQ;gBAKjF,IAAI,CAJC,gBAAC,CAAgB,IAAC,CAAI,KAAC,CAAK,CAAC;YAKpC,CAAC,CAJC,CAAC;QAKL,CAAC,CAJC,CAAC;QAMH,IAAI,CAJC,OAAC,CAAO,QAAC,CAAQ,IAAC,CAAI,CAAC;IAK9B,CAAC;IACH;;OAEG;IACH,WANG;QAOC,IAAI,CANC,OAAC,CAAO,UAAC,CAAU,IAAC,CAAI,CAAC;QAQ9B,EAAE,CAAC,CAAC,IANC,CAAI,eAAC,CAAe,CAAC,CAAA;YAOxB,IAAI,CANC,eAAC,EAAe,CAAE;YAOvB,IAAI,CANC,eAAC,GAAiB,IAAA,CAAK;QAO9B,CAAC;IACH,CAAC;IACH;;;OAGG;IACH,eANG;QAOC,MAAM,CANC,IAAA,CAAK,gBAAC,CAAgB,YAAC,EAAY,CAAE;IAO9C,CAAC;IACH;;OAEG;IACH,aARG;QASC,MAAM,CARC,IAAA,CAAK,WAAC,CAAW;IAS1B,CAAC;;AAPI,qBAAA,GAAoC;IAS3C,EARE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBASvB,QAAQ,EARE,kBAAA;aASX,EARC,EAAG;CASJ,CARC;AASF;;GAEG;AATF,yBAAA,GAAA,MAAA;IAWD,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,gBAAgB,GAAG;IAC1B,EAAC,IAAI,EAAE,MAAM,GAAG;IAChB,EAAC,IAAI,EAAE,QAAQ,GAAG;CACjB,CAAC;AAGF;IACA,gBAAgB;IAChB,UAAU,CAAC,UAAU,CAAC;IACtB;;;OAGG;IACH,UAAU,CAAC,cAAc,CAAC;IAC1B,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,gBAAgB,CAAC;IACtC,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC;IACrC,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC;IACjC,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC;IAC7B,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC;IAC7B,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC;AAC/B,CAAC","file":"scrollable.js","sourceRoot":"","sourcesContent":["import {Directive, ElementRef, OnInit, OnDestroy, NgZone, Renderer} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {ScrollDispatcher} from './scroll-dispatcher';\nimport'rxjs/add/observable/fromEvent';\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nexport class Scrollable implements OnInit, OnDestroy {\nprivate _elementScrolled: Subject<Event> = new Subject();\nprivate _scrollListener: Function;\n/**\n * @param {?} _elementRef\n * @param {?} _scroll\n * @param {?} _ngZone\n * @param {?} _renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _scroll: ScrollDispatcher,\nprivate _ngZone: NgZone,\nprivate _renderer: Renderer) {}\n/**\n * @return {?}\n */\nngOnInit() {\n    this._scrollListener = this._ngZone.runOutsideAngular(() => {\n      return this._renderer.listen(this.getElementRef().nativeElement, 'scroll', (event: Event) => {\n        this._elementScrolled.next(event);\n      });\n    });\n\n    this._scroll.register(this);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._scroll.deregister(this);\n\n    if (this._scrollListener) {\n      this._scrollListener();\n      this._scrollListener = null;\n    }\n  }\n/**\n * Returns observable that emits when a scroll event is fired on the host element.\n * @return {?}\n */\nelementScrolled(): Observable<any> {\n    return this._elementScrolled.asObservable();\n  }\n/**\n * @return {?}\n */\ngetElementRef(): ElementRef {\n    return this._elementRef;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdk-scrollable]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ScrollDispatcher, },\n{type: NgZone, },\n{type: Renderer, },\n];\n}\n\nfunction Scrollable_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollable.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollable.ctorParameters;\n/** @type {?} */\nScrollable.prototype._elementScrolled;\n/** @type {?} */\nScrollable.prototype._scrollListener;\n/** @type {?} */\nScrollable.prototype._elementRef;\n/** @type {?} */\nScrollable.prototype._scroll;\n/** @type {?} */\nScrollable.prototype._ngZone;\n/** @type {?} */\nScrollable.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}