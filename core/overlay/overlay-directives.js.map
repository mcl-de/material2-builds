{"version":3,"sources":["../../../../../src/lib/core/overlay/overlay-directives.ts"],"names":[],"mappings":"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","file":"overlay-directives.js","sourceRoot":"","sourcesContent":["import {\n    NgModule,\n    ModuleWithProviders,\n    Directive,\n    EventEmitter,\n    TemplateRef,\n    ViewContainerRef,\n    Optional,\n    Input,\n    OnDestroy,\n    Output,\n    ElementRef\n} from '@angular/core';\nimport {Overlay, OVERLAY_PROVIDERS} from './overlay';\nimport {OverlayRef} from './overlay-ref';\nimport {TemplatePortal} from '../portal/portal';\nimport {OverlayState} from './overlay-state';\nimport {\n    ConnectionPositionPair,\n    ConnectedOverlayPositionChange\n} from './position/connected-position';\nimport {PortalModule} from '../portal/portal-directives';\nimport {ConnectedPositionStrategy} from './position/connected-position-strategy';\nimport {Subscription} from 'rxjs/Subscription';\nimport {Dir, LayoutDirection} from '../rtl/dir';\nimport {Scrollable} from './scroll/scrollable';\nimport {coerceBooleanProperty} from '../coercion/boolean-property';\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nlet /** @type {?} */ defaultPositionList = [\n  new ConnectionPositionPair(\n      {originX: 'start', originY: 'bottom'},\n      {overlayX: 'start', overlayY: 'top'}),\n  new ConnectionPositionPair(\n      {originX: 'start', originY: 'top'},\n      {overlayX: 'start', overlayY: 'bottom'}),\n];\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nexport class OverlayOrigin {\n/**\n * @param {?} elementRef\n */\nconstructor(public elementRef: ElementRef) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdk-overlay-origin], [overlay-origin]',\n  exportAs: 'cdkOverlayOrigin',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\n}\n\nfunction OverlayOrigin_tsickle_Closure_declarations() {\n/** @type {?} */\nOverlayOrigin.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOverlayOrigin.ctorParameters;\n/** @type {?} */\nOverlayOrigin.prototype.elementRef;\n}\n\n/**\n * Directive to facilitate declarative creation of an Overlay using a ConnectedPositionStrategy.\n */\nexport class ConnectedOverlayDirective implements OnDestroy {\nprivate _overlayRef: OverlayRef;\nprivate _templatePortal: TemplatePortal;\nprivate _open = false;\nprivate _hasBackdrop = false;\nprivate _backdropSubscription: Subscription;\nprivate _positionSubscription: Subscription;\nprivate _offsetX: number = 0;\nprivate _offsetY: number = 0;\nprivate _position: ConnectedPositionStrategy;\n\n  /** Origin for the connected overlay. */\n   origin: OverlayOrigin;\n\n  /** Registered connected position pairs. */\n   positions: ConnectionPositionPair[];\n/**\n * The offset in pixels for the overlay connection point on the x-axis\n * @return {?}\n */\nget offsetX(): number {\n    return this._offsetX;\n  }\n/**\n * @param {?} offsetX\n * @return {?}\n */\nset offsetX(offsetX: number) {\n    this._offsetX = offsetX;\n    if (this._position) {\n      this._position.withOffsetX(offsetX);\n    }\n  }\n/**\n * The offset in pixels for the overlay connection point on the y-axis\n * @return {?}\n */\nget offsetY() {\n    return this._offsetY;\n  }\n/**\n * @param {?} offsetY\n * @return {?}\n */\nset offsetY(offsetY: number) {\n    this._offsetY = offsetY;\n    if (this._position) {\n      this._position.withOffsetY(offsetY);\n    }\n  }\n\n  /** The width of the overlay panel. */\n   width: number | string;\n\n  /** The height of the overlay panel. */\n   height: number | string;\n\n  /** The min width of the overlay panel. */\n   minWidth: number | string;\n\n  /** The min height of the overlay panel. */\n   minHeight: number | string;\n\n  /** The custom class to be set on the backdrop element. */\n   backdropClass: string;\n/**\n * Whether or not the overlay should attach a backdrop.\n * @return {?}\n */\nget hasBackdrop() {\n    return this._hasBackdrop;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset hasBackdrop(value: any) {\n    this._hasBackdrop = coerceBooleanProperty(value);\n  }\n/**\n * @return {?}\n */\nget open() {\n    return this._open;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset open(value: boolean) {\n    value ? this._attachOverlay() : this._detachOverlay();\n    this._open = value;\n  }\n\n  /** Event emitted when the backdrop is clicked. */\n   backdropClick = new EventEmitter<void>();\n\n  /** Event emitted when the position has changed. */\n   positionChange = new EventEmitter<ConnectedOverlayPositionChange>();\n\n  /** Event emitted when the overlay has been attached. */\n   attach = new EventEmitter<void>();\n\n  /** Event emitted when the overlay has been detached. */\n   detach = new EventEmitter<void>();\n/**\n * @param {?} _overlay\n * @param {?} templateRef\n * @param {?} viewContainerRef\n * @param {?} _dir\n */\nconstructor(\nprivate _overlay: Overlay,\n      templateRef: TemplateRef<any>,\n      viewContainerRef: ViewContainerRef,\nprivate _dir: Dir) {\n    this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n  }\n/**\n * The associated overlay reference.\n * @return {?}\n */\nget overlayRef(): OverlayRef {\n    return this._overlayRef;\n  }\n/**\n * The element's layout direction.\n * @return {?}\n */\nget dir(): LayoutDirection {\n    return this._dir ? this._dir.value : 'ltr';\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._destroyOverlay();\n  }\n/**\n * Creates an overlay\n * @return {?}\n */\nprivate _createOverlay() {\n    if (!this.positions || !this.positions.length) {\n      this.positions = defaultPositionList;\n    }\n\n    this._overlayRef = this._overlay.create(this._buildConfig());\n  }\n/**\n * Builds the overlay config based on the directive's inputs\n * @return {?}\n */\nprivate _buildConfig(): OverlayState {\n    let /** @type {?} */ overlayConfig = new OverlayState();\n\n    if (this.width || this.width === 0) {\n      overlayConfig.width = this.width;\n    }\n\n    if (this.height || this.height === 0) {\n      overlayConfig.height = this.height;\n    }\n\n    if (this.minWidth || this.minWidth === 0) {\n      overlayConfig.minWidth = this.minWidth;\n    }\n\n    if (this.minHeight || this.minHeight === 0) {\n      overlayConfig.minHeight = this.minHeight;\n    }\n\n    overlayConfig.hasBackdrop = this.hasBackdrop;\n\n    if (this.backdropClass) {\n      overlayConfig.backdropClass = this.backdropClass;\n    }\n\n    this._position = /** @type {?} */(( this._createPositionStrategy() as ConnectedPositionStrategy));\n    overlayConfig.positionStrategy = this._position;\n\n    return overlayConfig;\n  }\n/**\n * Returns the position strategy of the overlay to be set on the overlay config\n * @return {?}\n */\nprivate _createPositionStrategy(): ConnectedPositionStrategy {\n    const /** @type {?} */ pos = this.positions[0];\n    const /** @type {?} */ originPoint = {originX: pos.originX, originY: pos.originY};\n    const /** @type {?} */ overlayPoint = {overlayX: pos.overlayX, overlayY: pos.overlayY};\n\n    const /** @type {?} */ strategy = this._overlay.position()\n      .connectedTo(this.origin.elementRef, originPoint, overlayPoint)\n      .withOffsetX(this.offsetX)\n      .withOffsetY(this.offsetY);\n\n    this._handlePositionChanges(strategy);\n\n    return strategy;\n  }\n/**\n * @param {?} strategy\n * @return {?}\n */\nprivate _handlePositionChanges(strategy: ConnectedPositionStrategy): void {\n    for (let /** @type {?} */ i = 1; i < this.positions.length; i++) {\n      strategy.withFallbackPosition(\n          {originX: this.positions[i].originX, originY: this.positions[i].originY},\n          {overlayX: this.positions[i].overlayX, overlayY: this.positions[i].overlayY}\n      );\n    }\n\n    this._positionSubscription =\n        strategy.onPositionChange.subscribe(pos => this.positionChange.emit(pos));\n  }\n/**\n * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n * @return {?}\n */\nprivate _attachOverlay() {\n    if (!this._overlayRef) {\n      this._createOverlay();\n    }\n\n    this._position.withDirection(this.dir);\n    this._overlayRef.getState().direction = this.dir;\n\n    if (!this._overlayRef.hasAttached()) {\n      this._overlayRef.attach(this._templatePortal);\n      this.attach.emit();\n    }\n\n    if (this.hasBackdrop) {\n      this._backdropSubscription = this._overlayRef.backdropClick().subscribe(() => {\n        this.backdropClick.emit();\n      });\n    }\n  }\n/**\n * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n * @return {?}\n */\nprivate _detachOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.detach();\n      this.detach.emit();\n    }\n\n    if (this._backdropSubscription) {\n      this._backdropSubscription.unsubscribe();\n      this._backdropSubscription = null;\n    }\n  }\n/**\n * Destroys the overlay created by this directive.\n * @return {?}\n */\nprivate _destroyOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n    }\n\n    if (this._backdropSubscription) {\n      this._backdropSubscription.unsubscribe();\n    }\n    if (this._positionSubscription) {\n      this._positionSubscription.unsubscribe();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdk-connected-overlay], [connected-overlay]',\n  exportAs: 'cdkConnectedOverlay'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Overlay, },\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: Dir, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'origin': [{ type: Input },],\n'positions': [{ type: Input },],\n'offsetX': [{ type: Input },],\n'offsetY': [{ type: Input },],\n'width': [{ type: Input },],\n'height': [{ type: Input },],\n'minWidth': [{ type: Input },],\n'minHeight': [{ type: Input },],\n'backdropClass': [{ type: Input },],\n'hasBackdrop': [{ type: Input },],\n'open': [{ type: Input },],\n'backdropClick': [{ type: Output },],\n'positionChange': [{ type: Output },],\n'attach': [{ type: Output },],\n'detach': [{ type: Output },],\n};\n}\n\nfunction ConnectedOverlayDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nConnectedOverlayDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nConnectedOverlayDirective.ctorParameters;\n/** @type {?} */\nConnectedOverlayDirective.propDecorators;\n/** @type {?} */\nConnectedOverlayDirective.prototype._overlayRef;\n/** @type {?} */\nConnectedOverlayDirective.prototype._templatePortal;\n/** @type {?} */\nConnectedOverlayDirective.prototype._open;\n/** @type {?} */\nConnectedOverlayDirective.prototype._hasBackdrop;\n/** @type {?} */\nConnectedOverlayDirective.prototype._backdropSubscription;\n/** @type {?} */\nConnectedOverlayDirective.prototype._positionSubscription;\n/** @type {?} */\nConnectedOverlayDirective.prototype._offsetX;\n/** @type {?} */\nConnectedOverlayDirective.prototype._offsetY;\n/** @type {?} */\nConnectedOverlayDirective.prototype._position;\n/**\n * Origin for the connected overlay.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.origin;\n/**\n * Registered connected position pairs.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.positions;\n/**\n * The width of the overlay panel.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.width;\n/**\n * The height of the overlay panel.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.height;\n/**\n * The min width of the overlay panel.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.minWidth;\n/**\n * The min height of the overlay panel.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.minHeight;\n/**\n * The custom class to be set on the backdrop element.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.backdropClass;\n/**\n * Event emitted when the backdrop is clicked.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.backdropClick;\n/**\n * Event emitted when the position has changed.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.positionChange;\n/**\n * Event emitted when the overlay has been attached.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.attach;\n/**\n * Event emitted when the overlay has been detached.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.detach;\n/** @type {?} */\nConnectedOverlayDirective.prototype._overlay;\n/** @type {?} */\nConnectedOverlayDirective.prototype._dir;\n}\n\nexport class OverlayModule {\n/**\n * @deprecated\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders {\n    return {\n      ngModule: OverlayModule,\n      providers: [],\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [PortalModule],\n  exports: [ConnectedOverlayDirective, OverlayOrigin, Scrollable],\n  declarations: [ConnectedOverlayDirective, OverlayOrigin, Scrollable],\n  providers: [OVERLAY_PROVIDERS],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction OverlayModule_tsickle_Closure_declarations() {\n/** @type {?} */\nOverlayModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOverlayModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}