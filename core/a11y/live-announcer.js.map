{"version":3,"sources":["../../../../../src/lib/core/a11y/live-announcer.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,UAAU,EACV,WAAW,EACX,QAAQ,EACR,MAAM,EACN,QAAQ,GACT,MAAM,eAAA,CAAgB;AAEvB,MAAM,CAAC,MAAA,gBAAA,CAAM,4BAAA,GAAgC,IAAI,WAAA,CAAY,sBAAC,CAAsB,CAAC;AAIrF,MAEC;IAAD;;OAEG;IACH,YACe,YAAe;QAC1B,yFAAyF;QACzF,4FAA4F;QAC5F,iEAAiE;QACjE,IAAI,CAAC,YAAY,GAAG,YAAY,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAChE,CAAC;IACH;;;;;OAKG;IACH,QACG,CAAA,OAAA,EAAA,aAAA,QAAA;QAAC,IAAI,CACC,YAAC,CAAY,WAAC,GAAa,EAAA,CAAG;QACnC,6EAA6E;QAC7E,IAAI,CACC,YAAC,CAAY,YAAC,CAAY,WAAC,EAAY,UAAA,CAAW,CAAC;QACxD,iFAAiF;QACjF,wFAAwF;QACxF,2FAA2F;QAC3F,kEAAkE;QAClE,2CAA2C;QAC3C,UAAU,CACC,MAAM,IAAA,CAAK,YAAC,CAAY,WAAC,GAAa,OAAA,EAAS,GAAA,CAAI,CAAC;IAAjE,CAAC;IACH;;;OAGG;IACH,kBADG;QAEC,EAAE,CAAC,CAAC,IADC,CAAI,YAAC,IAAe,IAAA,CAAK,YAAC,CAAY,UAAC,CAAU,CAAC,CAAA;YAErD,IAAI,CADC,YAAC,CAAY,UAAC,CAAU,WAAC,CAAW,IAAC,CAAI,YAAC,CAAY,CAAC;QAE9D,CAAC;IACH,CAAC;IACH;;OAEG;IAFA,kBAAA;QAIC,IAAI,gBAAgB,CAHhB,MAAA,GAAS,QAAA,CAAS,aAAC,CAAa,KAAC,CAAK,CAAC;QAK3C,MAAM,CAHC,SAAC,CAAS,GAAC,CAAG,qBAAC,CAAqB,CAAC;QAI5C,MAAM,CAHC,YAAC,CAAY,aAAC,EAAc,MAAA,CAAO,CAAC;QAI3C,MAAM,CAHC,YAAC,CAAY,WAAC,EAAY,QAAA,CAAS,CAAC;QAK3C,QAAQ,CAHC,IAAC,CAAI,WAAC,CAAW,MAAC,CAAM,CAAC;QAKlC,MAAM,CAHC,MAAA,CAAO;IAIhB,CAAC;;AADI,wBAAA,GAAoC;IAI3C,EAHE,IAAA,EAAM,UAAA,EAAW;CAIlB,CAHC;AAIF;;GAEG;AAJF,4BAAA,GAAA,MAAA;IAMD,EAAC,IAAI,EAAE,SAPE,EAAA,UAAiB,EAAG,CAAA,EAAI,IAAA,EAAA,QAAc,EAAC,EAAA,EAAA,IAAA,EAAW,MAAE,EAAA,IAAA,EAAA,CAAA,4BAAA,EAAA,EAAA,EAAA,EAAA;CAQ5D,CAPC;AAUF;IACA,gBAPW;IAQX,aAPU,CAAA,UAAA,CAAA;IAQV;;;OAGG;IACH,aAPG,CAAA,cAAA,CAAA;IAQH,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,YAAY,CAAC;AACrC,CAAC;AAED;;;;GAIG;AACH,MAtBC,0CAAA,gBAAA,EAAA,WAAA;IAuBC,MAAM,CA7BC,gBAAA,IAAoB,IAAI,aAAA,CAAc,WAAC,CAAW,CAAC;AA8B5D,CAAC;AAAA,CA7BC;AA+BF,MAAM,CA7BC,MAAA,gBAAA,CAAM,uBAAA,GAA0B;IA8BrC,yFAAyF;IACzF,OAAO,EA7BE,aAAA;IA8BT,IAAI,EA7BE;QA8BJ,CAAC,IA7BI,QAAA,EAAS,EAAG,IAAI,QAAA,EAAS,EAAG,aAAA,CAAc;QA8B/C,CAAC,IA7BI,QAAA,EAAS,EAAG,IAAI,MAAA,CAAO,4BAAC,CAA4B,CAAC;KA8B3D;IACD,UAAU,EA7BE,+BAAA;CA8Bb,CA7BC","file":"live-announcer.js","sourceRoot":"","sourcesContent":["import {\n  Injectable,\n  OpaqueToken,\n  Optional,\n  Inject,\n  SkipSelf,\n} from '@angular/core';\n\nexport const /** @type {?} */ LIVE_ANNOUNCER_ELEMENT_TOKEN  = new OpaqueToken('liveAnnouncerElement');\n\n/** Possible politeness levels. */\nexport type AriaLivePoliteness = 'off' | 'polite' | 'assertive';\nexport class LiveAnnouncer {\nprivate _liveElement: Element;\n/**\n * @param {?} elementToken\n */\nconstructor(  elementToken: any) {\n\n    // We inject the live element as `any` because the constructor signature cannot reference\n    // browser globals (HTMLElement) on non-browser environments, since having a class decorator\n    // causes TypeScript to preserve the constructor signature types.\n    this._liveElement = elementToken || this._createLiveElement();\n  }\n/**\n * Announces a message to screenreaders.\n * @param {?} message Message to be announced to the screenreader\n * @param {?=} politeness The politeness of the announcer element\n * @return {?}\n */\nannounce(message: string, politeness: AriaLivePoliteness = 'polite'): void {\n    this._liveElement.textContent = '';\n\n    // TODO: ensure changing the politeness works on all environments we support.\n    this._liveElement.setAttribute('aria-live', politeness);\n\n    // This 100ms timeout is necessary for some browser + screen-reader combinations:\n    // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n    // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n    //   second time without clearing and then using a non-zero delay.\n    // (using JAWS 17 at time of this writing).\n    setTimeout(() => this._liveElement.textContent = message, 100);\n  }\n/**\n * Removes the aria-live element from the DOM.\n * @return {?}\n */\n_removeLiveElement() {\n    if (this._liveElement && this._liveElement.parentNode) {\n      this._liveElement.parentNode.removeChild(this._liveElement);\n    }\n  }\n/**\n * @return {?}\n */\nprivate _createLiveElement(): Element {\n    let /** @type {?} */ liveEl = document.createElement('div');\n\n    liveEl.classList.add('cdk-visually-hidden');\n    liveEl.setAttribute('aria-atomic', 'true');\n    liveEl.setAttribute('aria-live', 'polite');\n\n    document.body.appendChild(liveEl);\n\n    return liveEl;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_ELEMENT_TOKEN, ] }, ]},\n];\n}\n\nfunction LiveAnnouncer_tsickle_Closure_declarations() {\n/** @type {?} */\nLiveAnnouncer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLiveAnnouncer.ctorParameters;\n/** @type {?} */\nLiveAnnouncer.prototype._liveElement;\n}\n\n/**\n * @param {?} parentDispatcher\n * @param {?} liveElement\n * @return {?}\n */\nexport function LIVE_ANNOUNCER_PROVIDER_FACTORY(parentDispatcher: LiveAnnouncer, liveElement: any) {\n  return parentDispatcher || new LiveAnnouncer(liveElement);\n};\n\nexport const /** @type {?} */ LIVE_ANNOUNCER_PROVIDER = {\n  // If there is already a LiveAnnouncer available, use that. Otherwise, provide a new one.\n  provide: LiveAnnouncer,\n  deps: [\n    [new Optional(), new SkipSelf(), LiveAnnouncer],\n    [new Optional(), new Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN)]\n  ],\n  useFactory: LIVE_ANNOUNCER_PROVIDER_FACTORY\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}