{"version":3,"sources":["../../../../../src/lib/core/a11y/focus-key-manager.ts"],"names":[],"mappings":"AAEA,OAAO,EAAA,cAAE,EAA0B,MAAA,oBAAA,CAAA;AASnC,MAEC,sBAAA,SAAA,cAAA;IADD;;OAEG;IACH,YAAG,KAAsC;QACrC,KAAK,CAAC,KAAK,CAAC,CAAC;IACf,CAAC;IACH;;;;;OAKG;IACH,aADG,CAAA,KAAA;QAEC,KAAK,CADC,aAAC,CAAa,KAAC,CAAK,CAAC;QAE3B,IAAI,CADC,UAAC,CAAU,KAAC,EAAK,CAAE;IAE1B,CAAC;CAEF","file":"focus-key-manager.js","sourceRoot":"","sourcesContent":["\nimport {QueryList} from '@angular/core';\nimport {ListKeyManager, CanDisable} from './list-key-manager';\n\n/**\n * This is the interface for focusable items (used by the FocusKeyManager).\n * Each item must know how to focus itself and whether or not it is currently disabled.\n */\nexport interface Focusable extends CanDisable {\n  focus(): void;\n}\nexport class FocusKeyManager extends ListKeyManager<Focusable> {\n/**\n * @param {?} items\n */\nconstructor(items: QueryList<Focusable>) {\n    super(items);\n  }\n/**\n * This method sets the active item to the item at the specified index.\n * It also adds focuses the newly active item.\n * @param {?} index\n * @return {?}\n */\nsetActiveItem(index: number): void {\n    super.setActiveItem(index);\n    this.activeItem.focus();\n  }\n\n}\n"]}