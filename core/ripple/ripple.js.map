{"version":3,"sources":["../../../../../src/lib/core/ripple/ripple.ts"],"names":[],"mappings":"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","file":"ripple.js","sourceRoot":"","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Input,\n  Inject,\n  NgZone,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  OpaqueToken,\n  Optional,\n} from '@angular/core';\nimport {RippleConfig, RippleRenderer} from './ripple-renderer';\nimport {ViewportRuler} from '../overlay/position/viewport-ruler';\nimport {RippleRef} from './ripple-ref';\n\n/** OpaqueToken that can be used to specify the global ripple options. */\nexport const /** @type {?} */ MD_RIPPLE_GLOBAL_OPTIONS = new OpaqueToken('md-ripple-global-options');\n\nexport type RippleGlobalOptions = {\n  disabled?: boolean;\n  baseSpeedFactor?: number;\n};\nexport class MdRipple implements OnChanges, OnDestroy {\n\n  /**\n   * The element that triggers the ripple when click events are received. Defaults to the\n   * directive's host element.\n   */\n  // Prevent TS metadata emit from referencing HTMLElement in ripple.js\n  // Otherwise running this code in a Node environment (e.g Universal) will not work.\n   trigger: HTMLElement|HTMLElement;\n\n  /**\n   * Whether the ripple always originates from the center of the host element's bounds, rather\n   * than originating from the location of the click event.\n   */\n   centered: boolean;\n\n  /**\n   * Whether click events will not trigger the ripple. It can still be triggered by manually\n   * calling createRipple()\n   */\n   disabled: boolean;\n\n  /**\n   * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n   * will be the distance from the center of the ripple to the furthest corner of the host element's\n   * bounding rectangle.\n   */\n   radius: number = 0;\n\n  /**\n   * If set, the normal duration of ripple animations is divided by this value. For example,\n   * setting it to 0.5 will cause the animations to take twice as long.\n   * A changed speedFactor will not modify the fade-out duration of the ripples.\n   */\n   speedFactor: number = 1;\n\n  /** Custom color for ripples. */\n   color: string;\n\n  /** Whether foreground ripples should be visible outside the component's bounds. */\n   unbounded: boolean;\nprivate _rippleRenderer: RippleRenderer;\nprivate _globalOptions: RippleGlobalOptions;\n/**\n * @param {?} elementRef\n * @param {?} ngZone\n * @param {?} ruler\n * @param {?} globalOptions\n */\nconstructor(\n    elementRef: ElementRef,\n    ngZone: NgZone,\n    ruler: ViewportRuler,\n    // Type needs to be `any` because of https://github.com/angular/angular/issues/12631\n      globalOptions: any\n  ) {\n    this._rippleRenderer = new RippleRenderer(elementRef, ngZone, ruler);\n    this._globalOptions = globalOptions ? globalOptions : {};\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    if (changes['trigger'] && this.trigger) {\n      this._rippleRenderer.setTriggerElement(this.trigger);\n    }\n\n    this._rippleRenderer.rippleDisabled = this._globalOptions.disabled || this.disabled;\n    this._rippleRenderer.rippleConfig = this.rippleConfig;\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    // Set the trigger element to null to cleanup all listeners.\n    this._rippleRenderer.setTriggerElement(null);\n  }\n/**\n * Launches a manual ripple at the specified position.\n * @param {?} pageX\n * @param {?} pageY\n * @param {?=} config\n * @return {?}\n */\nlaunch(pageX: number, pageY: number, config = this.rippleConfig): RippleRef {\n    return this._rippleRenderer.fadeInRipple(pageX, pageY, config);\n  }\n/**\n * Fades out all currently showing ripple elements.\n * @return {?}\n */\nfadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n/**\n * Ripple configuration from the directive's input values.\n * @return {?}\n */\nget rippleConfig(): RippleConfig {\n    return {\n      centered: this.centered,\n      speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\n      radius: this.radius,\n      color: this.color\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-ripple], [mat-ripple], [mdRipple], [matRipple]',\n  exportAs: 'mdRipple',\n  host: {\n    '[class.mat-ripple]': 'true',\n    '[class.mat-ripple-unbounded]': 'unbounded'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n{type: ViewportRuler, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_RIPPLE_GLOBAL_OPTIONS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'trigger': [{ type: Input, args: ['mdRippleTrigger', ] },],\n'centered': [{ type: Input, args: ['mdRippleCentered', ] },],\n'disabled': [{ type: Input, args: ['mdRippleDisabled', ] },],\n'radius': [{ type: Input, args: ['mdRippleRadius', ] },],\n'speedFactor': [{ type: Input, args: ['mdRippleSpeedFactor', ] },],\n'color': [{ type: Input, args: ['mdRippleColor', ] },],\n'unbounded': [{ type: Input, args: ['mdRippleUnbounded', ] },],\n};\n}\n\nfunction MdRipple_tsickle_Closure_declarations() {\n/** @type {?} */\nMdRipple.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdRipple.ctorParameters;\n/** @type {?} */\nMdRipple.propDecorators;\n/** @type {?} */\nMdRipple.prototype.trigger;\n/**\n * Whether the ripple always originates from the center of the host element's bounds, rather\n * than originating from the location of the click event.\n * @type {?}\n */\nMdRipple.prototype.centered;\n/**\n * Whether click events will not trigger the ripple. It can still be triggered by manually\n * calling createRipple()\n * @type {?}\n */\nMdRipple.prototype.disabled;\n/**\n * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n * will be the distance from the center of the ripple to the furthest corner of the host element's\n * bounding rectangle.\n * @type {?}\n */\nMdRipple.prototype.radius;\n/**\n * If set, the normal duration of ripple animations is divided by this value. For example,\n * setting it to 0.5 will cause the animations to take twice as long.\n * A changed speedFactor will not modify the fade-out duration of the ripples.\n * @type {?}\n */\nMdRipple.prototype.speedFactor;\n/**\n * Custom color for ripples.\n * @type {?}\n */\nMdRipple.prototype.color;\n/**\n * Whether foreground ripples should be visible outside the component's bounds.\n * @type {?}\n */\nMdRipple.prototype.unbounded;\n/**\n * Renderer for the ripple DOM manipulations.\n * @type {?}\n */\nMdRipple.prototype._rippleRenderer;\n/**\n * Options that are set globally for all ripples.\n * @type {?}\n */\nMdRipple.prototype._globalOptions;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}