{"version":3,"sources":["../../../../../src/lib/core/ripple/ripple-renderer.ts"],"names":[],"mappings":"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","file":"ripple-renderer.js","sourceRoot":"","sourcesContent":["import {ElementRef, NgZone} from '@angular/core';\nimport {ViewportRuler} from '../overlay/position/viewport-ruler';\nimport {RippleRef, RippleState} from './ripple-ref';\n\n/** Fade-in duration for the ripples. Can be modified with the speedFactor option. */\nexport const /** @type {?} */ RIPPLE_FADE_IN_DURATION = 450;\n\n/** Fade-out duration for the ripples in milliseconds. This can't be modified by the speedFactor. */\nexport const /** @type {?} */ RIPPLE_FADE_OUT_DURATION = 400;\n\nexport type RippleConfig = {\n  color?: string;\n  centered?: boolean;\n  radius?: number;\n  speedFactor?: number;\n  persistent?: boolean;\n};\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nexport class RippleRenderer {\nprivate _containerElement: HTMLElement;\nprivate _triggerElement: HTMLElement;\nprivate _isMousedown: boolean = false;\nprivate _triggerEvents = new Map<string, any>();\nprivate _activeRipples = new Set<RippleRef>();\n\n  /** Ripple config for all ripples created by events. */\n  rippleConfig: RippleConfig = {};\n\n  /** Whether mouse ripples should be created or not. */\n  rippleDisabled: boolean = false;\n/**\n * @param {?} _elementRef\n * @param {?} _ngZone\n * @param {?} _ruler\n */\nconstructor(_elementRef: ElementRef,\nprivate _ngZone: NgZone,\nprivate _ruler: ViewportRuler) {\n    this._containerElement = _elementRef.nativeElement;\n\n    // Specify events which need to be registered on the trigger.\n    this._triggerEvents.set('mousedown', this.onMousedown.bind(this));\n    this._triggerEvents.set('mouseup', this.onMouseup.bind(this));\n    this._triggerEvents.set('mouseleave', this.onMouseLeave.bind(this));\n\n    // By default use the host element as trigger element.\n    this.setTriggerElement(this._containerElement);\n  }\n/**\n * Fades in a ripple at the given coordinates.\n * @param {?} pageX\n * @param {?} pageY\n * @param {?=} config\n * @return {?}\n */\nfadeInRipple(pageX: number, pageY: number, config: RippleConfig = {}): RippleRef {\n    let /** @type {?} */ containerRect = this._containerElement.getBoundingClientRect();\n\n    if (config.centered) {\n      pageX = containerRect.left + containerRect.width / 2;\n      pageY = containerRect.top + containerRect.height / 2;\n    } else {\n      // Subtract scroll values from the coordinates because calculations below\n      // are always relative to the viewport rectangle.\n      let /** @type {?} */ scrollPosition = this._ruler.getViewportScrollPosition();\n      pageX -= scrollPosition.left;\n      pageY -= scrollPosition.top;\n    }\n\n    let /** @type {?} */ radius = config.radius || distanceToFurthestCorner(pageX, pageY, containerRect);\n    let /** @type {?} */ duration = RIPPLE_FADE_IN_DURATION * (1 / (config.speedFactor || 1));\n    let /** @type {?} */ offsetX = pageX - containerRect.left;\n    let /** @type {?} */ offsetY = pageY - containerRect.top;\n\n    let /** @type {?} */ ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n\n    // If the color is not set, the default CSS color will be used.\n    ripple.style.backgroundColor = config.color;\n    ripple.style.transitionDuration = `${duration}ms`;\n\n    this._containerElement.appendChild(ripple);\n\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n    enforceStyleRecalculation(ripple);\n\n    ripple.style.transform = 'scale(1)';\n\n    // Exposed reference to the ripple that will be returned.\n    let /** @type {?} */ rippleRef = new RippleRef(this, ripple, config);\n\n    rippleRef.state = RippleState.FADING_IN;\n\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.add(rippleRef);\n\n    // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n    this.runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.VISIBLE;\n\n      if (!config.persistent && !this._isMousedown) {\n        rippleRef.fadeOut();\n      }\n    }, duration);\n\n    return rippleRef;\n  }\n/**\n * Fades out a ripple reference.\n * @param {?} rippleRef\n * @return {?}\n */\nfadeOutRipple(rippleRef: RippleRef) {\n    // For ripples that are not active anymore, don't re-un the fade-out animation.\n    if (!this._activeRipples.delete(rippleRef)) {\n      return;\n    }\n\n    let /** @type {?} */ rippleEl = rippleRef.element;\n\n    rippleEl.style.transitionDuration = `${RIPPLE_FADE_OUT_DURATION}ms`;\n    rippleEl.style.opacity = '0';\n\n    rippleRef.state = RippleState.FADING_OUT;\n\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\n    this.runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.HIDDEN;\n      rippleEl.parentNode.removeChild(rippleEl);\n    }, RIPPLE_FADE_OUT_DURATION);\n  }\n/**\n * Fades out all currently active ripples.\n * @return {?}\n */\nfadeOutAll() {\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\n  }\n/**\n * Sets the trigger element and registers the mouse events.\n * @param {?} element\n * @return {?}\n */\nsetTriggerElement(element: HTMLElement) {\n    // Remove all previously register event listeners from the trigger element.\n    if (this._triggerElement) {\n      this._triggerEvents.forEach((fn, type) => this._triggerElement.removeEventListener(type, fn));\n    }\n\n    if (element) {\n      // If the element is not null, register all event listeners on the trigger element.\n      this._ngZone.runOutsideAngular(() => {\n        this._triggerEvents.forEach((fn, type) => element.addEventListener(type, fn));\n      });\n    }\n\n    this._triggerElement = element;\n  }\n/**\n * Listener being called on mousedown event.\n * @param {?} event\n * @return {?}\n */\nprivate onMousedown(event: MouseEvent) {\n    if (!this.rippleDisabled) {\n      this._isMousedown = true;\n      this.fadeInRipple(event.pageX, event.pageY, this.rippleConfig);\n    }\n  }\n/**\n * Listener being called on mouseup event.\n * @return {?}\n */\nprivate onMouseup() {\n    this._isMousedown = false;\n\n    // Fade-out all ripples that are completely visible and not persistent.\n    this._activeRipples.forEach(ripple => {\n      if (!ripple.config.persistent && ripple.state === RippleState.VISIBLE) {\n        ripple.fadeOut();\n      }\n    });\n  }\n/**\n * Listener being called on mouseleave event.\n * @return {?}\n */\nprivate onMouseLeave() {\n    if (this._isMousedown) {\n      this.onMouseup();\n    }\n  }\n/**\n * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n * @param {?} fn\n * @param {?=} delay\n * @return {?}\n */\nprivate runTimeoutOutsideZone(fn: Function, delay = 0) {\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n\n}\n\nfunction RippleRenderer_tsickle_Closure_declarations() {\n/**\n * Element where the ripples are being added to.\n * @type {?}\n */\nRippleRenderer.prototype._containerElement;\n/**\n * Element which triggers the ripple elements on mouse events.\n * @type {?}\n */\nRippleRenderer.prototype._triggerElement;\n/**\n * Whether the mouse is currently down or not.\n * @type {?}\n */\nRippleRenderer.prototype._isMousedown;\n/**\n * Events to be registered on the trigger element.\n * @type {?}\n */\nRippleRenderer.prototype._triggerEvents;\n/**\n * Set of currently active ripple references.\n * @type {?}\n */\nRippleRenderer.prototype._activeRipples;\n/**\n * Ripple config for all ripples created by events.\n * @type {?}\n */\nRippleRenderer.prototype.rippleConfig;\n/**\n * Whether mouse ripples should be created or not.\n * @type {?}\n */\nRippleRenderer.prototype.rippleDisabled;\n/** @type {?} */\nRippleRenderer.prototype._ngZone;\n/** @type {?} */\nRippleRenderer.prototype._ruler;\n}\n\n/**\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element: HTMLElement) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x: number, y: number, rect: ClientRect) {\n  const /** @type {?} */ distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const /** @type {?} */ distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n"]}