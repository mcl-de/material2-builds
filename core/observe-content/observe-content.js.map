{"version":3,"sources":["../../../../../src/lib/core/observe-content/observe-content.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,UAAU,EACV,QAAQ,EAER,MAAM,EACN,YAAY,EAGb,MAAM,eAAA,CAAgB;AACvB;;;GAGG;AACH,MAEC;IAID;;OAEG;IACH,YADsB,WAAa;QAAb,gBAAA,GAAA,WAAA,CAAa;QANnC;;WAEG;QACH,UACI,GAAA,IAAA,YAAA,EAAA,CAAA;IAE0C,CAAA;IAE9C;;OAEG;IACH,kBAHG;QAIC,IAAI,CAHC,SAAC,GAAW,IAAI,gBAAA,CAAiB,SAAC,IAAY,SAAA,CAAU,OAAC,CAAO,MAAM,IAAA,CAAK,KAAC,CAAK,IAAC,EAAI,CAAE,CAAC,CAAC;QAK/F,IAAI,CAHC,SAAC,CAAS,OAAC,CAAO,IAAC,CAAI,WAAC,CAAW,aAAC,EAAc;YAIrD,aAAa,EAHE,IAAA;YAIf,SAAS,EAHE,IAAA;YAIX,OAAO,EAHE,IAAA;SAIV,CAHC,CAAC;IAIL,CAAC;IACH;;OAEG;IACH,WALG;QAMC,EAAE,CAAC,CAAC,IALC,CAAI,SAAC,CAAS,CAAC,CAAA;YAMlB,IAAI,CALC,SAAC,CAAS,UAAC,EAAU,CAAE;QAM9B,CAAC;IACH,CAAC;;AAJI,yBAAA,GAAoC;IAM3C,EALE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAMvB,QAAQ,EALE,qBAAA;aAMX,EALC,EAAG;CAMJ,CALC;AAMF;;GAEG;AANF,6BAAA,GAAA,MAAA;IAQD,EAAC,IAAI,EAAE,UAAU,GAAG;CACnB,CAAC;AANK,6BAAA,GAAyD;IAQhE,OAAO,EAPE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAQ,IAAA,EAAM,CAAA,mBAAE,EAAmB,EAAG,EAAE;CAQzD,CAPC;AAUF;IACA,gBAAgB;IAChB,cAAc,CAAC,UAAU,CAAC;IAC1B;;;OAGG;IACH,cAAc,CAAC,cAAc,CAAC;IAC9B,gBAAgB;IAChB,cAAc,CAAC,cAAc,CAAC;IAC9B,gBAAgB;IAChB,cAhBE,CAAA,SAAA,CAAA,SAAA,CAAA;IAiBF;;;OAGG;IACH,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC;IAC/B,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC;AACrC,CAAC;AAED,MA3BC;IA4BD;;;OAGG;IACH,MA9BG,CAAA,OAAA;QA+BC,MAAM,CA9BC;YA+BL,QAAQ,EA9BE,oBAAA;YA+BV,SAAS,EA9BE,EAAA;SA+BZ,CA9BC;IA+BJ,CAAC;;AA7BI,+BAAA,GAAoC;IA+B3C,EA9BE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBA+BtB,OAAO,EA9BE,CAAA,cAAE,CAAc;gBA+BzB,YAAY,EA9BE,CAAA,cAAE,CAAc;aA+B/B,EA9BC,EAAG;CA+BJ,CA9BC;AA+BF;;GAEG;AA/BF,mCAAA,GAAA,MAAA,EAiCA,CAAC;AAGF;IACA,gBAAgB;IAChB,oBAAoB,CAAC,UAAU,CAAC;IAChC;;;OAGG;IACH,oBAAoB,CAAC,cAAc,CAAC;AACpC,CAAC","file":"observe-content.js","sourceRoot":"","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  NgModule,\n  ModuleWithProviders,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  AfterContentInit\n} from '@angular/core';\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nexport class ObserveContent implements AfterContentInit, OnDestroy {\nprivate _observer: MutationObserver;\n/**\n * Event emitted for each change in the element's content.\n */\nevent = new EventEmitter<void>();\n/**\n * @param {?} _elementRef\n */\nconstructor(private _elementRef: ElementRef) {}\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._observer = new MutationObserver(mutations => mutations.forEach(() => this.event.emit()));\n\n    this._observer.observe(this._elementRef.nativeElement, {\n      characterData: true,\n      childList: true,\n      subtree: true\n    });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdkObserveContent]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'event': [{ type: Output, args: ['cdkObserveContent', ] },],\n};\n}\n\nfunction ObserveContent_tsickle_Closure_declarations() {\n/** @type {?} */\nObserveContent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nObserveContent.ctorParameters;\n/** @type {?} */\nObserveContent.propDecorators;\n/** @type {?} */\nObserveContent.prototype._observer;\n/**\n * Event emitted for each change in the element's content.\n * @type {?}\n */\nObserveContent.prototype.event;\n/** @type {?} */\nObserveContent.prototype._elementRef;\n}\n\nexport class ObserveContentModule {\n/**\n * @deprecated\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ObserveContentModule,\n      providers: []\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [ObserveContent],\n  declarations: [ObserveContent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ObserveContentModule_tsickle_Closure_declarations() {\n/** @type {?} */\nObserveContentModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nObserveContentModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}