{"version":3,"sources":["../../../../../src/lib/core/observe-content/observe-content.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,UAAU,EACV,QAAQ,EAER,MAAM,EACN,YAAY,EAGb,MAAM,eAAA,CAAgB;AACvB;;;GAGG;AACH,MAEC;IAGD;;OAEG;IACH,YAAsB,WAAa;QAAb,gBAAA,GAAA,WAAA,CAAa;QALjC,8DAA8D;QAC7D,UAAK,GAEG,IAAI,YAAA,EAAkB,CAAG;IAEU,CAAA;IAC9C;;OAEG;IACH,kBAFG;QAGC,IAAI,CAFC,SAAC,GAAW,IAAI,gBAAA,CAAiB,SAAC,IAAY,SAAA,CAAU,OAAC,CAAO,MAAM,IAAA,CAAK,KAAC,CAAK,IAAC,EAAI,CAAE,CAAC,CAAC;QAI/F,IAAI,CAFC,SAAC,CAAS,OAAC,CAAO,IAAC,CAAI,WAAC,CAAW,aAAC,EAAc;YAGrD,aAAa,EAFE,IAAA;YAGf,SAAS,EAFE,IAAA;YAGX,OAAO,EAFE,IAAA;SAGV,CAFC,CAAC;IAGL,CAAC;IACH;;OAEG;IACH,WAJG;QAKC,EAAE,CAAC,CAAC,IAJC,CAAI,SAAC,CAAS,CAAC,CAAA;YAKlB,IAAI,CAJC,SAAC,CAAS,UAAC,EAAU,CAAE;QAK9B,CAAC;IACH,CAAC;;AAHI,yBAAA,GAAoC;IAK3C,EAJE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAKvB,QAAQ,EAJE,qBAAA;aAKX,EAJC,EAAG;CAKJ,CAJC;AAKF;;GAEG;AALF,6BAAA,GAAA,MAAA;IAOD,EAAC,IAAI,EAAE,UAAU,GAAG;CACnB,CAAC;AALK,6BAAA,GAAyD;IAOhE,OAAO,EANE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAQ,IAAA,EAAM,CAAA,mBAAE,EAAmB,EAAG,EAAE;CAOzD,CANC;AASF;IACA,gBAAgB;IAChB,cAAc,CAAC,UAAU,CAAC;IAC1B;;;OAGG;IACH,cAAc,CAAC,cAAc,CAAC;IAC9B,gBAAgB;IAChB,cAAc,CAAC,cAAc,CAAC;IAC9B,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,SAAS,CAAC;IACnC;;;OAGG;IACH,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC;IAC/B,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC;AACrC,CAAC;AAED,MA1BC;IA2BD;;;OAGG;IACH,MA7BG,CAAA,OAAA;QA8BC,MAAM,CA7BC;YA8BL,QAAQ,EA7BE,oBAAA;YA8BV,SAAS,EA7BE,EAAA;SA8BZ,CA7BC;IA8BJ,CAAC;;AA5BI,+BAAA,GAAoC;IA8B3C,EA7BE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBA8BtB,OAAO,EA7BE,CAAA,cAAE,CAAc;gBA8BzB,YAAY,EA7BE,CAAA,cAAE,CAAc;aA8B/B,EA7BC,EAAG;CA8BJ,CA7BC;AA8BF;;GAEG;AA9BF,mCAAA,GAAA,MAAA,EAgCA,CAAC;AAGF;IACA,gBAAgB;IAChB,oBAAoB,CAAC,UAAU,CAAC;IAChC;;;OAGG;IACH,oBAAoB,CAAC,cAAc,CAAC;AACpC,CAAC","file":"observe-content.js","sourceRoot":"","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  NgModule,\n  ModuleWithProviders,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  AfterContentInit\n} from '@angular/core';\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nexport class ObserveContent implements AfterContentInit, OnDestroy {\nprivate _observer: MutationObserver;\n\n  /** Event emitted for each change in the element's content. */\n   event = new EventEmitter<void>();\n/**\n * @param {?} _elementRef\n */\nconstructor(private _elementRef: ElementRef) {}\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._observer = new MutationObserver(mutations => mutations.forEach(() => this.event.emit()));\n\n    this._observer.observe(this._elementRef.nativeElement, {\n      characterData: true,\n      childList: true,\n      subtree: true\n    });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdkObserveContent]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'event': [{ type: Output, args: ['cdkObserveContent', ] },],\n};\n}\n\nfunction ObserveContent_tsickle_Closure_declarations() {\n/** @type {?} */\nObserveContent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nObserveContent.ctorParameters;\n/** @type {?} */\nObserveContent.propDecorators;\n/** @type {?} */\nObserveContent.prototype._observer;\n/**\n * Event emitted for each change in the element's content.\n * @type {?}\n */\nObserveContent.prototype.event;\n/** @type {?} */\nObserveContent.prototype._elementRef;\n}\n\nexport class ObserveContentModule {\n/**\n * @deprecated\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ObserveContentModule,\n      providers: []\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [ObserveContent],\n  declarations: [ObserveContent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ObserveContentModule_tsickle_Closure_declarations() {\n/** @type {?} */\nObserveContentModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nObserveContentModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}